{
  "swagger": "2.0",
  "info": {
    "title": "store api docs",
    "version": "2.0"
  },
  "tags": [
    {
      "name": "accountPayable"
    },
    {
      "name": "afterSales"
    },
    {
      "name": "auditLog"
    },
    {
      "name": "checkDetail"
    },
    {
      "name": "coupon"
    },
    {
      "name": "customer"
    },
    {
      "name": "employee"
    },
    {
      "name": "employeePerformance"
    },
    {
      "name": "financialTransaction"
    },
    {
      "name": "inventory"
    },
    {
      "name": "inventoryCheck"
    },
    {
      "name": "inventoryOperation"
    },
    {
      "name": "notification"
    },
    {
      "name": "product"
    },
    {
      "name": "productCategory"
    },
    {
      "name": "productMedia"
    },
    {
      "name": "productSku"
    },
    {
      "name": "promotion"
    },
    {
      "name": "purchaseOrder"
    },
    {
      "name": "purchaseOrderItem"
    },
    {
      "name": "salesOrder"
    },
    {
      "name": "salesOrderItem"
    },
    {
      "name": "serviceOrder"
    },
    {
      "name": "store"
    },
    {
      "name": "supplier"
    },
    {
      "name": "transferDetail"
    },
    {
      "name": "transferOrder"
    }
  ],
  "host": "localhost:8080",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/accountPayable": {
      "post": {
        "summary": "create accountPayable",
        "operationId": "accountPayable_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountPayableReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountPayableRequest"
            }
          }
        ],
        "tags": [
          "accountPayable"
        ]
      }
    },
    "/api/v1/accountPayable/list": {
      "post": {
        "summary": "list of accountPayable by query parameters",
        "operationId": "accountPayable_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountPayableReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAccountPayableRequest"
            }
          }
        ],
        "tags": [
          "accountPayable"
        ]
      }
    },
    "/api/v1/accountPayable/{id}": {
      "get": {
        "summary": "get accountPayable by id",
        "operationId": "accountPayable_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountPayableByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "accountPayable"
        ]
      },
      "delete": {
        "summary": "delete accountPayable by id",
        "operationId": "accountPayable_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountPayableByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "accountPayable"
        ]
      },
      "put": {
        "summary": "update accountPayable by id",
        "operationId": "accountPayable_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountPayableByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "supplierID": {
                  "type": "integer",
                  "format": "int64"
                },
                "purchaseID": {
                  "type": "string"
                },
                "dueAmount": {
                  "type": "string"
                },
                "paidAmount": {
                  "type": "string"
                },
                "dueDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "accountPayable"
        ]
      }
    },
    "/api/v1/afterSales": {
      "post": {
        "summary": "create afterSales",
        "operationId": "afterSales_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAfterSalesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAfterSalesRequest"
            }
          }
        ],
        "tags": [
          "afterSales"
        ]
      }
    },
    "/api/v1/afterSales/list": {
      "post": {
        "summary": "list of afterSales by query parameters",
        "operationId": "afterSales_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAfterSalesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAfterSalesRequest"
            }
          }
        ],
        "tags": [
          "afterSales"
        ]
      }
    },
    "/api/v1/afterSales/service-orders": {
      "post": {
        "summary": "创建维修工单\n实现逻辑：\n1. 验证客户购买记录有效性\n2. 检查产品是否在保修期内\n3. 分配就近服务网点\n4. 生成带条形码的维修工单",
        "operationId": "afterSales_CreateServiceOrderWithAssignment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateServiceOrderWithAssignmentReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateServiceOrderWithAssignmentRequest"
            }
          }
        ],
        "tags": [
          "afterSales"
        ]
      }
    },
    "/api/v1/afterSales/{id}": {
      "get": {
        "summary": "get afterSales by id",
        "operationId": "afterSales_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAfterSalesByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "afterSales"
        ]
      },
      "delete": {
        "summary": "delete afterSales by id",
        "operationId": "afterSales_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAfterSalesByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "afterSales"
        ]
      },
      "put": {
        "summary": "update afterSales by id",
        "operationId": "afterSales_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAfterSalesByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderID": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "afterSales"
        ]
      }
    },
    "/api/v1/auditLog": {
      "post": {
        "summary": "create auditLog",
        "operationId": "auditLog_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAuditLogReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAuditLogRequest"
            }
          }
        ],
        "tags": [
          "auditLog"
        ]
      }
    },
    "/api/v1/auditLog/list": {
      "post": {
        "summary": "list of auditLog by query parameters",
        "operationId": "auditLog_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAuditLogReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAuditLogRequest"
            }
          }
        ],
        "tags": [
          "auditLog"
        ]
      }
    },
    "/api/v1/auditLog/{id}": {
      "get": {
        "summary": "get auditLog by id",
        "operationId": "auditLog_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAuditLogByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "auditLog"
        ]
      },
      "delete": {
        "summary": "delete auditLog by id",
        "operationId": "auditLog_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAuditLogByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "auditLog"
        ]
      },
      "put": {
        "summary": "update auditLog by id",
        "operationId": "auditLog_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAuditLogByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operatorID": {
                  "type": "integer",
                  "format": "int64"
                },
                "actionType": {
                  "type": "string"
                },
                "targetTable": {
                  "type": "string"
                },
                "targetID": {
                  "type": "string"
                },
                "oldValue": {
                  "type": "string"
                },
                "newValue": {
                  "type": "string"
                },
                "remark": {
                  "type": "string"
                },
                "operateTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "auditLog"
        ]
      }
    },
    "/api/v1/checkDetail": {
      "post": {
        "summary": "create checkDetail",
        "operationId": "checkDetail_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCheckDetailReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCheckDetailRequest"
            }
          }
        ],
        "tags": [
          "checkDetail"
        ]
      }
    },
    "/api/v1/checkDetail/list": {
      "post": {
        "summary": "list of checkDetail by query parameters",
        "operationId": "checkDetail_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCheckDetailReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCheckDetailRequest"
            }
          }
        ],
        "tags": [
          "checkDetail"
        ]
      }
    },
    "/api/v1/checkDetail/{checkID}": {
      "get": {
        "summary": "get checkDetail by checkID",
        "operationId": "checkDetail_GetByCheckID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCheckDetailByCheckIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "checkID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "checkDetail"
        ]
      },
      "delete": {
        "summary": "delete checkDetail by checkID",
        "operationId": "checkDetail_DeleteByCheckID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCheckDetailByCheckIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "checkID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "checkDetail"
        ]
      },
      "put": {
        "summary": "update checkDetail by checkID",
        "operationId": "checkDetail_UpdateByCheckID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCheckDetailByCheckIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "checkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "systemQty": {
                  "type": "integer",
                  "format": "int32"
                },
                "actualQty": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "checkDetail"
        ]
      }
    },
    "/api/v1/coupon": {
      "post": {
        "summary": "create coupon",
        "operationId": "coupon_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCouponReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCouponRequest"
            }
          }
        ],
        "tags": [
          "coupon"
        ]
      }
    },
    "/api/v1/coupon/list": {
      "post": {
        "summary": "list of coupon by query parameters",
        "operationId": "coupon_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCouponReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCouponRequest"
            }
          }
        ],
        "tags": [
          "coupon"
        ]
      }
    },
    "/api/v1/coupon/redeem": {
      "post": {
        "summary": "优惠券核销",
        "operationId": "coupon_RedeemCoupon",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RedeemCouponReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RedeemCouponRequest"
            }
          }
        ],
        "tags": [
          "coupon"
        ]
      }
    },
    "/api/v1/coupon/{id}": {
      "get": {
        "summary": "get coupon by id",
        "operationId": "coupon_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCouponByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "coupon"
        ]
      },
      "delete": {
        "summary": "delete coupon by id",
        "operationId": "coupon_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCouponByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "coupon"
        ]
      },
      "put": {
        "summary": "update coupon by id",
        "operationId": "coupon_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCouponByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "value": {
                  "type": "string"
                },
                "amountCondition": {
                  "type": "string"
                },
                "customerID": {
                  "type": "integer",
                  "format": "int64"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "expireTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "coupon"
        ]
      }
    },
    "/api/v1/customer": {
      "post": {
        "summary": "create customer",
        "operationId": "customer_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerRequest"
            }
          }
        ],
        "tags": [
          "customer"
        ]
      }
    },
    "/api/v1/customer/list": {
      "post": {
        "summary": "list of customer by query parameters",
        "operationId": "customer_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCustomerReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListCustomerRequest"
            }
          }
        ],
        "tags": [
          "customer"
        ]
      }
    },
    "/api/v1/customer/{id}": {
      "get": {
        "summary": "get customer by id",
        "operationId": "customer_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "customer"
        ]
      },
      "delete": {
        "summary": "delete customer by id",
        "operationId": "customer_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCustomerByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "customer"
        ]
      },
      "put": {
        "summary": "update customer by id",
        "operationId": "customer_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomerByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "birthday": {
                  "type": "string"
                },
                "membershipLevel": {
                  "type": "integer",
                  "format": "int32"
                },
                "totalPoints": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "customer"
        ]
      }
    },
    "/api/v1/employee": {
      "post": {
        "summary": "create employee",
        "operationId": "employee_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateEmployeeReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEmployeeRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/change-password": {
      "post": {
        "summary": "修改密码",
        "operationId": "employee_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/list": {
      "post": {
        "summary": "list of employee by query parameters",
        "operationId": "employee_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEmployeeReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListEmployeeRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/login": {
      "post": {
        "summary": "员工登录，获取访问令牌",
        "operationId": "employee_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/logout": {
      "post": {
        "summary": "员工退出登录",
        "operationId": "employee_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/reset-password": {
      "post": {
        "summary": "重置密码",
        "operationId": "employee_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/send-verification-code": {
      "post": {
        "summary": "使用阿里云短信服务，向指定手机号发送验证码，验证码存放在redis中，5分钟内有效",
        "operationId": "employee_SendVerificationCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendVerificationCodeRequest"
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employee/{id}": {
      "get": {
        "summary": "get employee by id",
        "operationId": "employee_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmployeeByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "employee"
        ]
      },
      "delete": {
        "summary": "delete employee by id",
        "operationId": "employee_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteEmployeeByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "employee"
        ]
      },
      "put": {
        "summary": "update employee by id",
        "operationId": "employee_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateEmployeeByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "role": {
                  "type": "integer",
                  "format": "int32"
                },
                "storeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "passwordHash": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "employee"
        ]
      }
    },
    "/api/v1/employeePerformance": {
      "post": {
        "summary": "create employeePerformance",
        "operationId": "employeePerformance_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateEmployeePerformanceReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateEmployeePerformanceRequest"
            }
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      }
    },
    "/api/v1/employeePerformance/calculate-commission": {
      "post": {
        "summary": "计算销售提成\n实现逻辑：\n1. 获取员工当月的销售记录\n2. 应用阶梯提成规则计算奖金\n3. 扣除已退货订单金额\n4. 生成提成明细记录",
        "operationId": "employeePerformance_CalculateSalesCommission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CalculateSalesCommissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CalculateSalesCommissionRequest"
            }
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      }
    },
    "/api/v1/employeePerformance/list": {
      "post": {
        "summary": "list of employeePerformance by query parameters",
        "operationId": "employeePerformance_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListEmployeePerformanceReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListEmployeePerformanceRequest"
            }
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      }
    },
    "/api/v1/employeePerformance/{id}": {
      "get": {
        "summary": "get employeePerformance by id",
        "operationId": "employeePerformance_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetEmployeePerformanceByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      },
      "delete": {
        "summary": "delete employeePerformance by id",
        "operationId": "employeePerformance_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteEmployeePerformanceByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      },
      "put": {
        "summary": "update employeePerformance by id",
        "operationId": "employeePerformance_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateEmployeePerformanceByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "employeeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "month": {
                  "type": "string"
                },
                "salesAmount": {
                  "type": "string"
                },
                "commission": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "employeePerformance"
        ]
      }
    },
    "/api/v1/financialTransaction": {
      "post": {
        "summary": "create financialTransaction",
        "operationId": "financialTransaction_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateFinancialTransactionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateFinancialTransactionRequest"
            }
          }
        ],
        "tags": [
          "financialTransaction"
        ]
      }
    },
    "/api/v1/financialTransaction/list": {
      "post": {
        "summary": "list of financialTransaction by query parameters",
        "operationId": "financialTransaction_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListFinancialTransactionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFinancialTransactionRequest"
            }
          }
        ],
        "tags": [
          "financialTransaction"
        ]
      }
    },
    "/api/v1/financialTransaction/{id}": {
      "get": {
        "summary": "get financialTransaction by id",
        "operationId": "financialTransaction_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFinancialTransactionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "financialTransaction"
        ]
      },
      "delete": {
        "summary": "delete financialTransaction by id",
        "operationId": "financialTransaction_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteFinancialTransactionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "financialTransaction"
        ]
      },
      "put": {
        "summary": "update financialTransaction by id",
        "operationId": "financialTransaction_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateFinancialTransactionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "amount": {
                  "type": "string"
                },
                "relatedID": {
                  "type": "string"
                },
                "transactionTime": {
                  "type": "string"
                },
                "operator": {
                  "type": "integer",
                  "format": "int64"
                },
                "remark": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "financialTransaction"
        ]
      }
    },
    "/api/v1/inventory": {
      "post": {
        "summary": "create inventory",
        "operationId": "inventory_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryRequest"
            }
          }
        ],
        "tags": [
          "inventory"
        ]
      }
    },
    "/api/v1/inventory/list": {
      "post": {
        "summary": "list of inventory by query parameters",
        "operationId": "inventory_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInventoryReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInventoryRequest"
            }
          }
        ],
        "tags": [
          "inventory"
        ]
      }
    },
    "/api/v1/inventory/transfer": {
      "post": {
        "summary": "执行跨仓库调拨操作\n实现逻辑：\n1. 校验源仓库库存是否充足\n2. 生成调拨单并锁定库存\n3. 触发物流系统通知\n4. 更新双方仓库库存记录",
        "operationId": "inventory_ExecuteTransfer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteTransferReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExecuteTransferRequest"
            }
          }
        ],
        "tags": [
          "inventory"
        ]
      }
    },
    "/api/v1/inventory/{id}": {
      "get": {
        "summary": "get inventory by id",
        "operationId": "inventory_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInventoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "inventory"
        ]
      },
      "delete": {
        "summary": "delete inventory by id",
        "operationId": "inventory_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteInventoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "inventory"
        ]
      },
      "put": {
        "summary": "update inventory by id",
        "operationId": "inventory_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateInventoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "storeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "safetyStock": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "inventory"
        ]
      }
    },
    "/api/v1/inventoryCheck": {
      "post": {
        "summary": "create inventoryCheck",
        "operationId": "inventoryCheck_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryCheckReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryCheckRequest"
            }
          }
        ],
        "tags": [
          "inventoryCheck"
        ]
      }
    },
    "/api/v1/inventoryCheck/list": {
      "post": {
        "summary": "list of inventoryCheck by query parameters",
        "operationId": "inventoryCheck_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInventoryCheckReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInventoryCheckRequest"
            }
          }
        ],
        "tags": [
          "inventoryCheck"
        ]
      }
    },
    "/api/v1/inventoryCheck/{id}": {
      "get": {
        "summary": "get inventoryCheck by id",
        "operationId": "inventoryCheck_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInventoryCheckByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "inventoryCheck"
        ]
      },
      "delete": {
        "summary": "delete inventoryCheck by id",
        "operationId": "inventoryCheck_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteInventoryCheckByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "inventoryCheck"
        ]
      },
      "put": {
        "summary": "update inventoryCheck by id",
        "operationId": "inventoryCheck_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateInventoryCheckByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "storeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "operatorID": {
                  "type": "integer",
                  "format": "int64"
                },
                "checkTime": {
                  "type": "string"
                },
                "totalDiff": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "inventoryCheck"
        ]
      }
    },
    "/api/v1/inventoryOperation": {
      "post": {
        "summary": "create inventoryOperation",
        "operationId": "inventoryOperation_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryOperationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateInventoryOperationRequest"
            }
          }
        ],
        "tags": [
          "inventoryOperation"
        ]
      }
    },
    "/api/v1/inventoryOperation/list": {
      "post": {
        "summary": "list of inventoryOperation by query parameters",
        "operationId": "inventoryOperation_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListInventoryOperationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInventoryOperationRequest"
            }
          }
        ],
        "tags": [
          "inventoryOperation"
        ]
      }
    },
    "/api/v1/inventoryOperation/{id}": {
      "get": {
        "summary": "get inventoryOperation by id",
        "operationId": "inventoryOperation_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInventoryOperationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "inventoryOperation"
        ]
      },
      "delete": {
        "summary": "delete inventoryOperation by id",
        "operationId": "inventoryOperation_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteInventoryOperationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "inventoryOperation"
        ]
      },
      "put": {
        "summary": "update inventoryOperation by id",
        "operationId": "inventoryOperation_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateInventoryOperationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inventoryID": {
                  "type": "integer",
                  "format": "int64"
                },
                "storeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "relatedOrder": {
                  "type": "string"
                },
                "remark": {
                  "type": "string"
                },
                "operator": {
                  "type": "integer",
                  "format": "int64"
                },
                "operateTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "inventoryOperation"
        ]
      }
    },
    "/api/v1/notification": {
      "post": {
        "summary": "create notification",
        "operationId": "notification_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateNotificationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateNotificationRequest"
            }
          }
        ],
        "tags": [
          "notification"
        ]
      }
    },
    "/api/v1/notification/list": {
      "post": {
        "summary": "list of notification by query parameters",
        "operationId": "notification_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNotificationReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListNotificationRequest"
            }
          }
        ],
        "tags": [
          "notification"
        ]
      }
    },
    "/api/v1/notification/send": {
      "post": {
        "summary": "发送实时通知",
        "operationId": "notification_SendRealTimeNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendNotificationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendNotificationRequest"
            }
          }
        ],
        "tags": [
          "notification"
        ]
      }
    },
    "/api/v1/notification/{id}": {
      "get": {
        "summary": "get notification by id",
        "operationId": "notification_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotificationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "notification"
        ]
      },
      "delete": {
        "summary": "delete notification by id",
        "operationId": "notification_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteNotificationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "notification"
        ]
      },
      "put": {
        "summary": "update notification by id",
        "operationId": "notification_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateNotificationByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "recipient": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "sendStatus": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "notification"
        ]
      }
    },
    "/api/v1/product": {
      "post": {
        "summary": "create product",
        "operationId": "product_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProductReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductRequest"
            }
          }
        ],
        "tags": [
          "product"
        ]
      }
    },
    "/api/v1/product/list": {
      "post": {
        "summary": "list of product by query parameters",
        "operationId": "product_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListProductRequest"
            }
          }
        ],
        "tags": [
          "product"
        ]
      }
    },
    "/api/v1/product/{id}": {
      "get": {
        "summary": "get product by id",
        "operationId": "product_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "product"
        ]
      },
      "delete": {
        "summary": "delete product by id",
        "operationId": "product_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProductByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "product"
        ]
      },
      "put": {
        "summary": "update product by id",
        "operationId": "product_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProductByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "categoryID": {
                  "type": "integer",
                  "format": "int64"
                },
                "brand": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "spec": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "warrantyMonths": {
                  "type": "integer",
                  "format": "int64"
                },
                "serviceTerms": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "product"
        ]
      }
    },
    "/api/v1/productCategory": {
      "post": {
        "summary": "create productCategory",
        "operationId": "productCategory_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProductCategoryReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductCategoryRequest"
            }
          }
        ],
        "tags": [
          "productCategory"
        ]
      }
    },
    "/api/v1/productCategory/list": {
      "post": {
        "summary": "list of productCategory by query parameters",
        "operationId": "productCategory_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductCategoryReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListProductCategoryRequest"
            }
          }
        ],
        "tags": [
          "productCategory"
        ]
      }
    },
    "/api/v1/productCategory/{id}": {
      "get": {
        "summary": "get productCategory by id",
        "operationId": "productCategory_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductCategoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productCategory"
        ]
      },
      "delete": {
        "summary": "delete productCategory by id",
        "operationId": "productCategory_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProductCategoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productCategory"
        ]
      },
      "put": {
        "summary": "update productCategory by id",
        "operationId": "productCategory_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProductCategoryByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentID": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                },
                "level": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "productCategory"
        ]
      }
    },
    "/api/v1/productMedia": {
      "post": {
        "summary": "create productMedia",
        "operationId": "productMedia_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProductMediaReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductMediaRequest"
            }
          }
        ],
        "tags": [
          "productMedia"
        ]
      }
    },
    "/api/v1/productMedia/list": {
      "post": {
        "summary": "list of productMedia by query parameters",
        "operationId": "productMedia_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductMediaReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListProductMediaRequest"
            }
          }
        ],
        "tags": [
          "productMedia"
        ]
      }
    },
    "/api/v1/productMedia/upload": {
      "post": {
        "summary": "上传多媒体文件",
        "operationId": "productMedia_UploadMedia",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UploadMediaReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadMediaRequest"
            }
          }
        ],
        "tags": [
          "productMedia"
        ]
      }
    },
    "/api/v1/productMedia/{id}": {
      "get": {
        "summary": "get productMedia by id",
        "operationId": "productMedia_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductMediaByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productMedia"
        ]
      },
      "delete": {
        "summary": "delete productMedia by id",
        "operationId": "productMedia_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProductMediaByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productMedia"
        ]
      },
      "put": {
        "summary": "update productMedia by id",
        "operationId": "productMedia_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProductMediaByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "integer",
                  "format": "int64"
                },
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "url": {
                  "type": "string"
                },
                "sortOrder": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "productMedia"
        ]
      }
    },
    "/api/v1/productSku": {
      "post": {
        "summary": "create productSku",
        "operationId": "productSku_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProductSkuReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductSkuRequest"
            }
          }
        ],
        "tags": [
          "productSku"
        ]
      }
    },
    "/api/v1/productSku/list": {
      "post": {
        "summary": "list of productSku by query parameters",
        "operationId": "productSku_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductSkuReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListProductSkuRequest"
            }
          }
        ],
        "tags": [
          "productSku"
        ]
      }
    },
    "/api/v1/productSku/{id}": {
      "get": {
        "summary": "get productSku by id",
        "operationId": "productSku_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductSkuByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productSku"
        ]
      },
      "delete": {
        "summary": "delete productSku by id",
        "operationId": "productSku_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProductSkuByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "productSku"
        ]
      },
      "put": {
        "summary": "update productSku by id",
        "operationId": "productSku_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProductSkuByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "integer",
                  "format": "int64"
                },
                "skuCode": {
                  "type": "string"
                },
                "attributes": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "stock": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "productSku"
        ]
      }
    },
    "/api/v1/promotion": {
      "post": {
        "summary": "create promotion",
        "operationId": "promotion_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePromotionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePromotionRequest"
            }
          }
        ],
        "tags": [
          "promotion"
        ]
      }
    },
    "/api/v1/promotion/list": {
      "post": {
        "summary": "list of promotion by query parameters",
        "operationId": "promotion_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPromotionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPromotionRequest"
            }
          }
        ],
        "tags": [
          "promotion"
        ]
      }
    },
    "/api/v1/promotion/{id}": {
      "get": {
        "summary": "get promotion by id",
        "operationId": "promotion_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPromotionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "promotion"
        ]
      },
      "delete": {
        "summary": "delete promotion by id",
        "operationId": "promotion_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePromotionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "promotion"
        ]
      },
      "put": {
        "summary": "update promotion by id",
        "operationId": "promotion_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePromotionByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "integer",
                  "format": "int32"
                },
                "rule": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string"
                },
                "endTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "promotion"
        ]
      }
    },
    "/api/v1/promotion/{promotionID}/coupons": {
      "post": {
        "summary": "创建促销活动与优惠券绑定关系\n实现逻辑：\n1. 验证促销活动是否存在且处于可编辑状态\n2. 检查优惠券模板是否有效（类型匹配、有效期覆盖）\n3. 建立促销活动与优惠券的绑定关系",
        "operationId": "promotion_BindCouponTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BindCouponTemplateReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "promotionID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "couponIDs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "promotion"
        ]
      }
    },
    "/api/v1/purchaseOrder": {
      "post": {
        "summary": "创建销售订单\n实现逻辑：\n1. 验证客户是否存在\n2. 检查库存可用性\n3. 计算订单总金额（含促销优惠）\n4. 生成唯一订单号\n5. 扣减库存\n6. 记录财务流水",
        "operationId": "purchaseOrder_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePurchaseOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePurchaseOrderRequest"
            }
          }
        ],
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/api/v1/purchaseOrder/list": {
      "post": {
        "summary": "list of purchaseOrder by query parameters",
        "operationId": "purchaseOrder_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPurchaseOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPurchaseOrderRequest"
            }
          }
        ],
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/api/v1/purchaseOrder/{id}": {
      "get": {
        "summary": "get purchaseOrder by id",
        "operationId": "purchaseOrder_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPurchaseOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "purchaseOrder"
        ]
      },
      "delete": {
        "summary": "delete purchaseOrder by id",
        "operationId": "purchaseOrder_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePurchaseOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "purchaseOrder"
        ]
      },
      "put": {
        "summary": "update purchaseOrder by id",
        "operationId": "purchaseOrder_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePurchaseOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "supplierID": {
                  "type": "integer",
                  "format": "int64"
                },
                "totalAmount": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "expectedDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "purchaseOrder"
        ]
      }
    },
    "/api/v1/purchaseOrderItem": {
      "post": {
        "summary": "create purchaseOrderItem",
        "operationId": "purchaseOrderItem_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePurchaseOrderItemReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePurchaseOrderItemRequest"
            }
          }
        ],
        "tags": [
          "purchaseOrderItem"
        ]
      }
    },
    "/api/v1/purchaseOrderItem/list": {
      "post": {
        "summary": "list of purchaseOrderItem by query parameters",
        "operationId": "purchaseOrderItem_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPurchaseOrderItemReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListPurchaseOrderItemRequest"
            }
          }
        ],
        "tags": [
          "purchaseOrderItem"
        ]
      }
    },
    "/api/v1/purchaseOrderItem/{id}": {
      "get": {
        "summary": "get purchaseOrderItem by id",
        "operationId": "purchaseOrderItem_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPurchaseOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "purchaseOrderItem"
        ]
      },
      "delete": {
        "summary": "delete purchaseOrderItem by id",
        "operationId": "purchaseOrderItem_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePurchaseOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "purchaseOrderItem"
        ]
      },
      "put": {
        "summary": "update purchaseOrderItem by id",
        "operationId": "purchaseOrderItem_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePurchaseOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderID": {
                  "type": "string"
                },
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int64"
                },
                "price": {
                  "type": "string"
                },
                "unitPrice": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "purchaseOrderItem"
        ]
      }
    },
    "/api/v1/salesOrder": {
      "post": {
        "summary": "create salesOrder",
        "operationId": "salesOrder_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSalesOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSalesOrderRequest"
            }
          }
        ],
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/api/v1/salesOrder/hot-sales": {
      "get": {
        "summary": "生成热销商品分析报告\n实现逻辑：\n1. 按指定时间范围统计销量\n2. 计算商品销售增长率\n3. 关联库存数据标记滞销风险\n4. 生成可视化数据格式（JSON/CSV）",
        "operationId": "salesOrder_GenerateHotSalesReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateHotSalesReportReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "topN",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/api/v1/salesOrder/list": {
      "post": {
        "summary": "list of salesOrder by query parameters",
        "operationId": "salesOrder_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSalesOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSalesOrderRequest"
            }
          }
        ],
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/api/v1/salesOrder/{id}": {
      "get": {
        "summary": "get salesOrder by id",
        "operationId": "salesOrder_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSalesOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "salesOrder"
        ]
      },
      "delete": {
        "summary": "delete salesOrder by id",
        "operationId": "salesOrder_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSalesOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "salesOrder"
        ]
      },
      "put": {
        "summary": "update salesOrder by id",
        "operationId": "salesOrder_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSalesOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "storeID": {
                  "type": "integer",
                  "format": "int64"
                },
                "customerID": {
                  "type": "integer",
                  "format": "int64"
                },
                "totalAmount": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "paymentMethod": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "salesOrder"
        ]
      }
    },
    "/api/v1/salesOrderItem": {
      "post": {
        "summary": "create salesOrderItem",
        "operationId": "salesOrderItem_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSalesOrderItemReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSalesOrderItemRequest"
            }
          }
        ],
        "tags": [
          "salesOrderItem"
        ]
      }
    },
    "/api/v1/salesOrderItem/list": {
      "post": {
        "summary": "list of salesOrderItem by query parameters",
        "operationId": "salesOrderItem_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSalesOrderItemReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSalesOrderItemRequest"
            }
          }
        ],
        "tags": [
          "salesOrderItem"
        ]
      }
    },
    "/api/v1/salesOrderItem/{id}": {
      "get": {
        "summary": "get salesOrderItem by id",
        "operationId": "salesOrderItem_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSalesOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "salesOrderItem"
        ]
      },
      "delete": {
        "summary": "delete salesOrderItem by id",
        "operationId": "salesOrderItem_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSalesOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "salesOrderItem"
        ]
      },
      "put": {
        "summary": "update salesOrderItem by id",
        "operationId": "salesOrderItem_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSalesOrderItemByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "orderID": {
                  "type": "string"
                },
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int64"
                },
                "price": {
                  "type": "string"
                },
                "unitPrice": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "salesOrderItem"
        ]
      }
    },
    "/api/v1/serviceOrder": {
      "post": {
        "summary": "create serviceOrder",
        "operationId": "serviceOrder_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateServiceOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateServiceOrderRequest"
            }
          }
        ],
        "tags": [
          "serviceOrder"
        ]
      }
    },
    "/api/v1/serviceOrder/list": {
      "post": {
        "summary": "list of serviceOrder by query parameters",
        "operationId": "serviceOrder_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListServiceOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListServiceOrderRequest"
            }
          }
        ],
        "tags": [
          "serviceOrder"
        ]
      }
    },
    "/api/v1/serviceOrder/{id}": {
      "get": {
        "summary": "get serviceOrder by id",
        "operationId": "serviceOrder_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServiceOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "serviceOrder"
        ]
      },
      "delete": {
        "summary": "delete serviceOrder by id",
        "operationId": "serviceOrder_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteServiceOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "serviceOrder"
        ]
      },
      "put": {
        "summary": "update serviceOrder by id",
        "operationId": "serviceOrder_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateServiceOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerID": {
                  "type": "integer",
                  "format": "int64"
                },
                "productID": {
                  "type": "integer",
                  "format": "int64"
                },
                "faultDesc": {
                  "type": "string"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "technicianID": {
                  "type": "integer",
                  "format": "int64"
                },
                "completionTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "serviceOrder"
        ]
      }
    },
    "/api/v1/store": {
      "post": {
        "summary": "create store",
        "operationId": "store_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateStoreReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStoreRequest"
            }
          }
        ],
        "tags": [
          "store"
        ]
      }
    },
    "/api/v1/store/list": {
      "post": {
        "summary": "list of store by query parameters",
        "operationId": "store_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListStoreReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListStoreRequest"
            }
          }
        ],
        "tags": [
          "store"
        ]
      }
    },
    "/api/v1/store/{id}": {
      "get": {
        "summary": "get store by id",
        "operationId": "store_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStoreByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "store"
        ]
      },
      "delete": {
        "summary": "delete store by id",
        "operationId": "store_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteStoreByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "store"
        ]
      },
      "put": {
        "summary": "update store by id",
        "operationId": "store_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateStoreByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "contactPhone": {
                  "type": "string"
                },
                "managerID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "store"
        ]
      }
    },
    "/api/v1/supplier": {
      "post": {
        "summary": "create supplier",
        "operationId": "supplier_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSupplierReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSupplierRequest"
            }
          }
        ],
        "tags": [
          "supplier"
        ]
      }
    },
    "/api/v1/supplier/list": {
      "post": {
        "summary": "list of supplier by query parameters",
        "operationId": "supplier_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSupplierReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSupplierRequest"
            }
          }
        ],
        "tags": [
          "supplier"
        ]
      }
    },
    "/api/v1/supplier/{id}": {
      "get": {
        "summary": "get supplier by id",
        "operationId": "supplier_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSupplierByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "supplier"
        ]
      },
      "delete": {
        "summary": "delete supplier by id",
        "operationId": "supplier_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSupplierByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          }
        ],
        "tags": [
          "supplier"
        ]
      },
      "put": {
        "summary": "update supplier by id",
        "operationId": "supplier_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSupplierByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "contactPerson": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "paymentTerms": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "supplier"
        ]
      }
    },
    "/api/v1/transferDetail": {
      "post": {
        "summary": "create transferDetail",
        "operationId": "transferDetail_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTransferDetailReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTransferDetailRequest"
            }
          }
        ],
        "tags": [
          "transferDetail"
        ]
      }
    },
    "/api/v1/transferDetail/list": {
      "post": {
        "summary": "list of transferDetail by query parameters",
        "operationId": "transferDetail_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTransferDetailReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTransferDetailRequest"
            }
          }
        ],
        "tags": [
          "transferDetail"
        ]
      }
    },
    "/api/v1/transferDetail/{transferID}": {
      "get": {
        "summary": "get transferDetail by transferID",
        "operationId": "transferDetail_GetByTransferID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransferDetailByTransferIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transferID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "transferDetail"
        ]
      },
      "delete": {
        "summary": "delete transferDetail by transferID",
        "operationId": "transferDetail_DeleteByTransferID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTransferDetailByTransferIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transferID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "transferDetail"
        ]
      },
      "put": {
        "summary": "update transferDetail by transferID",
        "operationId": "transferDetail_UpdateByTransferID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTransferDetailByTransferIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transferID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "skuID": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "tags": [
          "transferDetail"
        ]
      }
    },
    "/api/v1/transferOrder": {
      "post": {
        "summary": "create transferOrder",
        "operationId": "transferOrder_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTransferOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTransferOrderRequest"
            }
          }
        ],
        "tags": [
          "transferOrder"
        ]
      }
    },
    "/api/v1/transferOrder/list": {
      "post": {
        "summary": "list of transferOrder by query parameters",
        "operationId": "transferOrder_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTransferOrderReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTransferOrderRequest"
            }
          }
        ],
        "tags": [
          "transferOrder"
        ]
      }
    },
    "/api/v1/transferOrder/precheck": {
      "post": {
        "summary": "库存调拨预检查",
        "operationId": "transferOrder_PrecheckTransfer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PrecheckTransferReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PrecheckTransferRequest"
            }
          }
        ],
        "tags": [
          "transferOrder"
        ]
      }
    },
    "/api/v1/transferOrder/{id}": {
      "get": {
        "summary": "get transferOrder by id",
        "operationId": "transferOrder_GetByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransferOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "transferOrder"
        ]
      },
      "delete": {
        "summary": "delete transferOrder by id",
        "operationId": "transferOrder_DeleteByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTransferOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "transferOrder"
        ]
      },
      "put": {
        "summary": "update transferOrder by id",
        "operationId": "transferOrder_UpdateByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTransferOrderByIDReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fromStore": {
                  "type": "integer",
                  "format": "int64"
                },
                "toStore": {
                  "type": "integer",
                  "format": "int64"
                },
                "totalQuantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "status": {
                  "type": "integer",
                  "format": "int32"
                },
                "completeTime": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "transferOrder"
        ]
      }
    }
  },
  "definitions": {
    "GenerateHotSalesReportReplyHotSaleItem": {
      "type": "object",
      "properties": {
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "skuName": {
          "type": "string"
        },
        "totalSold": {
          "type": "integer",
          "format": "int64"
        },
        "growthRate": {
          "type": "number",
          "format": "double"
        },
        "overstockRisk": {
          "type": "boolean"
        }
      }
    },
    "PrecheckTransferReplyStockStatus": {
      "type": "object",
      "properties": {
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "available": {
          "type": "boolean"
        },
        "availableQty": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storev1TransferItem": {
      "type": "object",
      "properties": {
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "typesColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "exp": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "logic": {
          "type": "string"
        }
      }
    },
    "typesParams": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typesColumn"
          }
        }
      }
    },
    "v1AccountPayable": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "supplierID": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseID": {
          "type": "string"
        },
        "dueAmount": {
          "type": "string"
        },
        "paidAmount": {
          "type": "string"
        },
        "dueDate": {
          "type": "string"
        }
      }
    },
    "v1AfterSales": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "orderID": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1AuditLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "operatorID": {
          "type": "integer",
          "format": "int64"
        },
        "actionType": {
          "type": "string"
        },
        "targetTable": {
          "type": "string"
        },
        "targetID": {
          "type": "string"
        },
        "oldValue": {
          "type": "string"
        },
        "newValue": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "operateTime": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "v1BindCouponTemplateReply": {
      "type": "object",
      "properties": {
        "boundCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CalculateSalesCommissionReply": {
      "type": "object",
      "properties": {
        "totalSales": {
          "type": "string"
        },
        "commissionAmount": {
          "type": "string"
        },
        "qualifiedOrders": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CalculateSalesCommissionRequest": {
      "type": "object",
      "properties": {
        "employeeID": {
          "type": "integer",
          "format": "int64"
        },
        "month": {
          "type": "string"
        }
      }
    },
    "v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "修改密码请求"
    },
    "v1CheckDetail": {
      "type": "object",
      "properties": {
        "checkID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "systemQty": {
          "type": "integer",
          "format": "int32"
        },
        "actualQty": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Coupon": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        },
        "amountCondition": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "expireTime": {
          "type": "string"
        }
      }
    },
    "v1CreateAccountPayableReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateAccountPayableRequest": {
      "type": "object",
      "properties": {
        "supplierID": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseID": {
          "type": "string"
        },
        "dueAmount": {
          "type": "string"
        },
        "paidAmount": {
          "type": "string"
        },
        "dueDate": {
          "type": "string"
        }
      }
    },
    "v1CreateAfterSalesReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateAfterSalesRequest": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1CreateAuditLogReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateAuditLogRequest": {
      "type": "object",
      "properties": {
        "operatorID": {
          "type": "integer",
          "format": "int64"
        },
        "actionType": {
          "type": "string"
        },
        "targetTable": {
          "type": "string"
        },
        "targetID": {
          "type": "string"
        },
        "oldValue": {
          "type": "string"
        },
        "newValue": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "operateTime": {
          "type": "string"
        }
      }
    },
    "v1CreateCheckDetailReply": {
      "type": "object",
      "properties": {
        "checkID": {
          "type": "string"
        }
      }
    },
    "v1CreateCheckDetailRequest": {
      "type": "object",
      "properties": {
        "checkID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "systemQty": {
          "type": "integer",
          "format": "int32"
        },
        "actualQty": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateCouponReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateCouponRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        },
        "amountCondition": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "expireTime": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomerReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateCustomerRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "membershipLevel": {
          "type": "integer",
          "format": "int32"
        },
        "totalPoints": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateEmployeePerformanceReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateEmployeePerformanceRequest": {
      "type": "object",
      "properties": {
        "employeeID": {
          "type": "integer",
          "format": "int64"
        },
        "month": {
          "type": "string"
        },
        "salesAmount": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        }
      }
    },
    "v1CreateEmployeeReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateEmployeeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "passwordHash": {
          "type": "string"
        }
      }
    },
    "v1CreateFinancialTransactionReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateFinancialTransactionRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "string"
        },
        "relatedID": {
          "type": "string"
        },
        "transactionTime": {
          "type": "string"
        },
        "operator": {
          "type": "integer",
          "format": "int64"
        },
        "remark": {
          "type": "string"
        }
      }
    },
    "v1CreateInventoryCheckReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateInventoryCheckRequest": {
      "type": "object",
      "properties": {
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "operatorID": {
          "type": "integer",
          "format": "int64"
        },
        "checkTime": {
          "type": "string"
        },
        "totalDiff": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateInventoryOperationReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateInventoryOperationRequest": {
      "type": "object",
      "properties": {
        "inventoryID": {
          "type": "integer",
          "format": "int64"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "relatedOrder": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "operator": {
          "type": "integer",
          "format": "int64"
        },
        "operateTime": {
          "type": "string"
        }
      }
    },
    "v1CreateInventoryReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateInventoryRequest": {
      "type": "object",
      "properties": {
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "safetyStock": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateNotificationReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateNotificationRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "recipient": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "sendStatus": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateProductCategoryReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateProductCategoryRequest": {
      "type": "object",
      "properties": {
        "parentID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateProductMediaReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateProductMediaRequest": {
      "type": "object",
      "properties": {
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateProductReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateProductRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "categoryID": {
          "type": "integer",
          "format": "int64"
        },
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "spec": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "warrantyMonths": {
          "type": "integer",
          "format": "int64"
        },
        "serviceTerms": {
          "type": "string"
        }
      }
    },
    "v1CreateProductSkuReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateProductSkuRequest": {
      "type": "object",
      "properties": {
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "skuCode": {
          "type": "string"
        },
        "attributes": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "stock": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreatePromotionReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreatePromotionRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "rule": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        }
      }
    },
    "v1CreatePurchaseOrderItemReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreatePurchaseOrderItemRequest": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "string"
        },
        "unitPrice": {
          "type": "string"
        }
      }
    },
    "v1CreatePurchaseOrderReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreatePurchaseOrderRequest": {
      "type": "object",
      "properties": {
        "supplierID": {
          "type": "integer",
          "format": "int64"
        },
        "totalAmount": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "expectedDate": {
          "type": "string"
        }
      }
    },
    "v1CreateSalesOrderItemReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateSalesOrderItemRequest": {
      "type": "object",
      "properties": {
        "orderID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "string"
        },
        "unitPrice": {
          "type": "string"
        }
      }
    },
    "v1CreateSalesOrderReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateSalesOrderRequest": {
      "type": "object",
      "properties": {
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "totalAmount": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "paymentMethod": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateServiceOrderReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateServiceOrderRequest": {
      "type": "object",
      "properties": {
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "faultDesc": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "technicianID": {
          "type": "integer",
          "format": "int64"
        },
        "completionTime": {
          "type": "string"
        }
      }
    },
    "v1CreateServiceOrderWithAssignmentReply": {
      "type": "object",
      "properties": {
        "serviceOrderID": {
          "type": "string"
        },
        "assignedStore": {
          "type": "string"
        },
        "qrCodeURL": {
          "type": "string"
        }
      }
    },
    "v1CreateServiceOrderWithAssignmentRequest": {
      "type": "object",
      "properties": {
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "faultDescription": {
          "type": "string"
        },
        "purchaseProof": {
          "type": "string"
        }
      }
    },
    "v1CreateStoreReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateStoreRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "managerID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateSupplierReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "v1CreateSupplierRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "contactPerson": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "paymentTerms": {
          "type": "string"
        }
      }
    },
    "v1CreateTransferDetailReply": {
      "type": "object",
      "properties": {
        "transferID": {
          "type": "string"
        }
      }
    },
    "v1CreateTransferDetailRequest": {
      "type": "object",
      "properties": {
        "transferID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1CreateTransferOrderReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1CreateTransferOrderRequest": {
      "type": "object",
      "properties": {
        "fromStore": {
          "type": "integer",
          "format": "int64"
        },
        "toStore": {
          "type": "integer",
          "format": "int64"
        },
        "totalQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "completeTime": {
          "type": "string"
        }
      }
    },
    "v1Customer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "membershipLevel": {
          "type": "integer",
          "format": "int32"
        },
        "totalPoints": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1DeleteAccountPayableByIDReply": {
      "type": "object"
    },
    "v1DeleteAfterSalesByIDReply": {
      "type": "object"
    },
    "v1DeleteAuditLogByIDReply": {
      "type": "object"
    },
    "v1DeleteCheckDetailByCheckIDReply": {
      "type": "object"
    },
    "v1DeleteCouponByIDReply": {
      "type": "object"
    },
    "v1DeleteCustomerByIDReply": {
      "type": "object"
    },
    "v1DeleteEmployeeByIDReply": {
      "type": "object"
    },
    "v1DeleteEmployeePerformanceByIDReply": {
      "type": "object"
    },
    "v1DeleteFinancialTransactionByIDReply": {
      "type": "object"
    },
    "v1DeleteInventoryByIDReply": {
      "type": "object"
    },
    "v1DeleteInventoryCheckByIDReply": {
      "type": "object"
    },
    "v1DeleteInventoryOperationByIDReply": {
      "type": "object"
    },
    "v1DeleteNotificationByIDReply": {
      "type": "object"
    },
    "v1DeleteProductByIDReply": {
      "type": "object"
    },
    "v1DeleteProductCategoryByIDReply": {
      "type": "object"
    },
    "v1DeleteProductMediaByIDReply": {
      "type": "object"
    },
    "v1DeleteProductSkuByIDReply": {
      "type": "object"
    },
    "v1DeletePromotionByIDReply": {
      "type": "object"
    },
    "v1DeletePurchaseOrderByIDReply": {
      "type": "object"
    },
    "v1DeletePurchaseOrderItemByIDReply": {
      "type": "object"
    },
    "v1DeleteSalesOrderByIDReply": {
      "type": "object"
    },
    "v1DeleteSalesOrderItemByIDReply": {
      "type": "object"
    },
    "v1DeleteServiceOrderByIDReply": {
      "type": "object"
    },
    "v1DeleteStoreByIDReply": {
      "type": "object"
    },
    "v1DeleteSupplierByIDReply": {
      "type": "object"
    },
    "v1DeleteTransferDetailByTransferIDReply": {
      "type": "object"
    },
    "v1DeleteTransferOrderByIDReply": {
      "type": "object"
    },
    "v1Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "passwordHash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1EmployeePerformance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "employeeID": {
          "type": "integer",
          "format": "int64"
        },
        "month": {
          "type": "string"
        },
        "salesAmount": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1ExecuteTransferReply": {
      "type": "object",
      "properties": {
        "transferOrderID": {
          "type": "string"
        }
      }
    },
    "v1ExecuteTransferRequest": {
      "type": "object",
      "properties": {
        "fromStoreID": {
          "type": "integer",
          "format": "int64"
        },
        "toStoreID": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ExecuteTransferRequestTransferItem"
          }
        }
      }
    },
    "v1ExecuteTransferRequestTransferItem": {
      "type": "object",
      "properties": {
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1FinancialTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "string"
        },
        "relatedID": {
          "type": "string"
        },
        "transactionTime": {
          "type": "string"
        },
        "operator": {
          "type": "integer",
          "format": "int64"
        },
        "remark": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1GenerateHotSalesReportReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenerateHotSalesReportReplyHotSaleItem"
          }
        },
        "reportTime": {
          "type": "string"
        }
      }
    },
    "v1GetAccountPayableByIDReply": {
      "type": "object",
      "properties": {
        "accountPayable": {
          "$ref": "#/definitions/v1AccountPayable"
        }
      }
    },
    "v1GetAfterSalesByIDReply": {
      "type": "object",
      "properties": {
        "afterSales": {
          "$ref": "#/definitions/v1AfterSales"
        }
      }
    },
    "v1GetAuditLogByIDReply": {
      "type": "object",
      "properties": {
        "auditLog": {
          "$ref": "#/definitions/v1AuditLog"
        }
      }
    },
    "v1GetCheckDetailByCheckIDReply": {
      "type": "object",
      "properties": {
        "checkDetail": {
          "$ref": "#/definitions/v1CheckDetail"
        }
      }
    },
    "v1GetCouponByIDReply": {
      "type": "object",
      "properties": {
        "coupon": {
          "$ref": "#/definitions/v1Coupon"
        }
      }
    },
    "v1GetCustomerByIDReply": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/v1Customer"
        }
      }
    },
    "v1GetEmployeeByIDReply": {
      "type": "object",
      "properties": {
        "employee": {
          "$ref": "#/definitions/v1Employee"
        }
      }
    },
    "v1GetEmployeePerformanceByIDReply": {
      "type": "object",
      "properties": {
        "employeePerformance": {
          "$ref": "#/definitions/v1EmployeePerformance"
        }
      }
    },
    "v1GetFinancialTransactionByIDReply": {
      "type": "object",
      "properties": {
        "financialTransaction": {
          "$ref": "#/definitions/v1FinancialTransaction"
        }
      }
    },
    "v1GetInventoryByIDReply": {
      "type": "object",
      "properties": {
        "inventory": {
          "$ref": "#/definitions/v1Inventory"
        }
      }
    },
    "v1GetInventoryCheckByIDReply": {
      "type": "object",
      "properties": {
        "inventoryCheck": {
          "$ref": "#/definitions/v1InventoryCheck"
        }
      }
    },
    "v1GetInventoryOperationByIDReply": {
      "type": "object",
      "properties": {
        "inventoryOperation": {
          "$ref": "#/definitions/v1InventoryOperation"
        }
      }
    },
    "v1GetNotificationByIDReply": {
      "type": "object",
      "properties": {
        "notification": {
          "$ref": "#/definitions/v1Notification"
        }
      }
    },
    "v1GetProductByIDReply": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product"
        }
      }
    },
    "v1GetProductCategoryByIDReply": {
      "type": "object",
      "properties": {
        "productCategory": {
          "$ref": "#/definitions/v1ProductCategory"
        }
      }
    },
    "v1GetProductMediaByIDReply": {
      "type": "object",
      "properties": {
        "productMedia": {
          "$ref": "#/definitions/v1ProductMedia"
        }
      }
    },
    "v1GetProductSkuByIDReply": {
      "type": "object",
      "properties": {
        "productSku": {
          "$ref": "#/definitions/v1ProductSku"
        }
      }
    },
    "v1GetPromotionByIDReply": {
      "type": "object",
      "properties": {
        "promotion": {
          "$ref": "#/definitions/v1Promotion"
        }
      }
    },
    "v1GetPurchaseOrderByIDReply": {
      "type": "object",
      "properties": {
        "purchaseOrder": {
          "$ref": "#/definitions/v1PurchaseOrder"
        }
      }
    },
    "v1GetPurchaseOrderItemByIDReply": {
      "type": "object",
      "properties": {
        "purchaseOrderItem": {
          "$ref": "#/definitions/v1PurchaseOrderItem"
        }
      }
    },
    "v1GetSalesOrderByIDReply": {
      "type": "object",
      "properties": {
        "salesOrder": {
          "$ref": "#/definitions/v1SalesOrder"
        }
      }
    },
    "v1GetSalesOrderItemByIDReply": {
      "type": "object",
      "properties": {
        "salesOrderItem": {
          "$ref": "#/definitions/v1SalesOrderItem"
        }
      }
    },
    "v1GetServiceOrderByIDReply": {
      "type": "object",
      "properties": {
        "serviceOrder": {
          "$ref": "#/definitions/v1ServiceOrder"
        }
      }
    },
    "v1GetStoreByIDReply": {
      "type": "object",
      "properties": {
        "store": {
          "$ref": "#/definitions/v1Store"
        }
      }
    },
    "v1GetSupplierByIDReply": {
      "type": "object",
      "properties": {
        "supplier": {
          "$ref": "#/definitions/v1Supplier"
        }
      }
    },
    "v1GetTransferDetailByTransferIDReply": {
      "type": "object",
      "properties": {
        "transferDetail": {
          "$ref": "#/definitions/v1TransferDetail"
        }
      }
    },
    "v1GetTransferOrderByIDReply": {
      "type": "object",
      "properties": {
        "transferOrder": {
          "$ref": "#/definitions/v1TransferOrder"
        }
      }
    },
    "v1Inventory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "safetyStock": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1InventoryCheck": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "operatorID": {
          "type": "integer",
          "format": "int64"
        },
        "checkTime": {
          "type": "string"
        },
        "totalDiff": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1InventoryOperation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "inventoryID": {
          "type": "integer",
          "format": "int64"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "relatedOrder": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "operator": {
          "type": "integer",
          "format": "int64"
        },
        "operateTime": {
          "type": "string"
        }
      }
    },
    "v1ListAccountPayableReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "accountPayables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AccountPayable"
          }
        }
      }
    },
    "v1ListAccountPayableRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListAfterSalesReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "afterSaless": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AfterSales"
          }
        }
      }
    },
    "v1ListAfterSalesRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListAuditLogReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "auditLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AuditLog"
          }
        }
      }
    },
    "v1ListAuditLogRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListCheckDetailReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "checkDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CheckDetail"
          }
        }
      }
    },
    "v1ListCheckDetailRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListCouponReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "coupons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Coupon"
          }
        }
      }
    },
    "v1ListCouponRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListCustomerReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Customer"
          }
        }
      }
    },
    "v1ListCustomerRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListEmployeePerformanceReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "employeePerformances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1EmployeePerformance"
          }
        }
      }
    },
    "v1ListEmployeePerformanceRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListEmployeeReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Employee"
          }
        }
      }
    },
    "v1ListEmployeeRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListFinancialTransactionReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "financialTransactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FinancialTransaction"
          }
        }
      }
    },
    "v1ListFinancialTransactionRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListInventoryCheckReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "inventoryChecks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InventoryCheck"
          }
        }
      }
    },
    "v1ListInventoryCheckRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListInventoryOperationReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "inventoryOperations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InventoryOperation"
          }
        }
      }
    },
    "v1ListInventoryOperationRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListInventoryReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "inventorys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Inventory"
          }
        }
      }
    },
    "v1ListInventoryRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListNotificationReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Notification"
          }
        }
      }
    },
    "v1ListNotificationRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListProductCategoryReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "productCategorys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProductCategory"
          }
        }
      }
    },
    "v1ListProductCategoryRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListProductMediaReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "productMedias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProductMedia"
          }
        }
      }
    },
    "v1ListProductMediaRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListProductReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          }
        }
      }
    },
    "v1ListProductRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListProductSkuReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "productSkus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProductSku"
          }
        }
      }
    },
    "v1ListProductSkuRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListPromotionReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Promotion"
          }
        }
      }
    },
    "v1ListPromotionRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListPurchaseOrderItemReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseOrderItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PurchaseOrderItem"
          }
        }
      }
    },
    "v1ListPurchaseOrderItemRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListPurchaseOrderReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PurchaseOrder"
          }
        }
      }
    },
    "v1ListPurchaseOrderRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListSalesOrderItemReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "salesOrderItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SalesOrderItem"
          }
        }
      }
    },
    "v1ListSalesOrderItemRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListSalesOrderReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "salesOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SalesOrder"
          }
        }
      }
    },
    "v1ListSalesOrderRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListServiceOrderReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "serviceOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ServiceOrder"
          }
        }
      }
    },
    "v1ListServiceOrderRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListStoreReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "stores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Store"
          }
        }
      }
    },
    "v1ListStoreRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListSupplierReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "suppliers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Supplier"
          }
        }
      }
    },
    "v1ListSupplierRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListTransferDetailReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "transferDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TransferDetail"
          }
        }
      }
    },
    "v1ListTransferDetailRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1ListTransferOrderReply": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "transferOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TransferOrder"
          }
        }
      }
    },
    "v1ListTransferOrderRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/typesParams"
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "登录请求"
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "登录响应"
    },
    "v1MediaMetadata": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "fileType": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "recipient": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "sendStatus": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1PrecheckTransferReply": {
      "type": "object",
      "properties": {
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrecheckTransferReplyStockStatus"
          }
        }
      }
    },
    "v1PrecheckTransferRequest": {
      "type": "object",
      "properties": {
        "fromStore": {
          "type": "integer",
          "format": "int64"
        },
        "toStore": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storev1TransferItem"
          }
        }
      }
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "categoryID": {
          "type": "integer",
          "format": "int64"
        },
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "spec": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "warrantyMonths": {
          "type": "integer",
          "format": "int64"
        },
        "serviceTerms": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1ProductCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "parentID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1ProductMedia": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "sortOrder": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1ProductSku": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "skuCode": {
          "type": "string"
        },
        "attributes": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "stock": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1Promotion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "rule": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1PurchaseOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "supplierID": {
          "type": "integer",
          "format": "int64"
        },
        "totalAmount": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "expectedDate": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1PurchaseOrderItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "orderID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "string"
        },
        "unitPrice": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1RedeemCouponReply": {
      "type": "object",
      "properties": {
        "transactionID": {
          "type": "string"
        },
        "redeemedTime": {
          "type": "string"
        }
      }
    },
    "v1RedeemCouponRequest": {
      "type": "object",
      "properties": {
        "couponID": {
          "type": "string"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "orderID": {
          "type": "string"
        },
        "operatorID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "找回密码请求"
    },
    "v1SalesOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "storeID": {
          "type": "integer",
          "format": "int64"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "totalAmount": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "paymentMethod": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1SalesOrderItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "orderID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "string"
        },
        "unitPrice": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1SendNotificationRequest": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "integer",
          "format": "int32"
        },
        "recipient": {
          "type": "string"
        },
        "templateID": {
          "type": "string"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1SendNotificationResponse": {
      "type": "object",
      "properties": {
        "messageID": {
          "type": "string"
        },
        "sendTime": {
          "type": "string"
        }
      }
    },
    "v1SendVerificationCodeRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        }
      },
      "title": "发送验证码请求"
    },
    "v1ServiceOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        },
        "productID": {
          "type": "integer",
          "format": "int64"
        },
        "faultDesc": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "technicianID": {
          "type": "integer",
          "format": "int64"
        },
        "completionTime": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1Store": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "managerID": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1Supplier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "contactPerson": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "paymentTerms": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1TransferDetail": {
      "type": "object",
      "properties": {
        "transferID": {
          "type": "string"
        },
        "skuID": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "v1TransferOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fromStore": {
          "type": "integer",
          "format": "int64"
        },
        "toStore": {
          "type": "integer",
          "format": "int64"
        },
        "totalQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string"
        },
        "completeTime": {
          "type": "string"
        }
      }
    },
    "v1UpdateAccountPayableByIDReply": {
      "type": "object"
    },
    "v1UpdateAfterSalesByIDReply": {
      "type": "object"
    },
    "v1UpdateAuditLogByIDReply": {
      "type": "object"
    },
    "v1UpdateCheckDetailByCheckIDReply": {
      "type": "object"
    },
    "v1UpdateCouponByIDReply": {
      "type": "object"
    },
    "v1UpdateCustomerByIDReply": {
      "type": "object"
    },
    "v1UpdateEmployeeByIDReply": {
      "type": "object"
    },
    "v1UpdateEmployeePerformanceByIDReply": {
      "type": "object"
    },
    "v1UpdateFinancialTransactionByIDReply": {
      "type": "object"
    },
    "v1UpdateInventoryByIDReply": {
      "type": "object"
    },
    "v1UpdateInventoryCheckByIDReply": {
      "type": "object"
    },
    "v1UpdateInventoryOperationByIDReply": {
      "type": "object"
    },
    "v1UpdateNotificationByIDReply": {
      "type": "object"
    },
    "v1UpdateProductByIDReply": {
      "type": "object"
    },
    "v1UpdateProductCategoryByIDReply": {
      "type": "object"
    },
    "v1UpdateProductMediaByIDReply": {
      "type": "object"
    },
    "v1UpdateProductSkuByIDReply": {
      "type": "object"
    },
    "v1UpdatePromotionByIDReply": {
      "type": "object"
    },
    "v1UpdatePurchaseOrderByIDReply": {
      "type": "object"
    },
    "v1UpdatePurchaseOrderItemByIDReply": {
      "type": "object"
    },
    "v1UpdateSalesOrderByIDReply": {
      "type": "object"
    },
    "v1UpdateSalesOrderItemByIDReply": {
      "type": "object"
    },
    "v1UpdateServiceOrderByIDReply": {
      "type": "object"
    },
    "v1UpdateStoreByIDReply": {
      "type": "object"
    },
    "v1UpdateSupplierByIDReply": {
      "type": "object"
    },
    "v1UpdateTransferDetailByTransferIDReply": {
      "type": "object"
    },
    "v1UpdateTransferOrderByIDReply": {
      "type": "object"
    },
    "v1UploadMediaReply": {
      "type": "object",
      "properties": {
        "mediaURL": {
          "type": "string"
        }
      }
    },
    "v1UploadMediaRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1MediaMetadata"
        },
        "chunk": {
          "type": "string",
          "format": "byte"
        },
        "productID": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "Type Bearer your-jwt-token to Value",
      "name": "Authorization",
      "in": "header"
    }
  }
}
