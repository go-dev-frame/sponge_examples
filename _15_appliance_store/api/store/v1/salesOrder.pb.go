// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/salesOrder.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreID       uint32 `protobuf:"varint,1,opt,name=storeID,proto3" json:"storeID"`             // 门店ID
	CustomerID    uint32 `protobuf:"varint,2,opt,name=customerID,proto3" json:"customerID"`       // 客户ID
	TotalAmount   string `protobuf:"bytes,3,opt,name=totalAmount,proto3" json:"totalAmount"`      // 订单总额
	Status        int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status"`               // 状态(0待支付/1已支付/2配送中/3已完成/4已退货)
	PaymentMethod int32  `protobuf:"varint,5,opt,name=paymentMethod,proto3" json:"paymentMethod"` // 支付方式(1现金/2微信/3支付宝/4刷卡)
}

func (x *CreateSalesOrderRequest) Reset() {
	*x = CreateSalesOrderRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderRequest) ProtoMessage() {}

func (x *CreateSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSalesOrderRequest) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CreateSalesOrderRequest) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *CreateSalesOrderRequest) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *CreateSalesOrderRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateSalesOrderRequest) GetPaymentMethod() int32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

type CreateSalesOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateSalesOrderReply) Reset() {
	*x = CreateSalesOrderReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSalesOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderReply) ProtoMessage() {}

func (x *CreateSalesOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderReply.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSalesOrderReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSalesOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteSalesOrderByIDRequest) Reset() {
	*x = DeleteSalesOrderByIDRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSalesOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSalesOrderByIDRequest) ProtoMessage() {}

func (x *DeleteSalesOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSalesOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteSalesOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteSalesOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSalesOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSalesOrderByIDReply) Reset() {
	*x = DeleteSalesOrderByIDReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSalesOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSalesOrderByIDReply) ProtoMessage() {}

func (x *DeleteSalesOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSalesOrderByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteSalesOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{3}
}

type UpdateSalesOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`               // 订单号（规则：YYYYMMDDHHMMSSmmm+6位序列）
	StoreID       uint32 `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID"`             // 门店ID
	CustomerID    uint32 `protobuf:"varint,3,opt,name=customerID,proto3" json:"customerID"`       // 客户ID
	TotalAmount   string `protobuf:"bytes,4,opt,name=totalAmount,proto3" json:"totalAmount"`      // 订单总额
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`               // 状态(0待支付/1已支付/2配送中/3已完成/4已退货)
	PaymentMethod int32  `protobuf:"varint,6,opt,name=paymentMethod,proto3" json:"paymentMethod"` // 支付方式(1现金/2微信/3支付宝/4刷卡)
}

func (x *UpdateSalesOrderByIDRequest) Reset() {
	*x = UpdateSalesOrderByIDRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSalesOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderByIDRequest) ProtoMessage() {}

func (x *UpdateSalesOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSalesOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSalesOrderByIDRequest) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *UpdateSalesOrderByIDRequest) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *UpdateSalesOrderByIDRequest) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *UpdateSalesOrderByIDRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSalesOrderByIDRequest) GetPaymentMethod() int32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

type UpdateSalesOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSalesOrderByIDReply) Reset() {
	*x = UpdateSalesOrderByIDReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSalesOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderByIDReply) ProtoMessage() {}

func (x *UpdateSalesOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{5}
}

type SalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`                        // 订单号（规则：YYYYMMDDHHMMSSmmm+6位序列）
	StoreID       uint32 `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID"`             // 门店ID
	CustomerID    uint32 `protobuf:"varint,3,opt,name=customerID,proto3" json:"customerID"`       // 客户ID
	TotalAmount   string `protobuf:"bytes,4,opt,name=totalAmount,proto3" json:"totalAmount"`      // 订单总额
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`               // 状态(0待支付/1已支付/2配送中/3已完成/4已退货)
	PaymentMethod int32  `protobuf:"varint,6,opt,name=paymentMethod,proto3" json:"paymentMethod"` // 支付方式(1现金/2微信/3支付宝/4刷卡)
	CreatedAt     string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt"`          // 创建时间
	UpdatedAt     string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt"`          // 更新时间
}

func (x *SalesOrder) Reset() {
	*x = SalesOrder{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrder) ProtoMessage() {}

func (x *SalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrder.ProtoReflect.Descriptor instead.
func (*SalesOrder) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{6}
}

func (x *SalesOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SalesOrder) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *SalesOrder) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *SalesOrder) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *SalesOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesOrder) GetPaymentMethod() int32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

func (x *SalesOrder) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SalesOrder) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetSalesOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetSalesOrderByIDRequest) Reset() {
	*x = GetSalesOrderByIDRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSalesOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderByIDRequest) ProtoMessage() {}

func (x *GetSalesOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{7}
}

func (x *GetSalesOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSalesOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrder *SalesOrder `protobuf:"bytes,1,opt,name=salesOrder,proto3" json:"salesOrder"`
}

func (x *GetSalesOrderByIDReply) Reset() {
	*x = GetSalesOrderByIDReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSalesOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderByIDReply) ProtoMessage() {}

func (x *GetSalesOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderByIDReply.ProtoReflect.Descriptor instead.
func (*GetSalesOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{8}
}

func (x *GetSalesOrderByIDReply) GetSalesOrder() *SalesOrder {
	if x != nil {
		return x.SalesOrder
	}
	return nil
}

type ListSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListSalesOrderRequest) Reset() {
	*x = ListSalesOrderRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSalesOrderRequest) ProtoMessage() {}

func (x *ListSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*ListSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{9}
}

func (x *ListSalesOrderRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListSalesOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	SalesOrders []*SalesOrder `protobuf:"bytes,2,rep,name=salesOrders,proto3" json:"salesOrders"`
}

func (x *ListSalesOrderReply) Reset() {
	*x = ListSalesOrderReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSalesOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSalesOrderReply) ProtoMessage() {}

func (x *ListSalesOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSalesOrderReply.ProtoReflect.Descriptor instead.
func (*ListSalesOrderReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{10}
}

func (x *ListSalesOrderReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSalesOrderReply) GetSalesOrders() []*SalesOrder {
	if x != nil {
		return x.SalesOrders
	}
	return nil
}

type GenerateHotSalesReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime"` // 开始日期YYYY-MM-DD
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime"`     // 结束日期YYYY-MM-DD
	TopN      uint32 `protobuf:"varint,3,opt,name=topN,proto3" json:"topN"`          // 排名前N的热销商品
}

func (x *GenerateHotSalesReportRequest) Reset() {
	*x = GenerateHotSalesReportRequest{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateHotSalesReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateHotSalesReportRequest) ProtoMessage() {}

func (x *GenerateHotSalesReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateHotSalesReportRequest.ProtoReflect.Descriptor instead.
func (*GenerateHotSalesReportRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateHotSalesReportRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GenerateHotSalesReportRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GenerateHotSalesReportRequest) GetTopN() uint32 {
	if x != nil {
		return x.TopN
	}
	return 0
}

type GenerateHotSalesReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*GenerateHotSalesReportReply_HotSaleItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`           // 热销商品列表
	ReportTime string                                     `protobuf:"bytes,2,opt,name=reportTime,proto3" json:"reportTime"` // 报告生成时间
}

func (x *GenerateHotSalesReportReply) Reset() {
	*x = GenerateHotSalesReportReply{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateHotSalesReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateHotSalesReportReply) ProtoMessage() {}

func (x *GenerateHotSalesReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateHotSalesReportReply.ProtoReflect.Descriptor instead.
func (*GenerateHotSalesReportReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateHotSalesReportReply) GetItems() []*GenerateHotSalesReportReply_HotSaleItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GenerateHotSalesReportReply) GetReportTime() string {
	if x != nil {
		return x.ReportTime
	}
	return ""
}

type GenerateHotSalesReportReply_HotSaleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuID         uint32  `protobuf:"varint,1,opt,name=skuID,proto3" json:"skuID"`                 // 商品SKU ID
	SkuName       string  `protobuf:"bytes,2,opt,name=skuName,proto3" json:"skuName"`              // 商品名称
	TotalSold     int64   `protobuf:"varint,3,opt,name=totalSold,proto3" json:"totalSold"`         // 总销量
	GrowthRate    float64 `protobuf:"fixed64,4,opt,name=growthRate,proto3" json:"growthRate"`      // 环比增长率
	OverstockRisk bool    `protobuf:"varint,5,opt,name=overstockRisk,proto3" json:"overstockRisk"` // 滞销风险标记
}

func (x *GenerateHotSalesReportReply_HotSaleItem) Reset() {
	*x = GenerateHotSalesReportReply_HotSaleItem{}
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateHotSalesReportReply_HotSaleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateHotSalesReportReply_HotSaleItem) ProtoMessage() {}

func (x *GenerateHotSalesReportReply_HotSaleItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_salesOrder_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateHotSalesReportReply_HotSaleItem.ProtoReflect.Descriptor instead.
func (*GenerateHotSalesReportReply_HotSaleItem) Descriptor() ([]byte, []int) {
	return file_api_store_v1_salesOrder_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GenerateHotSalesReportReply_HotSaleItem) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *GenerateHotSalesReportReply_HotSaleItem) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *GenerateHotSalesReportReply_HotSaleItem) GetTotalSold() int64 {
	if x != nil {
		return x.TotalSold
	}
	return 0
}

func (x *GenerateHotSalesReportReply_HotSaleItem) GetGrowthRate() float64 {
	if x != nil {
		return x.GrowthRate
	}
	return 0
}

func (x *GenerateHotSalesReportReply_HotSaleItem) GetOverstockRisk() bool {
	if x != nil {
		return x.OverstockRisk
	}
	return false
}

var File_api_store_v1_salesOrder_proto protoreflect.FileDescriptor

var file_api_store_v1_salesOrder_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb3, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x43, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xdd, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22,
	0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xf2,
	0x01, 0x0a, 0x0a, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x38, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x67, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17,
	0x72, 0x15, 0x32, 0x13, 0x5e, 0x5c, 0x64, 0x7b, 0x34, 0x7d, 0x2d, 0x5c, 0x64, 0x7b, 0x32, 0x7d,
	0x2d, 0x5c, 0x64, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x32, 0x13, 0x5e, 0x5c, 0x64, 0x7b,
	0x34, 0x7d, 0x2d, 0x5c, 0x64, 0x7b, 0x32, 0x7d, 0x2d, 0x5c, 0x64, 0x7b, 0x32, 0x7d, 0x24, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x64, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4e, 0x22, 0xae, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x0b, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6f,
	0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x69, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x69, 0x73, 0x6b, 0x32, 0x93, 0x06, 0x0a, 0x0a, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x73, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x84, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x72, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x96, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2f, 0x68, 0x6f, 0x74, 0x2d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x42, 0xb4,
	0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61,
	0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02,
	0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_salesOrder_proto_rawDescOnce sync.Once
	file_api_store_v1_salesOrder_proto_rawDescData = file_api_store_v1_salesOrder_proto_rawDesc
)

func file_api_store_v1_salesOrder_proto_rawDescGZIP() []byte {
	file_api_store_v1_salesOrder_proto_rawDescOnce.Do(func() {
		file_api_store_v1_salesOrder_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_salesOrder_proto_rawDescData)
	})
	return file_api_store_v1_salesOrder_proto_rawDescData
}

var file_api_store_v1_salesOrder_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_store_v1_salesOrder_proto_goTypes = []any{
	(*CreateSalesOrderRequest)(nil),                 // 0: api.store.v1.CreateSalesOrderRequest
	(*CreateSalesOrderReply)(nil),                   // 1: api.store.v1.CreateSalesOrderReply
	(*DeleteSalesOrderByIDRequest)(nil),             // 2: api.store.v1.DeleteSalesOrderByIDRequest
	(*DeleteSalesOrderByIDReply)(nil),               // 3: api.store.v1.DeleteSalesOrderByIDReply
	(*UpdateSalesOrderByIDRequest)(nil),             // 4: api.store.v1.UpdateSalesOrderByIDRequest
	(*UpdateSalesOrderByIDReply)(nil),               // 5: api.store.v1.UpdateSalesOrderByIDReply
	(*SalesOrder)(nil),                              // 6: api.store.v1.SalesOrder
	(*GetSalesOrderByIDRequest)(nil),                // 7: api.store.v1.GetSalesOrderByIDRequest
	(*GetSalesOrderByIDReply)(nil),                  // 8: api.store.v1.GetSalesOrderByIDReply
	(*ListSalesOrderRequest)(nil),                   // 9: api.store.v1.ListSalesOrderRequest
	(*ListSalesOrderReply)(nil),                     // 10: api.store.v1.ListSalesOrderReply
	(*GenerateHotSalesReportRequest)(nil),           // 11: api.store.v1.GenerateHotSalesReportRequest
	(*GenerateHotSalesReportReply)(nil),             // 12: api.store.v1.GenerateHotSalesReportReply
	(*GenerateHotSalesReportReply_HotSaleItem)(nil), // 13: api.store.v1.GenerateHotSalesReportReply.HotSaleItem
	(*types.Params)(nil),                            // 14: api.types.Params
}
var file_api_store_v1_salesOrder_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetSalesOrderByIDReply.salesOrder:type_name -> api.store.v1.SalesOrder
	14, // 1: api.store.v1.ListSalesOrderRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListSalesOrderReply.salesOrders:type_name -> api.store.v1.SalesOrder
	13, // 3: api.store.v1.GenerateHotSalesReportReply.items:type_name -> api.store.v1.GenerateHotSalesReportReply.HotSaleItem
	0,  // 4: api.store.v1.salesOrder.Create:input_type -> api.store.v1.CreateSalesOrderRequest
	2,  // 5: api.store.v1.salesOrder.DeleteByID:input_type -> api.store.v1.DeleteSalesOrderByIDRequest
	4,  // 6: api.store.v1.salesOrder.UpdateByID:input_type -> api.store.v1.UpdateSalesOrderByIDRequest
	7,  // 7: api.store.v1.salesOrder.GetByID:input_type -> api.store.v1.GetSalesOrderByIDRequest
	9,  // 8: api.store.v1.salesOrder.List:input_type -> api.store.v1.ListSalesOrderRequest
	11, // 9: api.store.v1.salesOrder.GenerateHotSalesReport:input_type -> api.store.v1.GenerateHotSalesReportRequest
	1,  // 10: api.store.v1.salesOrder.Create:output_type -> api.store.v1.CreateSalesOrderReply
	3,  // 11: api.store.v1.salesOrder.DeleteByID:output_type -> api.store.v1.DeleteSalesOrderByIDReply
	5,  // 12: api.store.v1.salesOrder.UpdateByID:output_type -> api.store.v1.UpdateSalesOrderByIDReply
	8,  // 13: api.store.v1.salesOrder.GetByID:output_type -> api.store.v1.GetSalesOrderByIDReply
	10, // 14: api.store.v1.salesOrder.List:output_type -> api.store.v1.ListSalesOrderReply
	12, // 15: api.store.v1.salesOrder.GenerateHotSalesReport:output_type -> api.store.v1.GenerateHotSalesReportReply
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_store_v1_salesOrder_proto_init() }
func file_api_store_v1_salesOrder_proto_init() {
	if File_api_store_v1_salesOrder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_salesOrder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_salesOrder_proto_goTypes,
		DependencyIndexes: file_api_store_v1_salesOrder_proto_depIdxs,
		MessageInfos:      file_api_store_v1_salesOrder_proto_msgTypes,
	}.Build()
	File_api_store_v1_salesOrder_proto = out.File
	file_api_store_v1_salesOrder_proto_rawDesc = nil
	file_api_store_v1_salesOrder_proto_goTypes = nil
	file_api_store_v1_salesOrder_proto_depIdxs = nil
}
