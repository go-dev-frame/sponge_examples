// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/productSku.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProductSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  uint32 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"`  // 产品ID
	SkuCode    string `protobuf:"bytes,2,opt,name=skuCode,proto3" json:"skuCode"`       // SKU编码
	Attributes string `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes"` // 规格属性(JSON格式，如{"color":"白","capacity":"10L"})
	Price      string `protobuf:"bytes,4,opt,name=price,proto3" json:"price"`           // 实际售价
	Stock      int32  `protobuf:"varint,5,opt,name=stock,proto3" json:"stock"`          // 库存数量
}

func (x *CreateProductSkuRequest) Reset() {
	*x = CreateProductSkuRequest{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductSkuRequest) ProtoMessage() {}

func (x *CreateProductSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductSkuRequest.ProtoReflect.Descriptor instead.
func (*CreateProductSkuRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProductSkuRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateProductSkuRequest) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *CreateProductSkuRequest) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *CreateProductSkuRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateProductSkuRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type CreateProductSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateProductSkuReply) Reset() {
	*x = CreateProductSkuReply{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductSkuReply) ProtoMessage() {}

func (x *CreateProductSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductSkuReply.ProtoReflect.Descriptor instead.
func (*CreateProductSkuReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProductSkuReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductSkuByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteProductSkuByIDRequest) Reset() {
	*x = DeleteProductSkuByIDRequest{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductSkuByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductSkuByIDRequest) ProtoMessage() {}

func (x *DeleteProductSkuByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductSkuByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductSkuByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteProductSkuByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductSkuByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductSkuByIDReply) Reset() {
	*x = DeleteProductSkuByIDReply{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductSkuByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductSkuByIDReply) ProtoMessage() {}

func (x *DeleteProductSkuByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductSkuByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteProductSkuByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{3}
}

type UpdateProductSkuByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`       // SKU ID
	ProductID  uint32 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"`  // 产品ID
	SkuCode    string `protobuf:"bytes,3,opt,name=skuCode,proto3" json:"skuCode"`       // SKU编码
	Attributes string `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes"` // 规格属性(JSON格式，如{"color":"白","capacity":"10L"})
	Price      string `protobuf:"bytes,5,opt,name=price,proto3" json:"price"`           // 实际售价
	Stock      int32  `protobuf:"varint,6,opt,name=stock,proto3" json:"stock"`          // 库存数量
}

func (x *UpdateProductSkuByIDRequest) Reset() {
	*x = UpdateProductSkuByIDRequest{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductSkuByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductSkuByIDRequest) ProtoMessage() {}

func (x *UpdateProductSkuByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductSkuByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductSkuByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProductSkuByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProductSkuByIDRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *UpdateProductSkuByIDRequest) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *UpdateProductSkuByIDRequest) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *UpdateProductSkuByIDRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *UpdateProductSkuByIDRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type UpdateProductSkuByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductSkuByIDReply) Reset() {
	*x = UpdateProductSkuByIDReply{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductSkuByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductSkuByIDReply) ProtoMessage() {}

func (x *UpdateProductSkuByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductSkuByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateProductSkuByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{5}
}

type ProductSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                // SKU ID
	ProductID  uint32 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"`  // 产品ID
	SkuCode    string `protobuf:"bytes,3,opt,name=skuCode,proto3" json:"skuCode"`       // SKU编码
	Attributes string `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes"` // 规格属性(JSON格式，如{"color":"白","capacity":"10L"})
	Price      string `protobuf:"bytes,5,opt,name=price,proto3" json:"price"`           // 实际售价
	Stock      int32  `protobuf:"varint,6,opt,name=stock,proto3" json:"stock"`          // 库存数量
	CreatedAt  string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt"`   // 创建时间
	UpdatedAt  string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt"`   // 更新时间
}

func (x *ProductSku) Reset() {
	*x = ProductSku{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSku) ProtoMessage() {}

func (x *ProductSku) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSku.ProtoReflect.Descriptor instead.
func (*ProductSku) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{6}
}

func (x *ProductSku) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSku) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ProductSku) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *ProductSku) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *ProductSku) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ProductSku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ProductSku) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductSku) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetProductSkuByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetProductSkuByIDRequest) Reset() {
	*x = GetProductSkuByIDRequest{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuByIDRequest) ProtoMessage() {}

func (x *GetProductSkuByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProductSkuByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{7}
}

func (x *GetProductSkuByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProductSkuByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSku *ProductSku `protobuf:"bytes,1,opt,name=productSku,proto3" json:"productSku"`
}

func (x *GetProductSkuByIDReply) Reset() {
	*x = GetProductSkuByIDReply{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductSkuByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductSkuByIDReply) ProtoMessage() {}

func (x *GetProductSkuByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductSkuByIDReply.ProtoReflect.Descriptor instead.
func (*GetProductSkuByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{8}
}

func (x *GetProductSkuByIDReply) GetProductSku() *ProductSku {
	if x != nil {
		return x.ProductSku
	}
	return nil
}

type ListProductSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListProductSkuRequest) Reset() {
	*x = ListProductSkuRequest{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductSkuRequest) ProtoMessage() {}

func (x *ListProductSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductSkuRequest.ProtoReflect.Descriptor instead.
func (*ListProductSkuRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{9}
}

func (x *ListProductSkuRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListProductSkuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	ProductSkus []*ProductSku `protobuf:"bytes,2,rep,name=productSkus,proto3" json:"productSkus"`
}

func (x *ListProductSkuReply) Reset() {
	*x = ListProductSkuReply{}
	mi := &file_api_store_v1_productSku_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductSkuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductSkuReply) ProtoMessage() {}

func (x *ListProductSkuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productSku_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductSkuReply.ProtoReflect.Descriptor instead.
func (*ListProductSkuReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productSku_proto_rawDescGZIP(), []int{10}
}

func (x *ListProductSkuReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProductSkuReply) GetProductSkus() []*ProductSku {
	if x != nil {
		return x.ProductSkus
	}
	return nil
}

var File_api_store_v1_productSku_proto protoreflect.FileDescriptor

var file_api_store_v1_productSku_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9d, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b,
	0x75, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e,
	0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x22, 0x42, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x73, 0x32, 0xfa, 0x04, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x12, 0x73, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0xb4, 0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a,
	0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a,
	0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70,
	0x65, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77,
	0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x02, 0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_productSku_proto_rawDescOnce sync.Once
	file_api_store_v1_productSku_proto_rawDescData = file_api_store_v1_productSku_proto_rawDesc
)

func file_api_store_v1_productSku_proto_rawDescGZIP() []byte {
	file_api_store_v1_productSku_proto_rawDescOnce.Do(func() {
		file_api_store_v1_productSku_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_productSku_proto_rawDescData)
	})
	return file_api_store_v1_productSku_proto_rawDescData
}

var file_api_store_v1_productSku_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_store_v1_productSku_proto_goTypes = []any{
	(*CreateProductSkuRequest)(nil),     // 0: api.store.v1.CreateProductSkuRequest
	(*CreateProductSkuReply)(nil),       // 1: api.store.v1.CreateProductSkuReply
	(*DeleteProductSkuByIDRequest)(nil), // 2: api.store.v1.DeleteProductSkuByIDRequest
	(*DeleteProductSkuByIDReply)(nil),   // 3: api.store.v1.DeleteProductSkuByIDReply
	(*UpdateProductSkuByIDRequest)(nil), // 4: api.store.v1.UpdateProductSkuByIDRequest
	(*UpdateProductSkuByIDReply)(nil),   // 5: api.store.v1.UpdateProductSkuByIDReply
	(*ProductSku)(nil),                  // 6: api.store.v1.ProductSku
	(*GetProductSkuByIDRequest)(nil),    // 7: api.store.v1.GetProductSkuByIDRequest
	(*GetProductSkuByIDReply)(nil),      // 8: api.store.v1.GetProductSkuByIDReply
	(*ListProductSkuRequest)(nil),       // 9: api.store.v1.ListProductSkuRequest
	(*ListProductSkuReply)(nil),         // 10: api.store.v1.ListProductSkuReply
	(*types.Params)(nil),                // 11: api.types.Params
}
var file_api_store_v1_productSku_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetProductSkuByIDReply.productSku:type_name -> api.store.v1.ProductSku
	11, // 1: api.store.v1.ListProductSkuRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListProductSkuReply.productSkus:type_name -> api.store.v1.ProductSku
	0,  // 3: api.store.v1.productSku.Create:input_type -> api.store.v1.CreateProductSkuRequest
	2,  // 4: api.store.v1.productSku.DeleteByID:input_type -> api.store.v1.DeleteProductSkuByIDRequest
	4,  // 5: api.store.v1.productSku.UpdateByID:input_type -> api.store.v1.UpdateProductSkuByIDRequest
	7,  // 6: api.store.v1.productSku.GetByID:input_type -> api.store.v1.GetProductSkuByIDRequest
	9,  // 7: api.store.v1.productSku.List:input_type -> api.store.v1.ListProductSkuRequest
	1,  // 8: api.store.v1.productSku.Create:output_type -> api.store.v1.CreateProductSkuReply
	3,  // 9: api.store.v1.productSku.DeleteByID:output_type -> api.store.v1.DeleteProductSkuByIDReply
	5,  // 10: api.store.v1.productSku.UpdateByID:output_type -> api.store.v1.UpdateProductSkuByIDReply
	8,  // 11: api.store.v1.productSku.GetByID:output_type -> api.store.v1.GetProductSkuByIDReply
	10, // 12: api.store.v1.productSku.List:output_type -> api.store.v1.ListProductSkuReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_store_v1_productSku_proto_init() }
func file_api_store_v1_productSku_proto_init() {
	if File_api_store_v1_productSku_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_productSku_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_productSku_proto_goTypes,
		DependencyIndexes: file_api_store_v1_productSku_proto_depIdxs,
		MessageInfos:      file_api_store_v1_productSku_proto_msgTypes,
	}.Build()
	File_api_store_v1_productSku_proto = out.File
	file_api_store_v1_productSku_proto_rawDesc = nil
	file_api_store_v1_productSku_proto_goTypes = nil
	file_api_store_v1_productSku_proto_depIdxs = nil
}
