// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/inventory.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreID     uint32 `protobuf:"varint,1,opt,name=storeID,proto3" json:"storeID"`         // 门店ID
	SkuID       uint32 `protobuf:"varint,2,opt,name=skuID,proto3" json:"skuID"`             // SKU ID
	Quantity    int32  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity"`       // 当前库存
	SafetyStock int32  `protobuf:"varint,4,opt,name=safetyStock,proto3" json:"safetyStock"` // 安全库存
}

func (x *CreateInventoryRequest) Reset() {
	*x = CreateInventoryRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryRequest) ProtoMessage() {}

func (x *CreateInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryRequest.ProtoReflect.Descriptor instead.
func (*CreateInventoryRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *CreateInventoryRequest) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *CreateInventoryRequest) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *CreateInventoryRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateInventoryRequest) GetSafetyStock() int32 {
	if x != nil {
		return x.SafetyStock
	}
	return 0
}

type CreateInventoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateInventoryReply) Reset() {
	*x = CreateInventoryReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInventoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInventoryReply) ProtoMessage() {}

func (x *CreateInventoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInventoryReply.ProtoReflect.Descriptor instead.
func (*CreateInventoryReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *CreateInventoryReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteInventoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteInventoryByIDRequest) Reset() {
	*x = DeleteInventoryByIDRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInventoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryByIDRequest) ProtoMessage() {}

func (x *DeleteInventoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteInventoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteInventoryByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteInventoryByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInventoryByIDReply) Reset() {
	*x = DeleteInventoryByIDReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInventoryByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInventoryByIDReply) ProtoMessage() {}

func (x *DeleteInventoryByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInventoryByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteInventoryByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{3}
}

type UpdateInventoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`          // 库存记录ID
	StoreID     uint32 `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID"`         // 门店ID
	SkuID       uint32 `protobuf:"varint,3,opt,name=skuID,proto3" json:"skuID"`             // SKU ID
	Quantity    int32  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity"`       // 当前库存
	SafetyStock int32  `protobuf:"varint,5,opt,name=safetyStock,proto3" json:"safetyStock"` // 安全库存
}

func (x *UpdateInventoryByIDRequest) Reset() {
	*x = UpdateInventoryByIDRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryByIDRequest) ProtoMessage() {}

func (x *UpdateInventoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateInventoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateInventoryByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateInventoryByIDRequest) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *UpdateInventoryByIDRequest) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *UpdateInventoryByIDRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateInventoryByIDRequest) GetSafetyStock() int32 {
	if x != nil {
		return x.SafetyStock
	}
	return 0
}

type UpdateInventoryByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInventoryByIDReply) Reset() {
	*x = UpdateInventoryByIDReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInventoryByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInventoryByIDReply) ProtoMessage() {}

func (x *UpdateInventoryByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInventoryByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateInventoryByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{5}
}

type Inventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                   // 库存记录ID
	StoreID     uint32 `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID"`         // 门店ID
	SkuID       uint32 `protobuf:"varint,3,opt,name=skuID,proto3" json:"skuID"`             // SKU ID
	Quantity    int32  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity"`       // 当前库存
	SafetyStock int32  `protobuf:"varint,5,opt,name=safetyStock,proto3" json:"safetyStock"` // 安全库存
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`      // 创建时间
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt"`      // 更新时间
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *Inventory) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Inventory) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *Inventory) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *Inventory) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Inventory) GetSafetyStock() int32 {
	if x != nil {
		return x.SafetyStock
	}
	return 0
}

func (x *Inventory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Inventory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetInventoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetInventoryByIDRequest) Reset() {
	*x = GetInventoryByIDRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryByIDRequest) ProtoMessage() {}

func (x *GetInventoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *GetInventoryByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetInventoryByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory"`
}

func (x *GetInventoryByIDReply) Reset() {
	*x = GetInventoryByIDReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryByIDReply) ProtoMessage() {}

func (x *GetInventoryByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryByIDReply.ProtoReflect.Descriptor instead.
func (*GetInventoryByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *GetInventoryByIDReply) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type ListInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListInventoryRequest) Reset() {
	*x = ListInventoryRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryRequest) ProtoMessage() {}

func (x *ListInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryRequest.ProtoReflect.Descriptor instead.
func (*ListInventoryRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *ListInventoryRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListInventoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Inventorys []*Inventory `protobuf:"bytes,2,rep,name=inventorys,proto3" json:"inventorys"`
}

func (x *ListInventoryReply) Reset() {
	*x = ListInventoryReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInventoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInventoryReply) ProtoMessage() {}

func (x *ListInventoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInventoryReply.ProtoReflect.Descriptor instead.
func (*ListInventoryReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *ListInventoryReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListInventoryReply) GetInventorys() []*Inventory {
	if x != nil {
		return x.Inventorys
	}
	return nil
}

type ExecuteTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStoreID uint32                                 `protobuf:"varint,1,opt,name=fromStoreID,proto3" json:"fromStoreID"` // 调出仓库ID
	ToStoreID   uint32                                 `protobuf:"varint,2,opt,name=toStoreID,proto3" json:"toStoreID"`     // 调入仓库ID
	Items       []*ExecuteTransferRequest_TransferItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`              // 调拨商品明细
}

func (x *ExecuteTransferRequest) Reset() {
	*x = ExecuteTransferRequest{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransferRequest) ProtoMessage() {}

func (x *ExecuteTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransferRequest.ProtoReflect.Descriptor instead.
func (*ExecuteTransferRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteTransferRequest) GetFromStoreID() uint32 {
	if x != nil {
		return x.FromStoreID
	}
	return 0
}

func (x *ExecuteTransferRequest) GetToStoreID() uint32 {
	if x != nil {
		return x.ToStoreID
	}
	return 0
}

func (x *ExecuteTransferRequest) GetItems() []*ExecuteTransferRequest_TransferItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ExecuteTransferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferOrderID string `protobuf:"bytes,1,opt,name=transferOrderID,proto3" json:"transferOrderID"` // 生成的调拨单号
}

func (x *ExecuteTransferReply) Reset() {
	*x = ExecuteTransferReply{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransferReply) ProtoMessage() {}

func (x *ExecuteTransferReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransferReply.ProtoReflect.Descriptor instead.
func (*ExecuteTransferReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{12}
}

func (x *ExecuteTransferReply) GetTransferOrderID() string {
	if x != nil {
		return x.TransferOrderID
	}
	return ""
}

type ExecuteTransferRequest_TransferItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuID    uint32 `protobuf:"varint,1,opt,name=skuID,proto3" json:"skuID"`       // 商品SKU ID
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity"` // 调拨数量
}

func (x *ExecuteTransferRequest_TransferItem) Reset() {
	*x = ExecuteTransferRequest_TransferItem{}
	mi := &file_api_store_v1_inventory_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransferRequest_TransferItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransferRequest_TransferItem) ProtoMessage() {}

func (x *ExecuteTransferRequest_TransferItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_inventory_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransferRequest_TransferItem.ProtoReflect.Descriptor instead.
func (*ExecuteTransferRequest_TransferItem) Descriptor() ([]byte, []int) {
	return file_api_store_v1_inventory_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ExecuteTransferRequest_TransferItem) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *ExecuteTransferRequest_TransferItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

var File_api_store_v1_inventory_proto protoreflect.FileDescriptor

var file_api_store_v1_inventory_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x86, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x42, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32,
	0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xc5, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a,
	0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x41, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x73,
	0x22, 0xf6, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x51, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x49,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x6b, 0x75, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x40, 0x0a, 0x14, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x32, 0xee, 0x05, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x70, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x7e, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x75, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a,
	0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0xb4, 0x01, 0x92,
	0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x70, 0x69,
	0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_inventory_proto_rawDescOnce sync.Once
	file_api_store_v1_inventory_proto_rawDescData = file_api_store_v1_inventory_proto_rawDesc
)

func file_api_store_v1_inventory_proto_rawDescGZIP() []byte {
	file_api_store_v1_inventory_proto_rawDescOnce.Do(func() {
		file_api_store_v1_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_inventory_proto_rawDescData)
	})
	return file_api_store_v1_inventory_proto_rawDescData
}

var file_api_store_v1_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_store_v1_inventory_proto_goTypes = []any{
	(*CreateInventoryRequest)(nil),              // 0: api.store.v1.CreateInventoryRequest
	(*CreateInventoryReply)(nil),                // 1: api.store.v1.CreateInventoryReply
	(*DeleteInventoryByIDRequest)(nil),          // 2: api.store.v1.DeleteInventoryByIDRequest
	(*DeleteInventoryByIDReply)(nil),            // 3: api.store.v1.DeleteInventoryByIDReply
	(*UpdateInventoryByIDRequest)(nil),          // 4: api.store.v1.UpdateInventoryByIDRequest
	(*UpdateInventoryByIDReply)(nil),            // 5: api.store.v1.UpdateInventoryByIDReply
	(*Inventory)(nil),                           // 6: api.store.v1.Inventory
	(*GetInventoryByIDRequest)(nil),             // 7: api.store.v1.GetInventoryByIDRequest
	(*GetInventoryByIDReply)(nil),               // 8: api.store.v1.GetInventoryByIDReply
	(*ListInventoryRequest)(nil),                // 9: api.store.v1.ListInventoryRequest
	(*ListInventoryReply)(nil),                  // 10: api.store.v1.ListInventoryReply
	(*ExecuteTransferRequest)(nil),              // 11: api.store.v1.ExecuteTransferRequest
	(*ExecuteTransferReply)(nil),                // 12: api.store.v1.ExecuteTransferReply
	(*ExecuteTransferRequest_TransferItem)(nil), // 13: api.store.v1.ExecuteTransferRequest.TransferItem
	(*types.Params)(nil),                        // 14: api.types.Params
}
var file_api_store_v1_inventory_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetInventoryByIDReply.inventory:type_name -> api.store.v1.Inventory
	14, // 1: api.store.v1.ListInventoryRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListInventoryReply.inventorys:type_name -> api.store.v1.Inventory
	13, // 3: api.store.v1.ExecuteTransferRequest.items:type_name -> api.store.v1.ExecuteTransferRequest.TransferItem
	0,  // 4: api.store.v1.inventory.Create:input_type -> api.store.v1.CreateInventoryRequest
	2,  // 5: api.store.v1.inventory.DeleteByID:input_type -> api.store.v1.DeleteInventoryByIDRequest
	4,  // 6: api.store.v1.inventory.UpdateByID:input_type -> api.store.v1.UpdateInventoryByIDRequest
	7,  // 7: api.store.v1.inventory.GetByID:input_type -> api.store.v1.GetInventoryByIDRequest
	9,  // 8: api.store.v1.inventory.List:input_type -> api.store.v1.ListInventoryRequest
	11, // 9: api.store.v1.inventory.ExecuteTransfer:input_type -> api.store.v1.ExecuteTransferRequest
	1,  // 10: api.store.v1.inventory.Create:output_type -> api.store.v1.CreateInventoryReply
	3,  // 11: api.store.v1.inventory.DeleteByID:output_type -> api.store.v1.DeleteInventoryByIDReply
	5,  // 12: api.store.v1.inventory.UpdateByID:output_type -> api.store.v1.UpdateInventoryByIDReply
	8,  // 13: api.store.v1.inventory.GetByID:output_type -> api.store.v1.GetInventoryByIDReply
	10, // 14: api.store.v1.inventory.List:output_type -> api.store.v1.ListInventoryReply
	12, // 15: api.store.v1.inventory.ExecuteTransfer:output_type -> api.store.v1.ExecuteTransferReply
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_store_v1_inventory_proto_init() }
func file_api_store_v1_inventory_proto_init() {
	if File_api_store_v1_inventory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_inventory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_inventory_proto_goTypes,
		DependencyIndexes: file_api_store_v1_inventory_proto_depIdxs,
		MessageInfos:      file_api_store_v1_inventory_proto_msgTypes,
	}.Build()
	File_api_store_v1_inventory_proto = out.File
	file_api_store_v1_inventory_proto_rawDesc = nil
	file_api_store_v1_inventory_proto_goTypes = nil
	file_api_store_v1_inventory_proto_depIdxs = nil
}
