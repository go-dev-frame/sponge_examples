// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/productMedia.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProductMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID uint32 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"` // 产品ID
	Type      int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type"`           // 类型(1图片/2视频/33D模型)
	Url       string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`              // 资源地址
	SortOrder uint32 `protobuf:"varint,4,opt,name=sortOrder,proto3" json:"sortOrder"` // 排序序号
}

func (x *CreateProductMediaRequest) Reset() {
	*x = CreateProductMediaRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductMediaRequest) ProtoMessage() {}

func (x *CreateProductMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductMediaRequest.ProtoReflect.Descriptor instead.
func (*CreateProductMediaRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProductMediaRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateProductMediaRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateProductMediaRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateProductMediaRequest) GetSortOrder() uint32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

type CreateProductMediaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateProductMediaReply) Reset() {
	*x = CreateProductMediaReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductMediaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductMediaReply) ProtoMessage() {}

func (x *CreateProductMediaReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductMediaReply.ProtoReflect.Descriptor instead.
func (*CreateProductMediaReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProductMediaReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductMediaByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteProductMediaByIDRequest) Reset() {
	*x = DeleteProductMediaByIDRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductMediaByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductMediaByIDRequest) ProtoMessage() {}

func (x *DeleteProductMediaByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductMediaByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductMediaByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteProductMediaByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProductMediaByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductMediaByIDReply) Reset() {
	*x = DeleteProductMediaByIDReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductMediaByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductMediaByIDReply) ProtoMessage() {}

func (x *DeleteProductMediaByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductMediaByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteProductMediaByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{3}
}

type UpdateProductMediaByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`      // 媒体ID
	ProductID uint32 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"` // 产品ID
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`           // 类型(1图片/2视频/33D模型)
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url"`              // 资源地址
	SortOrder uint32 `protobuf:"varint,5,opt,name=sortOrder,proto3" json:"sortOrder"` // 排序序号
}

func (x *UpdateProductMediaByIDRequest) Reset() {
	*x = UpdateProductMediaByIDRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductMediaByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductMediaByIDRequest) ProtoMessage() {}

func (x *UpdateProductMediaByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductMediaByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductMediaByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProductMediaByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProductMediaByIDRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *UpdateProductMediaByIDRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateProductMediaByIDRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateProductMediaByIDRequest) GetSortOrder() uint32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

type UpdateProductMediaByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductMediaByIDReply) Reset() {
	*x = UpdateProductMediaByIDReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProductMediaByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductMediaByIDReply) ProtoMessage() {}

func (x *UpdateProductMediaByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductMediaByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateProductMediaByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{5}
}

type ProductMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`               // 媒体ID
	ProductID uint32 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"` // 产品ID
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`           // 类型(1图片/2视频/33D模型)
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url"`              // 资源地址
	SortOrder uint32 `protobuf:"varint,5,opt,name=sortOrder,proto3" json:"sortOrder"` // 排序序号
	CreatedAt string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`  // 创建时间
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt"`  // 更新时间
}

func (x *ProductMedia) Reset() {
	*x = ProductMedia{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductMedia) ProtoMessage() {}

func (x *ProductMedia) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductMedia.ProtoReflect.Descriptor instead.
func (*ProductMedia) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{6}
}

func (x *ProductMedia) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductMedia) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ProductMedia) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProductMedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProductMedia) GetSortOrder() uint32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *ProductMedia) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductMedia) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetProductMediaByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetProductMediaByIDRequest) Reset() {
	*x = GetProductMediaByIDRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductMediaByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductMediaByIDRequest) ProtoMessage() {}

func (x *GetProductMediaByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductMediaByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProductMediaByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{7}
}

func (x *GetProductMediaByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProductMediaByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductMedia *ProductMedia `protobuf:"bytes,1,opt,name=productMedia,proto3" json:"productMedia"`
}

func (x *GetProductMediaByIDReply) Reset() {
	*x = GetProductMediaByIDReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductMediaByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductMediaByIDReply) ProtoMessage() {}

func (x *GetProductMediaByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductMediaByIDReply.ProtoReflect.Descriptor instead.
func (*GetProductMediaByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{8}
}

func (x *GetProductMediaByIDReply) GetProductMedia() *ProductMedia {
	if x != nil {
		return x.ProductMedia
	}
	return nil
}

type ListProductMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListProductMediaRequest) Reset() {
	*x = ListProductMediaRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductMediaRequest) ProtoMessage() {}

func (x *ListProductMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductMediaRequest.ProtoReflect.Descriptor instead.
func (*ListProductMediaRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{9}
}

func (x *ListProductMediaRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListProductMediaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	ProductMedias []*ProductMedia `protobuf:"bytes,2,rep,name=productMedias,proto3" json:"productMedias"`
}

func (x *ListProductMediaReply) Reset() {
	*x = ListProductMediaReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProductMediaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductMediaReply) ProtoMessage() {}

func (x *ListProductMediaReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductMediaReply.ProtoReflect.Descriptor instead.
func (*ListProductMediaReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{10}
}

func (x *ListProductMediaReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProductMediaReply) GetProductMedias() []*ProductMedia {
	if x != nil {
		return x.ProductMedias
	}
	return nil
}

type UploadMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*UploadMediaRequest_Metadata
	//	*UploadMediaRequest_Chunk
	Data      isUploadMediaRequest_Data `protobuf_oneof:"data"`
	ProductID string                    `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID"` // 关联产品ID
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{11}
}

func (m *UploadMediaRequest) GetData() isUploadMediaRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadMediaRequest) GetMetadata() *MediaMetadata {
	if x, ok := x.GetData().(*UploadMediaRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *UploadMediaRequest) GetChunk() []byte {
	if x, ok := x.GetData().(*UploadMediaRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *UploadMediaRequest) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type isUploadMediaRequest_Data interface {
	isUploadMediaRequest_Data()
}

type UploadMediaRequest_Metadata struct {
	Metadata *MediaMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"` // 文件元数据
}

type UploadMediaRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"` // 文件分片内容
}

func (*UploadMediaRequest_Metadata) isUploadMediaRequest_Data() {}

func (*UploadMediaRequest_Chunk) isUploadMediaRequest_Data() {}

type MediaMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename"`  // 文件名
	MimeType string `protobuf:"bytes,2,opt,name=mimeType,proto3" json:"mimeType"`  // MIME类型
	FileType int32  `protobuf:"varint,3,opt,name=fileType,proto3" json:"fileType"` // 类型(1=图片 2=视频 3=3D模型)
}

func (x *MediaMetadata) Reset() {
	*x = MediaMetadata{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadata) ProtoMessage() {}

func (x *MediaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadata.ProtoReflect.Descriptor instead.
func (*MediaMetadata) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{12}
}

func (x *MediaMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MediaMetadata) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *MediaMetadata) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

type UploadMediaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaURL string `protobuf:"bytes,1,opt,name=mediaURL,proto3" json:"mediaURL"` // 最终访问URL
}

func (x *UploadMediaReply) Reset() {
	*x = UploadMediaReply{}
	mi := &file_api_store_v1_productMedia_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaReply) ProtoMessage() {}

func (x *UploadMediaReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_productMedia_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaReply.ProtoReflect.Descriptor instead.
func (*UploadMediaReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_productMedia_proto_rawDescGZIP(), []int{13}
}

func (x *UploadMediaReply) GetMediaURL() string {
	if x != nil {
		return x.MediaURL
	}
	return ""
}

var File_api_store_v1_productMedia_proto protoreflect.FileDescriptor

var file_api_store_v1_productMedia_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0xa7, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72,
	0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1d, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xbc, 0x01, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e,
	0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x44, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x6f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x40, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x63, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x32, 0x95, 0x06, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x79, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x87, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x2a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x1a, 0x19,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x28, 0x01, 0x42, 0xb4,
	0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61,
	0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02,
	0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_productMedia_proto_rawDescOnce sync.Once
	file_api_store_v1_productMedia_proto_rawDescData = file_api_store_v1_productMedia_proto_rawDesc
)

func file_api_store_v1_productMedia_proto_rawDescGZIP() []byte {
	file_api_store_v1_productMedia_proto_rawDescOnce.Do(func() {
		file_api_store_v1_productMedia_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_productMedia_proto_rawDescData)
	})
	return file_api_store_v1_productMedia_proto_rawDescData
}

var file_api_store_v1_productMedia_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_store_v1_productMedia_proto_goTypes = []any{
	(*CreateProductMediaRequest)(nil),     // 0: api.store.v1.CreateProductMediaRequest
	(*CreateProductMediaReply)(nil),       // 1: api.store.v1.CreateProductMediaReply
	(*DeleteProductMediaByIDRequest)(nil), // 2: api.store.v1.DeleteProductMediaByIDRequest
	(*DeleteProductMediaByIDReply)(nil),   // 3: api.store.v1.DeleteProductMediaByIDReply
	(*UpdateProductMediaByIDRequest)(nil), // 4: api.store.v1.UpdateProductMediaByIDRequest
	(*UpdateProductMediaByIDReply)(nil),   // 5: api.store.v1.UpdateProductMediaByIDReply
	(*ProductMedia)(nil),                  // 6: api.store.v1.ProductMedia
	(*GetProductMediaByIDRequest)(nil),    // 7: api.store.v1.GetProductMediaByIDRequest
	(*GetProductMediaByIDReply)(nil),      // 8: api.store.v1.GetProductMediaByIDReply
	(*ListProductMediaRequest)(nil),       // 9: api.store.v1.ListProductMediaRequest
	(*ListProductMediaReply)(nil),         // 10: api.store.v1.ListProductMediaReply
	(*UploadMediaRequest)(nil),            // 11: api.store.v1.UploadMediaRequest
	(*MediaMetadata)(nil),                 // 12: api.store.v1.MediaMetadata
	(*UploadMediaReply)(nil),              // 13: api.store.v1.UploadMediaReply
	(*types.Params)(nil),                  // 14: api.types.Params
}
var file_api_store_v1_productMedia_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetProductMediaByIDReply.productMedia:type_name -> api.store.v1.ProductMedia
	14, // 1: api.store.v1.ListProductMediaRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListProductMediaReply.productMedias:type_name -> api.store.v1.ProductMedia
	12, // 3: api.store.v1.UploadMediaRequest.metadata:type_name -> api.store.v1.MediaMetadata
	0,  // 4: api.store.v1.productMedia.Create:input_type -> api.store.v1.CreateProductMediaRequest
	2,  // 5: api.store.v1.productMedia.DeleteByID:input_type -> api.store.v1.DeleteProductMediaByIDRequest
	4,  // 6: api.store.v1.productMedia.UpdateByID:input_type -> api.store.v1.UpdateProductMediaByIDRequest
	7,  // 7: api.store.v1.productMedia.GetByID:input_type -> api.store.v1.GetProductMediaByIDRequest
	9,  // 8: api.store.v1.productMedia.List:input_type -> api.store.v1.ListProductMediaRequest
	11, // 9: api.store.v1.productMedia.UploadMedia:input_type -> api.store.v1.UploadMediaRequest
	1,  // 10: api.store.v1.productMedia.Create:output_type -> api.store.v1.CreateProductMediaReply
	3,  // 11: api.store.v1.productMedia.DeleteByID:output_type -> api.store.v1.DeleteProductMediaByIDReply
	5,  // 12: api.store.v1.productMedia.UpdateByID:output_type -> api.store.v1.UpdateProductMediaByIDReply
	8,  // 13: api.store.v1.productMedia.GetByID:output_type -> api.store.v1.GetProductMediaByIDReply
	10, // 14: api.store.v1.productMedia.List:output_type -> api.store.v1.ListProductMediaReply
	13, // 15: api.store.v1.productMedia.UploadMedia:output_type -> api.store.v1.UploadMediaReply
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_store_v1_productMedia_proto_init() }
func file_api_store_v1_productMedia_proto_init() {
	if File_api_store_v1_productMedia_proto != nil {
		return
	}
	file_api_store_v1_productMedia_proto_msgTypes[11].OneofWrappers = []any{
		(*UploadMediaRequest_Metadata)(nil),
		(*UploadMediaRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_productMedia_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_productMedia_proto_goTypes,
		DependencyIndexes: file_api_store_v1_productMedia_proto_depIdxs,
		MessageInfos:      file_api_store_v1_productMedia_proto_msgTypes,
	}.Build()
	File_api_store_v1_productMedia_proto = out.File
	file_api_store_v1_productMedia_proto_rawDesc = nil
	file_api_store_v1_productMedia_proto_goTypes = nil
	file_api_store_v1_productMedia_proto_depIdxs = nil
}
