// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/afterSales.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAfterSalesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID     string `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID"`         // 订单ID
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`               // 售后类型（退款、换货、维修）
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description"` // 售后描述
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`           // 售后状态
}

func (x *CreateAfterSalesRequest) Reset() {
	*x = CreateAfterSalesRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAfterSalesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAfterSalesRequest) ProtoMessage() {}

func (x *CreateAfterSalesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAfterSalesRequest.ProtoReflect.Descriptor instead.
func (*CreateAfterSalesRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAfterSalesRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *CreateAfterSalesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateAfterSalesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAfterSalesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateAfterSalesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateAfterSalesReply) Reset() {
	*x = CreateAfterSalesReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAfterSalesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAfterSalesReply) ProtoMessage() {}

func (x *CreateAfterSalesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAfterSalesReply.ProtoReflect.Descriptor instead.
func (*CreateAfterSalesReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAfterSalesReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAfterSalesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteAfterSalesByIDRequest) Reset() {
	*x = DeleteAfterSalesByIDRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAfterSalesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAfterSalesByIDRequest) ProtoMessage() {}

func (x *DeleteAfterSalesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAfterSalesByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteAfterSalesByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteAfterSalesByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAfterSalesByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAfterSalesByIDReply) Reset() {
	*x = DeleteAfterSalesByIDReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAfterSalesByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAfterSalesByIDReply) ProtoMessage() {}

func (x *DeleteAfterSalesByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAfterSalesByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteAfterSalesByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{3}
}

type UpdateAfterSalesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`         // 售后服务ID
	OrderID     string `protobuf:"bytes,2,opt,name=orderID,proto3" json:"orderID"`         // 订单ID
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`               // 售后类型（退款、换货、维修）
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"` // 售后描述
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`           // 售后状态
}

func (x *UpdateAfterSalesByIDRequest) Reset() {
	*x = UpdateAfterSalesByIDRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAfterSalesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAfterSalesByIDRequest) ProtoMessage() {}

func (x *UpdateAfterSalesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAfterSalesByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateAfterSalesByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAfterSalesByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAfterSalesByIDRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UpdateAfterSalesByIDRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateAfterSalesByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAfterSalesByIDRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateAfterSalesByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAfterSalesByIDReply) Reset() {
	*x = UpdateAfterSalesByIDReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAfterSalesByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAfterSalesByIDReply) ProtoMessage() {}

func (x *UpdateAfterSalesByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAfterSalesByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateAfterSalesByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{5}
}

type AfterSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                  // 售后服务ID
	OrderID     string `protobuf:"bytes,2,opt,name=orderID,proto3" json:"orderID"`         // 订单ID
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`               // 售后类型（退款、换货、维修）
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"` // 售后描述
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`           // 售后状态
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`     // 创建时间
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt"`     // 更新时间
}

func (x *AfterSales) Reset() {
	*x = AfterSales{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AfterSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AfterSales) ProtoMessage() {}

func (x *AfterSales) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AfterSales.ProtoReflect.Descriptor instead.
func (*AfterSales) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{6}
}

func (x *AfterSales) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AfterSales) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *AfterSales) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AfterSales) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AfterSales) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AfterSales) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AfterSales) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetAfterSalesByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetAfterSalesByIDRequest) Reset() {
	*x = GetAfterSalesByIDRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAfterSalesByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAfterSalesByIDRequest) ProtoMessage() {}

func (x *GetAfterSalesByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAfterSalesByIDRequest.ProtoReflect.Descriptor instead.
func (*GetAfterSalesByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{7}
}

func (x *GetAfterSalesByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAfterSalesByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AfterSales *AfterSales `protobuf:"bytes,1,opt,name=afterSales,proto3" json:"afterSales"`
}

func (x *GetAfterSalesByIDReply) Reset() {
	*x = GetAfterSalesByIDReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAfterSalesByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAfterSalesByIDReply) ProtoMessage() {}

func (x *GetAfterSalesByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAfterSalesByIDReply.ProtoReflect.Descriptor instead.
func (*GetAfterSalesByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{8}
}

func (x *GetAfterSalesByIDReply) GetAfterSales() *AfterSales {
	if x != nil {
		return x.AfterSales
	}
	return nil
}

type ListAfterSalesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListAfterSalesRequest) Reset() {
	*x = ListAfterSalesRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAfterSalesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAfterSalesRequest) ProtoMessage() {}

func (x *ListAfterSalesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAfterSalesRequest.ProtoReflect.Descriptor instead.
func (*ListAfterSalesRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{9}
}

func (x *ListAfterSalesRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListAfterSalesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	AfterSaless []*AfterSales `protobuf:"bytes,2,rep,name=afterSaless,proto3" json:"afterSaless"`
}

func (x *ListAfterSalesReply) Reset() {
	*x = ListAfterSalesReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAfterSalesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAfterSalesReply) ProtoMessage() {}

func (x *ListAfterSalesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAfterSalesReply.ProtoReflect.Descriptor instead.
func (*ListAfterSalesReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{10}
}

func (x *ListAfterSalesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListAfterSalesReply) GetAfterSaless() []*AfterSales {
	if x != nil {
		return x.AfterSaless
	}
	return nil
}

type CreateServiceOrderWithAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerID       uint32 `protobuf:"varint,1,opt,name=customerID,proto3" json:"customerID"`            // 客户ID
	ProductID        uint32 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"`              // 产品ID
	FaultDescription string `protobuf:"bytes,3,opt,name=faultDescription,proto3" json:"faultDescription"` // 故障描述（至少10字符）
	PurchaseProof    string `protobuf:"bytes,4,opt,name=purchaseProof,proto3" json:"purchaseProof"`       // 购买凭证URL
}

func (x *CreateServiceOrderWithAssignmentRequest) Reset() {
	*x = CreateServiceOrderWithAssignmentRequest{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceOrderWithAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceOrderWithAssignmentRequest) ProtoMessage() {}

func (x *CreateServiceOrderWithAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceOrderWithAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceOrderWithAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{11}
}

func (x *CreateServiceOrderWithAssignmentRequest) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *CreateServiceOrderWithAssignmentRequest) GetProductID() uint32 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateServiceOrderWithAssignmentRequest) GetFaultDescription() string {
	if x != nil {
		return x.FaultDescription
	}
	return ""
}

func (x *CreateServiceOrderWithAssignmentRequest) GetPurchaseProof() string {
	if x != nil {
		return x.PurchaseProof
	}
	return ""
}

type CreateServiceOrderWithAssignmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceOrderID string `protobuf:"bytes,1,opt,name=serviceOrderID,proto3" json:"serviceOrderID"` // 生成的维修工单号
	AssignedStore  string `protobuf:"bytes,2,opt,name=assignedStore,proto3" json:"assignedStore"`   // 分配的服务网点名称
	QrCodeURL      string `protobuf:"bytes,3,opt,name=qrCodeURL,proto3" json:"qrCodeURL"`           // 工单二维码访问地址
}

func (x *CreateServiceOrderWithAssignmentReply) Reset() {
	*x = CreateServiceOrderWithAssignmentReply{}
	mi := &file_api_store_v1_afterSales_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceOrderWithAssignmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceOrderWithAssignmentReply) ProtoMessage() {}

func (x *CreateServiceOrderWithAssignmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_afterSales_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceOrderWithAssignmentReply.ProtoReflect.Descriptor instead.
func (*CreateServiceOrderWithAssignmentReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_afterSales_proto_rawDescGZIP(), []int{12}
}

func (x *CreateServiceOrderWithAssignmentReply) GetServiceOrderID() string {
	if x != nil {
		return x.ServiceOrderID
	}
	return ""
}

func (x *CreateServiceOrderWithAssignmentReply) GetAssignedStore() string {
	if x != nil {
		return x.AssignedStore
	}
	return ""
}

func (x *CreateServiceOrderWithAssignmentReply) GetQrCodeURL() string {
	if x != nil {
		return x.QrCodeURL
	}
	return ""
}

var File_api_store_v1_afterSales_proto protoreflect.FileDescriptor

var file_api_store_v1_afterSales_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x81, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xab, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64,
	0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84,
	0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x73,
	0x22, 0xc2, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x10, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x0a, 0x52, 0x10, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x93, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x4c, 0x32, 0xb9, 0x06, 0x0a, 0x0a,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x81, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01,
	0x2a, 0x1a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22,
	0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xbc, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0xb4, 0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73,
	0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74,
	0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a,
	0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08,
	0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79,
	0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f,
	0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_afterSales_proto_rawDescOnce sync.Once
	file_api_store_v1_afterSales_proto_rawDescData = file_api_store_v1_afterSales_proto_rawDesc
)

func file_api_store_v1_afterSales_proto_rawDescGZIP() []byte {
	file_api_store_v1_afterSales_proto_rawDescOnce.Do(func() {
		file_api_store_v1_afterSales_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_afterSales_proto_rawDescData)
	})
	return file_api_store_v1_afterSales_proto_rawDescData
}

var file_api_store_v1_afterSales_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_store_v1_afterSales_proto_goTypes = []any{
	(*CreateAfterSalesRequest)(nil),                 // 0: api.store.v1.CreateAfterSalesRequest
	(*CreateAfterSalesReply)(nil),                   // 1: api.store.v1.CreateAfterSalesReply
	(*DeleteAfterSalesByIDRequest)(nil),             // 2: api.store.v1.DeleteAfterSalesByIDRequest
	(*DeleteAfterSalesByIDReply)(nil),               // 3: api.store.v1.DeleteAfterSalesByIDReply
	(*UpdateAfterSalesByIDRequest)(nil),             // 4: api.store.v1.UpdateAfterSalesByIDRequest
	(*UpdateAfterSalesByIDReply)(nil),               // 5: api.store.v1.UpdateAfterSalesByIDReply
	(*AfterSales)(nil),                              // 6: api.store.v1.AfterSales
	(*GetAfterSalesByIDRequest)(nil),                // 7: api.store.v1.GetAfterSalesByIDRequest
	(*GetAfterSalesByIDReply)(nil),                  // 8: api.store.v1.GetAfterSalesByIDReply
	(*ListAfterSalesRequest)(nil),                   // 9: api.store.v1.ListAfterSalesRequest
	(*ListAfterSalesReply)(nil),                     // 10: api.store.v1.ListAfterSalesReply
	(*CreateServiceOrderWithAssignmentRequest)(nil), // 11: api.store.v1.CreateServiceOrderWithAssignmentRequest
	(*CreateServiceOrderWithAssignmentReply)(nil),   // 12: api.store.v1.CreateServiceOrderWithAssignmentReply
	(*types.Params)(nil),                            // 13: api.types.Params
}
var file_api_store_v1_afterSales_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetAfterSalesByIDReply.afterSales:type_name -> api.store.v1.AfterSales
	13, // 1: api.store.v1.ListAfterSalesRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListAfterSalesReply.afterSaless:type_name -> api.store.v1.AfterSales
	0,  // 3: api.store.v1.afterSales.Create:input_type -> api.store.v1.CreateAfterSalesRequest
	2,  // 4: api.store.v1.afterSales.DeleteByID:input_type -> api.store.v1.DeleteAfterSalesByIDRequest
	4,  // 5: api.store.v1.afterSales.UpdateByID:input_type -> api.store.v1.UpdateAfterSalesByIDRequest
	7,  // 6: api.store.v1.afterSales.GetByID:input_type -> api.store.v1.GetAfterSalesByIDRequest
	9,  // 7: api.store.v1.afterSales.List:input_type -> api.store.v1.ListAfterSalesRequest
	11, // 8: api.store.v1.afterSales.CreateServiceOrderWithAssignment:input_type -> api.store.v1.CreateServiceOrderWithAssignmentRequest
	1,  // 9: api.store.v1.afterSales.Create:output_type -> api.store.v1.CreateAfterSalesReply
	3,  // 10: api.store.v1.afterSales.DeleteByID:output_type -> api.store.v1.DeleteAfterSalesByIDReply
	5,  // 11: api.store.v1.afterSales.UpdateByID:output_type -> api.store.v1.UpdateAfterSalesByIDReply
	8,  // 12: api.store.v1.afterSales.GetByID:output_type -> api.store.v1.GetAfterSalesByIDReply
	10, // 13: api.store.v1.afterSales.List:output_type -> api.store.v1.ListAfterSalesReply
	12, // 14: api.store.v1.afterSales.CreateServiceOrderWithAssignment:output_type -> api.store.v1.CreateServiceOrderWithAssignmentReply
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_store_v1_afterSales_proto_init() }
func file_api_store_v1_afterSales_proto_init() {
	if File_api_store_v1_afterSales_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_afterSales_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_afterSales_proto_goTypes,
		DependencyIndexes: file_api_store_v1_afterSales_proto_depIdxs,
		MessageInfos:      file_api_store_v1_afterSales_proto_msgTypes,
	}.Build()
	File_api_store_v1_afterSales_proto = out.File
	file_api_store_v1_afterSales_proto_rawDesc = nil
	file_api_store_v1_afterSales_proto_goTypes = nil
	file_api_store_v1_afterSales_proto_depIdxs = nil
}
