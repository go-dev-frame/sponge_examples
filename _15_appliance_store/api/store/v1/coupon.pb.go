// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/coupon.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type"`                      // 类型(1满减/2折扣/3代金券)
	Value           string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`                     // 面值/折扣率
	AmountCondition string `protobuf:"bytes,3,opt,name=amountCondition,proto3" json:"amountCondition"` // 使用条件(满多少元可用)
	CustomerID      uint32 `protobuf:"varint,4,opt,name=customerID,proto3" json:"customerID"`          // 绑定客户ID
	Status          int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`                  // 状态(0未发放/1未使用/2已使用/3已过期)
	ExpireTime      string `protobuf:"bytes,6,opt,name=expireTime,proto3" json:"expireTime"`           // 过期时间
}

func (x *CreateCouponRequest) Reset() {
	*x = CreateCouponRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCouponRequest) ProtoMessage() {}

func (x *CreateCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCouponRequest.ProtoReflect.Descriptor instead.
func (*CreateCouponRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCouponRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateCouponRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateCouponRequest) GetAmountCondition() string {
	if x != nil {
		return x.AmountCondition
	}
	return ""
}

func (x *CreateCouponRequest) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *CreateCouponRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateCouponRequest) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type CreateCouponReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateCouponReply) Reset() {
	*x = CreateCouponReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCouponReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCouponReply) ProtoMessage() {}

func (x *CreateCouponReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCouponReply.ProtoReflect.Descriptor instead.
func (*CreateCouponReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCouponReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCouponByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteCouponByIDRequest) Reset() {
	*x = DeleteCouponByIDRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCouponByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponByIDRequest) ProtoMessage() {}

func (x *DeleteCouponByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteCouponByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCouponByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCouponByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCouponByIDReply) Reset() {
	*x = DeleteCouponByIDReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCouponByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCouponByIDReply) ProtoMessage() {}

func (x *DeleteCouponByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCouponByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteCouponByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{3}
}

type UpdateCouponByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`                  // 优惠券ID
	Type            int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type"`                      // 类型(1满减/2折扣/3代金券)
	Value           string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`                     // 面值/折扣率
	AmountCondition string `protobuf:"bytes,4,opt,name=amountCondition,proto3" json:"amountCondition"` // 使用条件(满多少元可用)
	CustomerID      uint32 `protobuf:"varint,5,opt,name=customerID,proto3" json:"customerID"`          // 绑定客户ID
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status"`                  // 状态(0未发放/1未使用/2已使用/3已过期)
	ExpireTime      string `protobuf:"bytes,7,opt,name=expireTime,proto3" json:"expireTime"`           // 过期时间
}

func (x *UpdateCouponByIDRequest) Reset() {
	*x = UpdateCouponByIDRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCouponByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponByIDRequest) ProtoMessage() {}

func (x *UpdateCouponByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateCouponByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCouponByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCouponByIDRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateCouponByIDRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateCouponByIDRequest) GetAmountCondition() string {
	if x != nil {
		return x.AmountCondition
	}
	return ""
}

func (x *UpdateCouponByIDRequest) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *UpdateCouponByIDRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateCouponByIDRequest) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type UpdateCouponByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCouponByIDReply) Reset() {
	*x = UpdateCouponByIDReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCouponByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouponByIDReply) ProtoMessage() {}

func (x *UpdateCouponByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouponByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateCouponByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{5}
}

type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`                           // 优惠券ID
	Type            int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type"`                      // 类型(1满减/2折扣/3代金券)
	Value           string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`                     // 面值/折扣率
	AmountCondition string `protobuf:"bytes,4,opt,name=amountCondition,proto3" json:"amountCondition"` // 使用条件(满多少元可用)
	CustomerID      uint32 `protobuf:"varint,5,opt,name=customerID,proto3" json:"customerID"`          // 绑定客户ID
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status"`                  // 状态(0未发放/1未使用/2已使用/3已过期)
	ExpireTime      string `protobuf:"bytes,7,opt,name=expireTime,proto3" json:"expireTime"`           // 过期时间
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{6}
}

func (x *Coupon) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Coupon) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Coupon) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Coupon) GetAmountCondition() string {
	if x != nil {
		return x.AmountCondition
	}
	return ""
}

func (x *Coupon) GetCustomerID() uint32 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *Coupon) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Coupon) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type GetCouponByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetCouponByIDRequest) Reset() {
	*x = GetCouponByIDRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCouponByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponByIDRequest) ProtoMessage() {}

func (x *GetCouponByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCouponByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{7}
}

func (x *GetCouponByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCouponByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coupon *Coupon `protobuf:"bytes,1,opt,name=coupon,proto3" json:"coupon"`
}

func (x *GetCouponByIDReply) Reset() {
	*x = GetCouponByIDReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCouponByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouponByIDReply) ProtoMessage() {}

func (x *GetCouponByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouponByIDReply.ProtoReflect.Descriptor instead.
func (*GetCouponByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{8}
}

func (x *GetCouponByIDReply) GetCoupon() *Coupon {
	if x != nil {
		return x.Coupon
	}
	return nil
}

type ListCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListCouponRequest) Reset() {
	*x = ListCouponRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCouponRequest) ProtoMessage() {}

func (x *ListCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCouponRequest.ProtoReflect.Descriptor instead.
func (*ListCouponRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{9}
}

func (x *ListCouponRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListCouponReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64     `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Coupons []*Coupon `protobuf:"bytes,2,rep,name=coupons,proto3" json:"coupons"`
}

func (x *ListCouponReply) Reset() {
	*x = ListCouponReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCouponReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCouponReply) ProtoMessage() {}

func (x *ListCouponReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCouponReply.ProtoReflect.Descriptor instead.
func (*ListCouponReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{10}
}

func (x *ListCouponReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCouponReply) GetCoupons() []*Coupon {
	if x != nil {
		return x.Coupons
	}
	return nil
}

type RedeemCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponID   string `protobuf:"bytes,1,opt,name=couponID,proto3" json:"couponID"`      // 优惠券ID
	StoreID    uint32 `protobuf:"varint,2,opt,name=storeID,proto3" json:"storeID"`       // 核销门店
	OrderID    string `protobuf:"bytes,3,opt,name=orderID,proto3" json:"orderID"`        // 关联订单
	OperatorID uint32 `protobuf:"varint,4,opt,name=operatorID,proto3" json:"operatorID"` // 操作员ID
}

func (x *RedeemCouponRequest) Reset() {
	*x = RedeemCouponRequest{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedeemCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemCouponRequest) ProtoMessage() {}

func (x *RedeemCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemCouponRequest.ProtoReflect.Descriptor instead.
func (*RedeemCouponRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{11}
}

func (x *RedeemCouponRequest) GetCouponID() string {
	if x != nil {
		return x.CouponID
	}
	return ""
}

func (x *RedeemCouponRequest) GetStoreID() uint32 {
	if x != nil {
		return x.StoreID
	}
	return 0
}

func (x *RedeemCouponRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *RedeemCouponRequest) GetOperatorID() uint32 {
	if x != nil {
		return x.OperatorID
	}
	return 0
}

type RedeemCouponReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID"` // 核销流水号
	RedeemedTime  string `protobuf:"bytes,2,opt,name=redeemedTime,proto3" json:"redeemedTime"`   // 核销时间
}

func (x *RedeemCouponReply) Reset() {
	*x = RedeemCouponReply{}
	mi := &file_api_store_v1_coupon_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedeemCouponReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemCouponReply) ProtoMessage() {}

func (x *RedeemCouponReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_coupon_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemCouponReply.ProtoReflect.Descriptor instead.
func (*RedeemCouponReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_coupon_proto_rawDescGZIP(), []int{12}
}

func (x *RedeemCouponReply) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *RedeemCouponReply) GetRedeemedTime() string {
	if x != nil {
		return x.RedeemedTime
	}
	return ""
}

var File_api_store_v1_coupon_proto protoreflect.FileDescriptor

var file_api_store_v1_coupon_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x23, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69,
	0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xeb, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75,
	0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22,
	0x3e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x22, 0x5d, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32,
	0xae, 0x05, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x1a,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x66, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x0c, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x42, 0xb4, 0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02,
	0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74,
	0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_coupon_proto_rawDescOnce sync.Once
	file_api_store_v1_coupon_proto_rawDescData = file_api_store_v1_coupon_proto_rawDesc
)

func file_api_store_v1_coupon_proto_rawDescGZIP() []byte {
	file_api_store_v1_coupon_proto_rawDescOnce.Do(func() {
		file_api_store_v1_coupon_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_coupon_proto_rawDescData)
	})
	return file_api_store_v1_coupon_proto_rawDescData
}

var file_api_store_v1_coupon_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_store_v1_coupon_proto_goTypes = []any{
	(*CreateCouponRequest)(nil),     // 0: api.store.v1.CreateCouponRequest
	(*CreateCouponReply)(nil),       // 1: api.store.v1.CreateCouponReply
	(*DeleteCouponByIDRequest)(nil), // 2: api.store.v1.DeleteCouponByIDRequest
	(*DeleteCouponByIDReply)(nil),   // 3: api.store.v1.DeleteCouponByIDReply
	(*UpdateCouponByIDRequest)(nil), // 4: api.store.v1.UpdateCouponByIDRequest
	(*UpdateCouponByIDReply)(nil),   // 5: api.store.v1.UpdateCouponByIDReply
	(*Coupon)(nil),                  // 6: api.store.v1.Coupon
	(*GetCouponByIDRequest)(nil),    // 7: api.store.v1.GetCouponByIDRequest
	(*GetCouponByIDReply)(nil),      // 8: api.store.v1.GetCouponByIDReply
	(*ListCouponRequest)(nil),       // 9: api.store.v1.ListCouponRequest
	(*ListCouponReply)(nil),         // 10: api.store.v1.ListCouponReply
	(*RedeemCouponRequest)(nil),     // 11: api.store.v1.RedeemCouponRequest
	(*RedeemCouponReply)(nil),       // 12: api.store.v1.RedeemCouponReply
	(*types.Params)(nil),            // 13: api.types.Params
}
var file_api_store_v1_coupon_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetCouponByIDReply.coupon:type_name -> api.store.v1.Coupon
	13, // 1: api.store.v1.ListCouponRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListCouponReply.coupons:type_name -> api.store.v1.Coupon
	0,  // 3: api.store.v1.coupon.Create:input_type -> api.store.v1.CreateCouponRequest
	2,  // 4: api.store.v1.coupon.DeleteByID:input_type -> api.store.v1.DeleteCouponByIDRequest
	4,  // 5: api.store.v1.coupon.UpdateByID:input_type -> api.store.v1.UpdateCouponByIDRequest
	7,  // 6: api.store.v1.coupon.GetByID:input_type -> api.store.v1.GetCouponByIDRequest
	9,  // 7: api.store.v1.coupon.List:input_type -> api.store.v1.ListCouponRequest
	11, // 8: api.store.v1.coupon.RedeemCoupon:input_type -> api.store.v1.RedeemCouponRequest
	1,  // 9: api.store.v1.coupon.Create:output_type -> api.store.v1.CreateCouponReply
	3,  // 10: api.store.v1.coupon.DeleteByID:output_type -> api.store.v1.DeleteCouponByIDReply
	5,  // 11: api.store.v1.coupon.UpdateByID:output_type -> api.store.v1.UpdateCouponByIDReply
	8,  // 12: api.store.v1.coupon.GetByID:output_type -> api.store.v1.GetCouponByIDReply
	10, // 13: api.store.v1.coupon.List:output_type -> api.store.v1.ListCouponReply
	12, // 14: api.store.v1.coupon.RedeemCoupon:output_type -> api.store.v1.RedeemCouponReply
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_store_v1_coupon_proto_init() }
func file_api_store_v1_coupon_proto_init() {
	if File_api_store_v1_coupon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_coupon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_coupon_proto_goTypes,
		DependencyIndexes: file_api_store_v1_coupon_proto_depIdxs,
		MessageInfos:      file_api_store_v1_coupon_proto_msgTypes,
	}.Build()
	File_api_store_v1_coupon_proto = out.File
	file_api_store_v1_coupon_proto_rawDesc = nil
	file_api_store_v1_coupon_proto_goTypes = nil
	file_api_store_v1_coupon_proto_depIdxs = nil
}
