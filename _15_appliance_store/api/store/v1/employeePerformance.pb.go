// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/employeePerformance.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEmployeePerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeID  uint32 `protobuf:"varint,1,opt,name=employeeID,proto3" json:"employeeID"`  // 员工ID
	Month       string `protobuf:"bytes,2,opt,name=month,proto3" json:"month"`             // 统计月份(YYYY-MM)
	SalesAmount string `protobuf:"bytes,3,opt,name=salesAmount,proto3" json:"salesAmount"` // 销售额
	Commission  string `protobuf:"bytes,4,opt,name=commission,proto3" json:"commission"`   // 提成金额
}

func (x *CreateEmployeePerformanceRequest) Reset() {
	*x = CreateEmployeePerformanceRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEmployeePerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmployeePerformanceRequest) ProtoMessage() {}

func (x *CreateEmployeePerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmployeePerformanceRequest.ProtoReflect.Descriptor instead.
func (*CreateEmployeePerformanceRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEmployeePerformanceRequest) GetEmployeeID() uint32 {
	if x != nil {
		return x.EmployeeID
	}
	return 0
}

func (x *CreateEmployeePerformanceRequest) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *CreateEmployeePerformanceRequest) GetSalesAmount() string {
	if x != nil {
		return x.SalesAmount
	}
	return ""
}

func (x *CreateEmployeePerformanceRequest) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type CreateEmployeePerformanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateEmployeePerformanceReply) Reset() {
	*x = CreateEmployeePerformanceReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEmployeePerformanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmployeePerformanceReply) ProtoMessage() {}

func (x *CreateEmployeePerformanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmployeePerformanceReply.ProtoReflect.Descriptor instead.
func (*CreateEmployeePerformanceReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEmployeePerformanceReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteEmployeePerformanceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteEmployeePerformanceByIDRequest) Reset() {
	*x = DeleteEmployeePerformanceByIDRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEmployeePerformanceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmployeePerformanceByIDRequest) ProtoMessage() {}

func (x *DeleteEmployeePerformanceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmployeePerformanceByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmployeePerformanceByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteEmployeePerformanceByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteEmployeePerformanceByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEmployeePerformanceByIDReply) Reset() {
	*x = DeleteEmployeePerformanceByIDReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEmployeePerformanceByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmployeePerformanceByIDReply) ProtoMessage() {}

func (x *DeleteEmployeePerformanceByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmployeePerformanceByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteEmployeePerformanceByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{3}
}

type UpdateEmployeePerformanceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`         // 记录ID
	EmployeeID  uint32 `protobuf:"varint,2,opt,name=employeeID,proto3" json:"employeeID"`  // 员工ID
	Month       string `protobuf:"bytes,3,opt,name=month,proto3" json:"month"`             // 统计月份(YYYY-MM)
	SalesAmount string `protobuf:"bytes,4,opt,name=salesAmount,proto3" json:"salesAmount"` // 销售额
	Commission  string `protobuf:"bytes,5,opt,name=commission,proto3" json:"commission"`   // 提成金额
}

func (x *UpdateEmployeePerformanceByIDRequest) Reset() {
	*x = UpdateEmployeePerformanceByIDRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEmployeePerformanceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmployeePerformanceByIDRequest) ProtoMessage() {}

func (x *UpdateEmployeePerformanceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmployeePerformanceByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmployeePerformanceByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEmployeePerformanceByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEmployeePerformanceByIDRequest) GetEmployeeID() uint32 {
	if x != nil {
		return x.EmployeeID
	}
	return 0
}

func (x *UpdateEmployeePerformanceByIDRequest) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *UpdateEmployeePerformanceByIDRequest) GetSalesAmount() string {
	if x != nil {
		return x.SalesAmount
	}
	return ""
}

func (x *UpdateEmployeePerformanceByIDRequest) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type UpdateEmployeePerformanceByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEmployeePerformanceByIDReply) Reset() {
	*x = UpdateEmployeePerformanceByIDReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEmployeePerformanceByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmployeePerformanceByIDReply) ProtoMessage() {}

func (x *UpdateEmployeePerformanceByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmployeePerformanceByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateEmployeePerformanceByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{5}
}

type EmployeePerformance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                  // 记录ID
	EmployeeID  uint32 `protobuf:"varint,2,opt,name=employeeID,proto3" json:"employeeID"`  // 员工ID
	Month       string `protobuf:"bytes,3,opt,name=month,proto3" json:"month"`             // 统计月份(YYYY-MM)
	SalesAmount string `protobuf:"bytes,4,opt,name=salesAmount,proto3" json:"salesAmount"` // 销售额
	Commission  string `protobuf:"bytes,5,opt,name=commission,proto3" json:"commission"`   // 提成金额
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`     // 创建时间
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt"`     // 更新时间
}

func (x *EmployeePerformance) Reset() {
	*x = EmployeePerformance{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployeePerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeePerformance) ProtoMessage() {}

func (x *EmployeePerformance) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeePerformance.ProtoReflect.Descriptor instead.
func (*EmployeePerformance) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{6}
}

func (x *EmployeePerformance) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployeePerformance) GetEmployeeID() uint32 {
	if x != nil {
		return x.EmployeeID
	}
	return 0
}

func (x *EmployeePerformance) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *EmployeePerformance) GetSalesAmount() string {
	if x != nil {
		return x.SalesAmount
	}
	return ""
}

func (x *EmployeePerformance) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

func (x *EmployeePerformance) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EmployeePerformance) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetEmployeePerformanceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetEmployeePerformanceByIDRequest) Reset() {
	*x = GetEmployeePerformanceByIDRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeePerformanceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeePerformanceByIDRequest) ProtoMessage() {}

func (x *GetEmployeePerformanceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeePerformanceByIDRequest.ProtoReflect.Descriptor instead.
func (*GetEmployeePerformanceByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{7}
}

func (x *GetEmployeePerformanceByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEmployeePerformanceByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeePerformance *EmployeePerformance `protobuf:"bytes,1,opt,name=employeePerformance,proto3" json:"employeePerformance"`
}

func (x *GetEmployeePerformanceByIDReply) Reset() {
	*x = GetEmployeePerformanceByIDReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmployeePerformanceByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeePerformanceByIDReply) ProtoMessage() {}

func (x *GetEmployeePerformanceByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeePerformanceByIDReply.ProtoReflect.Descriptor instead.
func (*GetEmployeePerformanceByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{8}
}

func (x *GetEmployeePerformanceByIDReply) GetEmployeePerformance() *EmployeePerformance {
	if x != nil {
		return x.EmployeePerformance
	}
	return nil
}

type ListEmployeePerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListEmployeePerformanceRequest) Reset() {
	*x = ListEmployeePerformanceRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmployeePerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmployeePerformanceRequest) ProtoMessage() {}

func (x *ListEmployeePerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmployeePerformanceRequest.ProtoReflect.Descriptor instead.
func (*ListEmployeePerformanceRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{9}
}

func (x *ListEmployeePerformanceRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListEmployeePerformanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total                int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	EmployeePerformances []*EmployeePerformance `protobuf:"bytes,2,rep,name=employeePerformances,proto3" json:"employeePerformances"`
}

func (x *ListEmployeePerformanceReply) Reset() {
	*x = ListEmployeePerformanceReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEmployeePerformanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmployeePerformanceReply) ProtoMessage() {}

func (x *ListEmployeePerformanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmployeePerformanceReply.ProtoReflect.Descriptor instead.
func (*ListEmployeePerformanceReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{10}
}

func (x *ListEmployeePerformanceReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListEmployeePerformanceReply) GetEmployeePerformances() []*EmployeePerformance {
	if x != nil {
		return x.EmployeePerformances
	}
	return nil
}

type CalculateSalesCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeID uint32 `protobuf:"varint,1,opt,name=employeeID,proto3" json:"employeeID"` // 员工ID
	Month      string `protobuf:"bytes,2,opt,name=month,proto3" json:"month"`            // 月份格式YYYY-MM
}

func (x *CalculateSalesCommissionRequest) Reset() {
	*x = CalculateSalesCommissionRequest{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateSalesCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateSalesCommissionRequest) ProtoMessage() {}

func (x *CalculateSalesCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateSalesCommissionRequest.ProtoReflect.Descriptor instead.
func (*CalculateSalesCommissionRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{11}
}

func (x *CalculateSalesCommissionRequest) GetEmployeeID() uint32 {
	if x != nil {
		return x.EmployeeID
	}
	return 0
}

func (x *CalculateSalesCommissionRequest) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

type CalculateSalesCommissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSales       string `protobuf:"bytes,1,opt,name=totalSales,proto3" json:"totalSales"`             // 总销售额
	CommissionAmount string `protobuf:"bytes,2,opt,name=commissionAmount,proto3" json:"commissionAmount"` // 应得提成金额
	QualifiedOrders  int32  `protobuf:"varint,3,opt,name=qualifiedOrders,proto3" json:"qualifiedOrders"`  // 符合提成条件的订单数
}

func (x *CalculateSalesCommissionReply) Reset() {
	*x = CalculateSalesCommissionReply{}
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateSalesCommissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateSalesCommissionReply) ProtoMessage() {}

func (x *CalculateSalesCommissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_employeePerformance_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateSalesCommissionReply.ProtoReflect.Descriptor instead.
func (*CalculateSalesCommissionReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_employeePerformance_proto_rawDescGZIP(), []int{12}
}

func (x *CalculateSalesCommissionReply) GetTotalSales() string {
	if x != nil {
		return x.TotalSales
	}
	return ""
}

func (x *CalculateSalesCommissionReply) GetCommissionAmount() string {
	if x != nil {
		return x.CommissionAmount
	}
	return ""
}

func (x *CalculateSalesCommissionReply) GetQualifiedOrders() int32 {
	if x != nil {
		return x.QualifiedOrders
	}
	return 0
}

var File_api_store_v1_employeePerformance_proto protoreflect.FileDescriptor

var file_api_store_v1_employeePerformance_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69,
	0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc4, 0x01, 0x0a,
	0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75,
	0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd9, 0x01, 0x0a, 0x13, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a,
	0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x76, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x13, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x13, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x55, 0x0a, 0x14,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x14, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x32, 0x0d, 0x5e, 0x5c,
	0x64, 0x7b, 0x34, 0x7d, 0x2d, 0x5c, 0x64, 0x7b, 0x32, 0x7d, 0x24, 0x52, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x22, 0x95, 0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x32, 0xc3, 0x07, 0x0a, 0x13, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x2a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a,
	0x01, 0x2a, 0x1a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x93, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8d, 0x01, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xb3, 0x01, 0x0a, 0x18, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0xb4, 0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02,
	0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65,
	0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74,
	0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_employeePerformance_proto_rawDescOnce sync.Once
	file_api_store_v1_employeePerformance_proto_rawDescData = file_api_store_v1_employeePerformance_proto_rawDesc
)

func file_api_store_v1_employeePerformance_proto_rawDescGZIP() []byte {
	file_api_store_v1_employeePerformance_proto_rawDescOnce.Do(func() {
		file_api_store_v1_employeePerformance_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_employeePerformance_proto_rawDescData)
	})
	return file_api_store_v1_employeePerformance_proto_rawDescData
}

var file_api_store_v1_employeePerformance_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_store_v1_employeePerformance_proto_goTypes = []any{
	(*CreateEmployeePerformanceRequest)(nil),     // 0: api.store.v1.CreateEmployeePerformanceRequest
	(*CreateEmployeePerformanceReply)(nil),       // 1: api.store.v1.CreateEmployeePerformanceReply
	(*DeleteEmployeePerformanceByIDRequest)(nil), // 2: api.store.v1.DeleteEmployeePerformanceByIDRequest
	(*DeleteEmployeePerformanceByIDReply)(nil),   // 3: api.store.v1.DeleteEmployeePerformanceByIDReply
	(*UpdateEmployeePerformanceByIDRequest)(nil), // 4: api.store.v1.UpdateEmployeePerformanceByIDRequest
	(*UpdateEmployeePerformanceByIDReply)(nil),   // 5: api.store.v1.UpdateEmployeePerformanceByIDReply
	(*EmployeePerformance)(nil),                  // 6: api.store.v1.EmployeePerformance
	(*GetEmployeePerformanceByIDRequest)(nil),    // 7: api.store.v1.GetEmployeePerformanceByIDRequest
	(*GetEmployeePerformanceByIDReply)(nil),      // 8: api.store.v1.GetEmployeePerformanceByIDReply
	(*ListEmployeePerformanceRequest)(nil),       // 9: api.store.v1.ListEmployeePerformanceRequest
	(*ListEmployeePerformanceReply)(nil),         // 10: api.store.v1.ListEmployeePerformanceReply
	(*CalculateSalesCommissionRequest)(nil),      // 11: api.store.v1.CalculateSalesCommissionRequest
	(*CalculateSalesCommissionReply)(nil),        // 12: api.store.v1.CalculateSalesCommissionReply
	(*types.Params)(nil),                         // 13: api.types.Params
}
var file_api_store_v1_employeePerformance_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetEmployeePerformanceByIDReply.employeePerformance:type_name -> api.store.v1.EmployeePerformance
	13, // 1: api.store.v1.ListEmployeePerformanceRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListEmployeePerformanceReply.employeePerformances:type_name -> api.store.v1.EmployeePerformance
	0,  // 3: api.store.v1.employeePerformance.Create:input_type -> api.store.v1.CreateEmployeePerformanceRequest
	2,  // 4: api.store.v1.employeePerformance.DeleteByID:input_type -> api.store.v1.DeleteEmployeePerformanceByIDRequest
	4,  // 5: api.store.v1.employeePerformance.UpdateByID:input_type -> api.store.v1.UpdateEmployeePerformanceByIDRequest
	7,  // 6: api.store.v1.employeePerformance.GetByID:input_type -> api.store.v1.GetEmployeePerformanceByIDRequest
	9,  // 7: api.store.v1.employeePerformance.List:input_type -> api.store.v1.ListEmployeePerformanceRequest
	11, // 8: api.store.v1.employeePerformance.CalculateSalesCommission:input_type -> api.store.v1.CalculateSalesCommissionRequest
	1,  // 9: api.store.v1.employeePerformance.Create:output_type -> api.store.v1.CreateEmployeePerformanceReply
	3,  // 10: api.store.v1.employeePerformance.DeleteByID:output_type -> api.store.v1.DeleteEmployeePerformanceByIDReply
	5,  // 11: api.store.v1.employeePerformance.UpdateByID:output_type -> api.store.v1.UpdateEmployeePerformanceByIDReply
	8,  // 12: api.store.v1.employeePerformance.GetByID:output_type -> api.store.v1.GetEmployeePerformanceByIDReply
	10, // 13: api.store.v1.employeePerformance.List:output_type -> api.store.v1.ListEmployeePerformanceReply
	12, // 14: api.store.v1.employeePerformance.CalculateSalesCommission:output_type -> api.store.v1.CalculateSalesCommissionReply
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_store_v1_employeePerformance_proto_init() }
func file_api_store_v1_employeePerformance_proto_init() {
	if File_api_store_v1_employeePerformance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_employeePerformance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_employeePerformance_proto_goTypes,
		DependencyIndexes: file_api_store_v1_employeePerformance_proto_depIdxs,
		MessageInfos:      file_api_store_v1_employeePerformance_proto_msgTypes,
	}.Build()
	File_api_store_v1_employeePerformance_proto = out.File
	file_api_store_v1_employeePerformance_proto_rawDesc = nil
	file_api_store_v1_employeePerformance_proto_goTypes = nil
	file_api_store_v1_employeePerformance_proto_depIdxs = nil
}
