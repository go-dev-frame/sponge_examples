// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/transferOrder.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTransferOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStore     uint32 `protobuf:"varint,1,opt,name=fromStore,proto3" json:"fromStore"`         // 调出门店
	ToStore       uint32 `protobuf:"varint,2,opt,name=toStore,proto3" json:"toStore"`             // 调入门店
	TotalQuantity int32  `protobuf:"varint,3,opt,name=totalQuantity,proto3" json:"totalQuantity"` // 总调拨数量
	Status        int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status"`               // 状态(0待处理/1已完成)
	CompleteTime  string `protobuf:"bytes,5,opt,name=completeTime,proto3" json:"completeTime"`    // 完成时间
}

func (x *CreateTransferOrderRequest) Reset() {
	*x = CreateTransferOrderRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransferOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransferOrderRequest) ProtoMessage() {}

func (x *CreateTransferOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransferOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateTransferOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTransferOrderRequest) GetFromStore() uint32 {
	if x != nil {
		return x.FromStore
	}
	return 0
}

func (x *CreateTransferOrderRequest) GetToStore() uint32 {
	if x != nil {
		return x.ToStore
	}
	return 0
}

func (x *CreateTransferOrderRequest) GetTotalQuantity() int32 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *CreateTransferOrderRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateTransferOrderRequest) GetCompleteTime() string {
	if x != nil {
		return x.CompleteTime
	}
	return ""
}

type CreateTransferOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateTransferOrderReply) Reset() {
	*x = CreateTransferOrderReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransferOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransferOrderReply) ProtoMessage() {}

func (x *CreateTransferOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransferOrderReply.ProtoReflect.Descriptor instead.
func (*CreateTransferOrderReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTransferOrderReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTransferOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteTransferOrderByIDRequest) Reset() {
	*x = DeleteTransferOrderByIDRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTransferOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTransferOrderByIDRequest) ProtoMessage() {}

func (x *DeleteTransferOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTransferOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteTransferOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTransferOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTransferOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTransferOrderByIDReply) Reset() {
	*x = DeleteTransferOrderByIDReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTransferOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTransferOrderByIDReply) ProtoMessage() {}

func (x *DeleteTransferOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTransferOrderByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteTransferOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{3}
}

type UpdateTransferOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`               // 调拨单号
	FromStore     uint32 `protobuf:"varint,2,opt,name=fromStore,proto3" json:"fromStore"`         // 调出门店
	ToStore       uint32 `protobuf:"varint,3,opt,name=toStore,proto3" json:"toStore"`             // 调入门店
	TotalQuantity int32  `protobuf:"varint,4,opt,name=totalQuantity,proto3" json:"totalQuantity"` // 总调拨数量
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`               // 状态(0待处理/1已完成)
	CompleteTime  string `protobuf:"bytes,6,opt,name=completeTime,proto3" json:"completeTime"`    // 完成时间
}

func (x *UpdateTransferOrderByIDRequest) Reset() {
	*x = UpdateTransferOrderByIDRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransferOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransferOrderByIDRequest) ProtoMessage() {}

func (x *UpdateTransferOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransferOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransferOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTransferOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTransferOrderByIDRequest) GetFromStore() uint32 {
	if x != nil {
		return x.FromStore
	}
	return 0
}

func (x *UpdateTransferOrderByIDRequest) GetToStore() uint32 {
	if x != nil {
		return x.ToStore
	}
	return 0
}

func (x *UpdateTransferOrderByIDRequest) GetTotalQuantity() int32 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *UpdateTransferOrderByIDRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateTransferOrderByIDRequest) GetCompleteTime() string {
	if x != nil {
		return x.CompleteTime
	}
	return ""
}

type UpdateTransferOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTransferOrderByIDReply) Reset() {
	*x = UpdateTransferOrderByIDReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransferOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransferOrderByIDReply) ProtoMessage() {}

func (x *UpdateTransferOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransferOrderByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateTransferOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{5}
}

type TransferOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`                        // 调拨单号
	FromStore     uint32 `protobuf:"varint,2,opt,name=fromStore,proto3" json:"fromStore"`         // 调出门店
	ToStore       uint32 `protobuf:"varint,3,opt,name=toStore,proto3" json:"toStore"`             // 调入门店
	TotalQuantity int32  `protobuf:"varint,4,opt,name=totalQuantity,proto3" json:"totalQuantity"` // 总调拨数量
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status"`               // 状态(0待处理/1已完成)
	CreatedAt     string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt"`          // 创建时间
	CompleteTime  string `protobuf:"bytes,7,opt,name=completeTime,proto3" json:"completeTime"`    // 完成时间
}

func (x *TransferOrder) Reset() {
	*x = TransferOrder{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOrder) ProtoMessage() {}

func (x *TransferOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOrder.ProtoReflect.Descriptor instead.
func (*TransferOrder) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{6}
}

func (x *TransferOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferOrder) GetFromStore() uint32 {
	if x != nil {
		return x.FromStore
	}
	return 0
}

func (x *TransferOrder) GetToStore() uint32 {
	if x != nil {
		return x.ToStore
	}
	return 0
}

func (x *TransferOrder) GetTotalQuantity() int32 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *TransferOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TransferOrder) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TransferOrder) GetCompleteTime() string {
	if x != nil {
		return x.CompleteTime
	}
	return ""
}

type GetTransferOrderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetTransferOrderByIDRequest) Reset() {
	*x = GetTransferOrderByIDRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransferOrderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferOrderByIDRequest) ProtoMessage() {}

func (x *GetTransferOrderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferOrderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTransferOrderByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransferOrderByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTransferOrderByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferOrder *TransferOrder `protobuf:"bytes,1,opt,name=transferOrder,proto3" json:"transferOrder"`
}

func (x *GetTransferOrderByIDReply) Reset() {
	*x = GetTransferOrderByIDReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransferOrderByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferOrderByIDReply) ProtoMessage() {}

func (x *GetTransferOrderByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferOrderByIDReply.ProtoReflect.Descriptor instead.
func (*GetTransferOrderByIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransferOrderByIDReply) GetTransferOrder() *TransferOrder {
	if x != nil {
		return x.TransferOrder
	}
	return nil
}

type ListTransferOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListTransferOrderRequest) Reset() {
	*x = ListTransferOrderRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransferOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransferOrderRequest) ProtoMessage() {}

func (x *ListTransferOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransferOrderRequest.ProtoReflect.Descriptor instead.
func (*ListTransferOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{9}
}

func (x *ListTransferOrderRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListTransferOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	TransferOrders []*TransferOrder `protobuf:"bytes,2,rep,name=transferOrders,proto3" json:"transferOrders"`
}

func (x *ListTransferOrderReply) Reset() {
	*x = ListTransferOrderReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransferOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransferOrderReply) ProtoMessage() {}

func (x *ListTransferOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransferOrderReply.ProtoReflect.Descriptor instead.
func (*ListTransferOrderReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{10}
}

func (x *ListTransferOrderReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTransferOrderReply) GetTransferOrders() []*TransferOrder {
	if x != nil {
		return x.TransferOrders
	}
	return nil
}

type PrecheckTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStore uint32          `protobuf:"varint,1,opt,name=fromStore,proto3" json:"fromStore"` // 调出店铺
	ToStore   uint32          `protobuf:"varint,2,opt,name=toStore,proto3" json:"toStore"`     // 调入店铺
	Items     []*TransferItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`          // 调拨商品清单
}

func (x *PrecheckTransferRequest) Reset() {
	*x = PrecheckTransferRequest{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrecheckTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrecheckTransferRequest) ProtoMessage() {}

func (x *PrecheckTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrecheckTransferRequest.ProtoReflect.Descriptor instead.
func (*PrecheckTransferRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{11}
}

func (x *PrecheckTransferRequest) GetFromStore() uint32 {
	if x != nil {
		return x.FromStore
	}
	return 0
}

func (x *PrecheckTransferRequest) GetToStore() uint32 {
	if x != nil {
		return x.ToStore
	}
	return 0
}

func (x *PrecheckTransferRequest) GetItems() []*TransferItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type TransferItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuID    uint32 `protobuf:"varint,1,opt,name=skuID,proto3" json:"skuID"`       // SKU编号
	Quantity uint32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity"` // 调拨数量
}

func (x *TransferItem) Reset() {
	*x = TransferItem{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferItem) ProtoMessage() {}

func (x *TransferItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferItem.ProtoReflect.Descriptor instead.
func (*TransferItem) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{12}
}

func (x *TransferItem) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *TransferItem) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PrecheckTransferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*PrecheckTransferReply_StockStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status"` // 各SKU预检结果
}

func (x *PrecheckTransferReply) Reset() {
	*x = PrecheckTransferReply{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrecheckTransferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrecheckTransferReply) ProtoMessage() {}

func (x *PrecheckTransferReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrecheckTransferReply.ProtoReflect.Descriptor instead.
func (*PrecheckTransferReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{13}
}

func (x *PrecheckTransferReply) GetStatus() []*PrecheckTransferReply_StockStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type PrecheckTransferReply_StockStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuID        uint32 `protobuf:"varint,1,opt,name=skuID,proto3" json:"skuID"`
	Available    bool   `protobuf:"varint,2,opt,name=available,proto3" json:"available"`       // 是否可调拨
	AvailableQty int32  `protobuf:"varint,3,opt,name=availableQty,proto3" json:"availableQty"` // 可用库存量
}

func (x *PrecheckTransferReply_StockStatus) Reset() {
	*x = PrecheckTransferReply_StockStatus{}
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrecheckTransferReply_StockStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrecheckTransferReply_StockStatus) ProtoMessage() {}

func (x *PrecheckTransferReply_StockStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_transferOrder_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrecheckTransferReply_StockStatus.ProtoReflect.Descriptor instead.
func (*PrecheckTransferReply_StockStatus) Descriptor() ([]byte, []int) {
	return file_api_store_v1_transferOrder_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PrecheckTransferReply_StockStatus) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *PrecheckTransferReply_StockStatus) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *PrecheckTransferReply_StockStatus) GetAvailableQty() int32 {
	if x != nil {
		return x.AvailableQty
	}
	return 0
}

var File_api_store_v1_transferOrder_proto protoreflect.FileDescriptor

var file_api_store_v1_transferOrder_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a,
	0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0xe0, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69,
	0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x43, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x41, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x73, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x83,
	0x01, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x65, 0x0a, 0x0b, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x74, 0x79,
	0x32, 0xb7, 0x06, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x7c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x2a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8d, 0x01,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01,
	0x2a, 0x1a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x81, 0x01,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x7b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x89,
	0x01, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0xb4, 0x01, 0x92, 0x41, 0x99,
	0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64,
	0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68,
	0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_transferOrder_proto_rawDescOnce sync.Once
	file_api_store_v1_transferOrder_proto_rawDescData = file_api_store_v1_transferOrder_proto_rawDesc
)

func file_api_store_v1_transferOrder_proto_rawDescGZIP() []byte {
	file_api_store_v1_transferOrder_proto_rawDescOnce.Do(func() {
		file_api_store_v1_transferOrder_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_transferOrder_proto_rawDescData)
	})
	return file_api_store_v1_transferOrder_proto_rawDescData
}

var file_api_store_v1_transferOrder_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_store_v1_transferOrder_proto_goTypes = []any{
	(*CreateTransferOrderRequest)(nil),        // 0: api.store.v1.CreateTransferOrderRequest
	(*CreateTransferOrderReply)(nil),          // 1: api.store.v1.CreateTransferOrderReply
	(*DeleteTransferOrderByIDRequest)(nil),    // 2: api.store.v1.DeleteTransferOrderByIDRequest
	(*DeleteTransferOrderByIDReply)(nil),      // 3: api.store.v1.DeleteTransferOrderByIDReply
	(*UpdateTransferOrderByIDRequest)(nil),    // 4: api.store.v1.UpdateTransferOrderByIDRequest
	(*UpdateTransferOrderByIDReply)(nil),      // 5: api.store.v1.UpdateTransferOrderByIDReply
	(*TransferOrder)(nil),                     // 6: api.store.v1.TransferOrder
	(*GetTransferOrderByIDRequest)(nil),       // 7: api.store.v1.GetTransferOrderByIDRequest
	(*GetTransferOrderByIDReply)(nil),         // 8: api.store.v1.GetTransferOrderByIDReply
	(*ListTransferOrderRequest)(nil),          // 9: api.store.v1.ListTransferOrderRequest
	(*ListTransferOrderReply)(nil),            // 10: api.store.v1.ListTransferOrderReply
	(*PrecheckTransferRequest)(nil),           // 11: api.store.v1.PrecheckTransferRequest
	(*TransferItem)(nil),                      // 12: api.store.v1.TransferItem
	(*PrecheckTransferReply)(nil),             // 13: api.store.v1.PrecheckTransferReply
	(*PrecheckTransferReply_StockStatus)(nil), // 14: api.store.v1.PrecheckTransferReply.StockStatus
	(*types.Params)(nil),                      // 15: api.types.Params
}
var file_api_store_v1_transferOrder_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetTransferOrderByIDReply.transferOrder:type_name -> api.store.v1.TransferOrder
	15, // 1: api.store.v1.ListTransferOrderRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListTransferOrderReply.transferOrders:type_name -> api.store.v1.TransferOrder
	12, // 3: api.store.v1.PrecheckTransferRequest.items:type_name -> api.store.v1.TransferItem
	14, // 4: api.store.v1.PrecheckTransferReply.status:type_name -> api.store.v1.PrecheckTransferReply.StockStatus
	0,  // 5: api.store.v1.transferOrder.Create:input_type -> api.store.v1.CreateTransferOrderRequest
	2,  // 6: api.store.v1.transferOrder.DeleteByID:input_type -> api.store.v1.DeleteTransferOrderByIDRequest
	4,  // 7: api.store.v1.transferOrder.UpdateByID:input_type -> api.store.v1.UpdateTransferOrderByIDRequest
	7,  // 8: api.store.v1.transferOrder.GetByID:input_type -> api.store.v1.GetTransferOrderByIDRequest
	9,  // 9: api.store.v1.transferOrder.List:input_type -> api.store.v1.ListTransferOrderRequest
	11, // 10: api.store.v1.transferOrder.PrecheckTransfer:input_type -> api.store.v1.PrecheckTransferRequest
	1,  // 11: api.store.v1.transferOrder.Create:output_type -> api.store.v1.CreateTransferOrderReply
	3,  // 12: api.store.v1.transferOrder.DeleteByID:output_type -> api.store.v1.DeleteTransferOrderByIDReply
	5,  // 13: api.store.v1.transferOrder.UpdateByID:output_type -> api.store.v1.UpdateTransferOrderByIDReply
	8,  // 14: api.store.v1.transferOrder.GetByID:output_type -> api.store.v1.GetTransferOrderByIDReply
	10, // 15: api.store.v1.transferOrder.List:output_type -> api.store.v1.ListTransferOrderReply
	13, // 16: api.store.v1.transferOrder.PrecheckTransfer:output_type -> api.store.v1.PrecheckTransferReply
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_store_v1_transferOrder_proto_init() }
func file_api_store_v1_transferOrder_proto_init() {
	if File_api_store_v1_transferOrder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_transferOrder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_transferOrder_proto_goTypes,
		DependencyIndexes: file_api_store_v1_transferOrder_proto_depIdxs,
		MessageInfos:      file_api_store_v1_transferOrder_proto_msgTypes,
	}.Build()
	File_api_store_v1_transferOrder_proto = out.File
	file_api_store_v1_transferOrder_proto_rawDesc = nil
	file_api_store_v1_transferOrder_proto_goTypes = nil
	file_api_store_v1_transferOrder_proto_depIdxs = nil
}
