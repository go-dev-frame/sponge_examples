// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.2
// source: api/store/v1/checkDetail.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "store/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCheckDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID   string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID"`      // 盘点单号
	SkuID     uint32 `protobuf:"varint,2,opt,name=skuID,proto3" json:"skuID"`         // SKU ID
	SystemQty int32  `protobuf:"varint,3,opt,name=systemQty,proto3" json:"systemQty"` // 系统库存
	ActualQty int32  `protobuf:"varint,4,opt,name=actualQty,proto3" json:"actualQty"` // 实际库存
}

func (x *CreateCheckDetailRequest) Reset() {
	*x = CreateCheckDetailRequest{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCheckDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckDetailRequest) ProtoMessage() {}

func (x *CreateCheckDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckDetailRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCheckDetailRequest) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

func (x *CreateCheckDetailRequest) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *CreateCheckDetailRequest) GetSystemQty() int32 {
	if x != nil {
		return x.SystemQty
	}
	return 0
}

func (x *CreateCheckDetailRequest) GetActualQty() int32 {
	if x != nil {
		return x.ActualQty
	}
	return 0
}

type CreateCheckDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID"`
}

func (x *CreateCheckDetailReply) Reset() {
	*x = CreateCheckDetailReply{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCheckDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckDetailReply) ProtoMessage() {}

func (x *CreateCheckDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckDetailReply.ProtoReflect.Descriptor instead.
func (*CreateCheckDetailReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCheckDetailReply) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

type DeleteCheckDetailByCheckIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID" uri:"checkID"`
}

func (x *DeleteCheckDetailByCheckIDRequest) Reset() {
	*x = DeleteCheckDetailByCheckIDRequest{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCheckDetailByCheckIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckDetailByCheckIDRequest) ProtoMessage() {}

func (x *DeleteCheckDetailByCheckIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckDetailByCheckIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteCheckDetailByCheckIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCheckDetailByCheckIDRequest) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

type DeleteCheckDetailByCheckIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCheckDetailByCheckIDReply) Reset() {
	*x = DeleteCheckDetailByCheckIDReply{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCheckDetailByCheckIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckDetailByCheckIDReply) ProtoMessage() {}

func (x *DeleteCheckDetailByCheckIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckDetailByCheckIDReply.ProtoReflect.Descriptor instead.
func (*DeleteCheckDetailByCheckIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{3}
}

type UpdateCheckDetailByCheckIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID   string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID" uri:"checkID"` // 盘点单号
	SkuID     uint32 `protobuf:"varint,2,opt,name=skuID,proto3" json:"skuID"`                  // SKU ID
	SystemQty int32  `protobuf:"varint,3,opt,name=systemQty,proto3" json:"systemQty"`          // 系统库存
	ActualQty int32  `protobuf:"varint,4,opt,name=actualQty,proto3" json:"actualQty"`          // 实际库存
}

func (x *UpdateCheckDetailByCheckIDRequest) Reset() {
	*x = UpdateCheckDetailByCheckIDRequest{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCheckDetailByCheckIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckDetailByCheckIDRequest) ProtoMessage() {}

func (x *UpdateCheckDetailByCheckIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckDetailByCheckIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckDetailByCheckIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCheckDetailByCheckIDRequest) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

func (x *UpdateCheckDetailByCheckIDRequest) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *UpdateCheckDetailByCheckIDRequest) GetSystemQty() int32 {
	if x != nil {
		return x.SystemQty
	}
	return 0
}

func (x *UpdateCheckDetailByCheckIDRequest) GetActualQty() int32 {
	if x != nil {
		return x.ActualQty
	}
	return 0
}

type UpdateCheckDetailByCheckIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCheckDetailByCheckIDReply) Reset() {
	*x = UpdateCheckDetailByCheckIDReply{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCheckDetailByCheckIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckDetailByCheckIDReply) ProtoMessage() {}

func (x *UpdateCheckDetailByCheckIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckDetailByCheckIDReply.ProtoReflect.Descriptor instead.
func (*UpdateCheckDetailByCheckIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{5}
}

type CheckDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID   string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID"`      // 盘点单号
	SkuID     uint32 `protobuf:"varint,2,opt,name=skuID,proto3" json:"skuID"`         // SKU ID
	SystemQty int32  `protobuf:"varint,3,opt,name=systemQty,proto3" json:"systemQty"` // 系统库存
	ActualQty int32  `protobuf:"varint,4,opt,name=actualQty,proto3" json:"actualQty"` // 实际库存
}

func (x *CheckDetail) Reset() {
	*x = CheckDetail{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDetail) ProtoMessage() {}

func (x *CheckDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDetail.ProtoReflect.Descriptor instead.
func (*CheckDetail) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{6}
}

func (x *CheckDetail) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

func (x *CheckDetail) GetSkuID() uint32 {
	if x != nil {
		return x.SkuID
	}
	return 0
}

func (x *CheckDetail) GetSystemQty() int32 {
	if x != nil {
		return x.SystemQty
	}
	return 0
}

func (x *CheckDetail) GetActualQty() int32 {
	if x != nil {
		return x.ActualQty
	}
	return 0
}

type GetCheckDetailByCheckIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckID string `protobuf:"bytes,1,opt,name=checkID,proto3" json:"checkID" uri:"checkID"`
}

func (x *GetCheckDetailByCheckIDRequest) Reset() {
	*x = GetCheckDetailByCheckIDRequest{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckDetailByCheckIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckDetailByCheckIDRequest) ProtoMessage() {}

func (x *GetCheckDetailByCheckIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckDetailByCheckIDRequest.ProtoReflect.Descriptor instead.
func (*GetCheckDetailByCheckIDRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{7}
}

func (x *GetCheckDetailByCheckIDRequest) GetCheckID() string {
	if x != nil {
		return x.CheckID
	}
	return ""
}

type GetCheckDetailByCheckIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckDetail *CheckDetail `protobuf:"bytes,1,opt,name=checkDetail,proto3" json:"checkDetail"`
}

func (x *GetCheckDetailByCheckIDReply) Reset() {
	*x = GetCheckDetailByCheckIDReply{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckDetailByCheckIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckDetailByCheckIDReply) ProtoMessage() {}

func (x *GetCheckDetailByCheckIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckDetailByCheckIDReply.ProtoReflect.Descriptor instead.
func (*GetCheckDetailByCheckIDReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{8}
}

func (x *GetCheckDetailByCheckIDReply) GetCheckDetail() *CheckDetail {
	if x != nil {
		return x.CheckDetail
	}
	return nil
}

type ListCheckDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListCheckDetailRequest) Reset() {
	*x = ListCheckDetailRequest{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCheckDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckDetailRequest) ProtoMessage() {}

func (x *ListCheckDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckDetailRequest.ProtoReflect.Descriptor instead.
func (*ListCheckDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{9}
}

func (x *ListCheckDetailRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListCheckDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	CheckDetails []*CheckDetail `protobuf:"bytes,2,rep,name=checkDetails,proto3" json:"checkDetails"`
}

func (x *ListCheckDetailReply) Reset() {
	*x = ListCheckDetailReply{}
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCheckDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckDetailReply) ProtoMessage() {}

func (x *ListCheckDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_store_v1_checkDetail_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckDetailReply.ProtoReflect.Descriptor instead.
func (*ListCheckDetailReply) Descriptor() ([]byte, []int) {
	return file_api_store_v1_checkDetail_proto_rawDescGZIP(), []int{10}
}

func (x *ListCheckDetailReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCheckDetailReply) GetCheckDetails() []*CheckDetail {
	if x != nil {
		return x.CheckDetails
	}
	return nil
}

var File_api_store_v1_checkDetail_proto protoreflect.FileDescriptor

var file_api_store_v1_checkDetail_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x15,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x58,
	0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e,
	0x03, 0x0d, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x21,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x19, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x0d,
	0x75, 0x72, 0x69, 0x3a, 0x22, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x52, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x79, 0x0a, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x51, 0x74, 0x79, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x44, 0x22, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x22, 0x5b, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42,
	0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x43, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x6b, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d, 0x0a,
	0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0c,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xc7, 0x05, 0x0a,
	0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x76, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x7d, 0x12,
	0x9b, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x1a, 0x1d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x7d, 0x12, 0x8f, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x7d, 0x12,
	0x75, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0xb4, 0x01, 0x92, 0x41, 0x99, 0x01, 0x12, 0x15, 0x0a,
	0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32,
	0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a,
	0x38, 0x30, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46,
	0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02,
	0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f,
	0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x5a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_store_v1_checkDetail_proto_rawDescOnce sync.Once
	file_api_store_v1_checkDetail_proto_rawDescData = file_api_store_v1_checkDetail_proto_rawDesc
)

func file_api_store_v1_checkDetail_proto_rawDescGZIP() []byte {
	file_api_store_v1_checkDetail_proto_rawDescOnce.Do(func() {
		file_api_store_v1_checkDetail_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_store_v1_checkDetail_proto_rawDescData)
	})
	return file_api_store_v1_checkDetail_proto_rawDescData
}

var file_api_store_v1_checkDetail_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_store_v1_checkDetail_proto_goTypes = []any{
	(*CreateCheckDetailRequest)(nil),          // 0: api.store.v1.CreateCheckDetailRequest
	(*CreateCheckDetailReply)(nil),            // 1: api.store.v1.CreateCheckDetailReply
	(*DeleteCheckDetailByCheckIDRequest)(nil), // 2: api.store.v1.DeleteCheckDetailByCheckIDRequest
	(*DeleteCheckDetailByCheckIDReply)(nil),   // 3: api.store.v1.DeleteCheckDetailByCheckIDReply
	(*UpdateCheckDetailByCheckIDRequest)(nil), // 4: api.store.v1.UpdateCheckDetailByCheckIDRequest
	(*UpdateCheckDetailByCheckIDReply)(nil),   // 5: api.store.v1.UpdateCheckDetailByCheckIDReply
	(*CheckDetail)(nil),                       // 6: api.store.v1.CheckDetail
	(*GetCheckDetailByCheckIDRequest)(nil),    // 7: api.store.v1.GetCheckDetailByCheckIDRequest
	(*GetCheckDetailByCheckIDReply)(nil),      // 8: api.store.v1.GetCheckDetailByCheckIDReply
	(*ListCheckDetailRequest)(nil),            // 9: api.store.v1.ListCheckDetailRequest
	(*ListCheckDetailReply)(nil),              // 10: api.store.v1.ListCheckDetailReply
	(*types.Params)(nil),                      // 11: api.types.Params
}
var file_api_store_v1_checkDetail_proto_depIdxs = []int32{
	6,  // 0: api.store.v1.GetCheckDetailByCheckIDReply.checkDetail:type_name -> api.store.v1.CheckDetail
	11, // 1: api.store.v1.ListCheckDetailRequest.params:type_name -> api.types.Params
	6,  // 2: api.store.v1.ListCheckDetailReply.checkDetails:type_name -> api.store.v1.CheckDetail
	0,  // 3: api.store.v1.checkDetail.Create:input_type -> api.store.v1.CreateCheckDetailRequest
	2,  // 4: api.store.v1.checkDetail.DeleteByCheckID:input_type -> api.store.v1.DeleteCheckDetailByCheckIDRequest
	4,  // 5: api.store.v1.checkDetail.UpdateByCheckID:input_type -> api.store.v1.UpdateCheckDetailByCheckIDRequest
	7,  // 6: api.store.v1.checkDetail.GetByCheckID:input_type -> api.store.v1.GetCheckDetailByCheckIDRequest
	9,  // 7: api.store.v1.checkDetail.List:input_type -> api.store.v1.ListCheckDetailRequest
	1,  // 8: api.store.v1.checkDetail.Create:output_type -> api.store.v1.CreateCheckDetailReply
	3,  // 9: api.store.v1.checkDetail.DeleteByCheckID:output_type -> api.store.v1.DeleteCheckDetailByCheckIDReply
	5,  // 10: api.store.v1.checkDetail.UpdateByCheckID:output_type -> api.store.v1.UpdateCheckDetailByCheckIDReply
	8,  // 11: api.store.v1.checkDetail.GetByCheckID:output_type -> api.store.v1.GetCheckDetailByCheckIDReply
	10, // 12: api.store.v1.checkDetail.List:output_type -> api.store.v1.ListCheckDetailReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_store_v1_checkDetail_proto_init() }
func file_api_store_v1_checkDetail_proto_init() {
	if File_api_store_v1_checkDetail_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_store_v1_checkDetail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_store_v1_checkDetail_proto_goTypes,
		DependencyIndexes: file_api_store_v1_checkDetail_proto_depIdxs,
		MessageInfos:      file_api_store_v1_checkDetail_proto_msgTypes,
	}.Build()
	File_api_store_v1_checkDetail_proto = out.File
	file_api_store_v1_checkDetail_proto_rawDesc = nil
	file_api_store_v1_checkDetail_proto_goTypes = nil
	file_api_store_v1_checkDetail_proto_depIdxs = nil
}
