// Code generated by https://github.com/zhufuyi/sponge

package handler

import (
	"context"

	"github.com/zhufuyi/sponge/pkg/gin/middleware"
	stockV1 "stock/api/stock/v1"
	"stock/internal/service"
)

var _ stockV1.CallbackLogicer = (*callbackHandler)(nil)

type callbackHandler struct {
	server stockV1.CallbackServer
}

// NewCallbackHandler create a handler
func NewCallbackHandler() stockV1.CallbackLogicer {
	return &callbackHandler{
		server: service.NewCallbackServer(),
	}
}

// QueryPrepared 反查数据
func (h *callbackHandler) QueryPrepared(ctx context.Context, req *stockV1.QueryPreparedRequest) (*stockV1.QueryPreparedReply, error) {
	_, ctx = middleware.AdaptCtx(ctx)
	return h.server.QueryPrepared(ctx, req)
}

// DeleteCache 删除缓存
func (h *callbackHandler) DeleteCache(ctx context.Context, req *stockV1.DeleteCacheRequest) (*stockV1.DeleteCacheReply, error) {

	return h.server.DeleteCache(ctx, req)
}
