definitions:
  types.Column:
    properties:
      exp:
        description: expressions, which default to = when the value is null, have
          =, ! =, >, >=, <, <=, like
        type: string
      logic:
        description: logical type, defaults to and when value is null, only &(and),
          ||(or)
        type: string
      name:
        description: column name
        type: string
      value:
        description: column value
    type: object
  types.CreateCourseRequest:
    properties:
      code:
        description: 课程代号
        type: string
      college:
        description: 学院
        type: string
      credit:
        description: 学分
        type: integer
      name:
        description: 课程名称
        type: string
      place:
        description: 上课地点
        type: string
      semester:
        description: 学期
        type: string
      time:
        description: 上课时间
        type: string
    type: object
  types.CreateTeachRequest:
    properties:
      courseId:
        description: 课程id
        type: integer
      courseName:
        description: 课程名称
        type: string
      score:
        description: 学生评价教学质量，5个等级：A,B,C,D,E
        type: string
      teacherId:
        description: 老师id
        type: integer
      teacherName:
        description: 老师名称
        type: string
    type: object
  types.CreateTeacherRequest:
    properties:
      age:
        description: 年龄
        type: integer
      avatar:
        description: 头像
        type: string
      birthday:
        description: 出生日期
        type: string
      college:
        description: 学院
        type: string
      email:
        description: 邮件
        type: string
      gender:
        description: 性别，1:男，2:女，其他值:未知
        type: integer
      name:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号码
        type: string
      profile:
        description: 个人简介
        type: string
      schoolName:
        description: 学校名称
        type: string
      title:
        description: 职称
        type: string
    type: object
  types.DeleteCoursesByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.DeleteTeachersByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.DeleteTeachsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetCoursesByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetTeachersByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.GetTeachsByIDsRequest:
    properties:
      ids:
        description: id list
        items:
          type: integer
        minItems: 1
        type: array
    type: object
  types.Params:
    properties:
      columns:
        description: query conditions
        items:
          $ref: '#/definitions/types.Column'
        type: array
      page:
        description: page number, starting from page 0
        minimum: 0
        type: integer
      size:
        description: lines per page
        type: integer
      sort:
        description: sorted fields, multi-column sorting separated by commas
        type: string
    type: object
  types.Result:
    properties:
      code:
        description: return code
        type: integer
      data:
        description: return data
      msg:
        description: return information description
        type: string
    type: object
  types.UpdateCourseByIDRequest:
    properties:
      code:
        description: 课程代号
        type: string
      college:
        description: 学院
        type: string
      credit:
        description: 学分
        type: integer
      id:
        description: uint64 id
        type: integer
      name:
        description: 课程名称
        type: string
      place:
        description: 上课地点
        type: string
      semester:
        description: 学期
        type: string
      time:
        description: 上课时间
        type: string
    type: object
  types.UpdateTeachByIDRequest:
    properties:
      courseId:
        description: 课程id
        type: integer
      courseName:
        description: 课程名称
        type: string
      id:
        description: uint64 id
        type: integer
      score:
        description: 学生评价教学质量，5个等级：A,B,C,D,E
        type: string
      teacherId:
        description: 老师id
        type: integer
      teacherName:
        description: 老师名称
        type: string
    type: object
  types.UpdateTeacherByIDRequest:
    properties:
      age:
        description: 年龄
        type: integer
      avatar:
        description: 头像
        type: string
      birthday:
        description: 出生日期
        type: string
      college:
        description: 学院
        type: string
      email:
        description: 邮件
        type: string
      gender:
        description: 性别，1:男，2:女，其他值:未知
        type: integer
      id:
        description: uint64 id
        type: integer
      name:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号码
        type: string
      profile:
        description: 个人简介
        type: string
      schoolName:
        description: 学校名称
        type: string
      title:
        description: 职称
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: http server api docs
  title: user api docs
  version: v0.0.0
paths:
  /api/v1/course:
    post:
      consumes:
      - application/json
      description: submit information to create course
      parameters:
      - description: course information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: create course
      tags:
      - course
  /api/v1/course/{id}:
    delete:
      consumes:
      - application/json
      description: delete course by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete course
      tags:
      - course
    get:
      consumes:
      - application/json
      description: get course detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get course detail
      tags:
      - course
    put:
      consumes:
      - application/json
      description: update course information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: course information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCourseByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: update course
      tags:
      - course
  /api/v1/course/delete/ids:
    post:
      consumes:
      - application/json
      description: delete courses by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteCoursesByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete courses
      tags:
      - course
  /api/v1/course/list:
    post:
      consumes:
      - application/json
      description: list of courses by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of courses by query parameters
      tags:
      - course
  /api/v1/course/list/ids:
    post:
      consumes:
      - application/json
      description: list of courses by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.GetCoursesByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of courses by batch id
      tags:
      - course
  /api/v1/teach:
    post:
      consumes:
      - application/json
      description: submit information to create teach
      parameters:
      - description: teach information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateTeachRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: create teach
      tags:
      - teach
  /api/v1/teach/{id}:
    delete:
      consumes:
      - application/json
      description: delete teach by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete teach
      tags:
      - teach
    get:
      consumes:
      - application/json
      description: get teach detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get teach detail
      tags:
      - teach
    put:
      consumes:
      - application/json
      description: update teach information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: teach information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTeachByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: update teach
      tags:
      - teach
  /api/v1/teach/delete/ids:
    post:
      consumes:
      - application/json
      description: delete teachs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteTeachsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete teachs
      tags:
      - teach
  /api/v1/teach/list:
    post:
      consumes:
      - application/json
      description: list of teachs by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of teachs by query parameters
      tags:
      - teach
  /api/v1/teach/list/ids:
    post:
      consumes:
      - application/json
      description: list of teachs by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.GetTeachsByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of teachs by batch id
      tags:
      - teach
  /api/v1/teacher:
    post:
      consumes:
      - application/json
      description: submit information to create teacher
      parameters:
      - description: teacher information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.CreateTeacherRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: create teacher
      tags:
      - teacher
  /api/v1/teacher/{id}:
    delete:
      consumes:
      - application/json
      description: delete teacher by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete teacher
      tags:
      - teacher
    get:
      consumes:
      - application/json
      description: get teacher detail by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: get teacher detail
      tags:
      - teacher
    put:
      consumes:
      - application/json
      description: update teacher information by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: teacher information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTeacherByIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: update teacher
      tags:
      - teacher
  /api/v1/teacher/delete/ids:
    post:
      consumes:
      - application/json
      description: delete teachers by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.DeleteTeachersByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: delete teachers
      tags:
      - teacher
  /api/v1/teacher/list:
    post:
      consumes:
      - application/json
      description: list of teachers by paging and conditions
      parameters:
      - description: query parameters
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.Params'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of teachers by query parameters
      tags:
      - teacher
  /api/v1/teacher/list/ids:
    post:
      consumes:
      - application/json
      description: list of teachers by batch id
      parameters:
      - description: id array
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.GetTeachersByIDsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Result'
      summary: list of teachers by batch id
      tags:
      - teacher
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer your-jwt-token" to Value
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
