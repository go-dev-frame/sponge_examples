// Code generated by https://github.com/zhufuyi/sponge

package service

import (
	"context"

	"google.golang.org/grpc"

	"github.com/zhufuyi/sponge/pkg/grpc/interceptor"
	"github.com/zhufuyi/sponge/pkg/logger"

	inventoryV1 "eshop/api/inventory/v1"
	"eshop/inventory/internal/ecode"
)

func init() {
	registerFns = append(registerFns, func(server *grpc.Server) {
		inventoryV1.RegisterInventoryServer(server, NewInventoryServer())
	})
}

var _ inventoryV1.InventoryServer = (*inventory)(nil)

type inventory struct {
	inventoryV1.UnimplementedInventoryServer

	// example:
	//		iDao dao.InventoryDao
}

// NewInventoryServer create a server
func NewInventoryServer() inventoryV1.InventoryServer {
	return &inventory{
		// example:
		//		iDao: dao.NewInventoryDao(
		//			model.GetDB(),
		//			cache.NewInventoryCache(model.GetCacheType()),
		//		),
	}
}

// GetByID get inventory by id
func (s *inventory) GetByID(ctx context.Context, req *inventoryV1.GetByIDRequest) (*inventoryV1.GetByIDReply, error) {
	err := req.Validate()
	if err != nil {
		logger.Warn("req.Validate error", logger.Err(err), logger.Any("req", req), interceptor.ServerCtxRequestIDField(ctx))
		return nil, ecode.StatusInvalidParams.Err()
	}

	// fill in the business logic code here

	return &inventoryV1.GetByIDReply{
		InventoryDetail: &inventoryV1.InventoryDetail{
			Id:      1,
			Num:     999,
			SoldNum: 111,
		},
	}, nil
}
