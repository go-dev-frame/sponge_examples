# Generate the go struct command: sponge config --server-dir=./serverDir

# app settings
app:
  name: "order_gw"  # server name
  env: "dev"                           # runtime environment, dev: development environment, prod: production environment, test: test environment
  version: "v0.0.0"
  host: "127.0.0.1"                  # domain or ip, for service registration
  enableHTTPProfile: false        # whether to turn on performance analysis, true:enable, false:disable
  enableStat: false                   # whether to turn on printing statistics, true:enable, false:disable
  enableMetrics: true               # whether to turn on indicator collection, true:enable, false:disable
  enableLimit: false                 # whether to turn on rate limiting (adaptive), true:on, false:off
  enableCircuitBreaker: false    # whether to turn on circuit breaker(adaptive), true:on, false:off
  enableTrace: false                 # whether to turn on trace, true:enable, false:disable, if true jaeger configuration must be set
  tracingSamplingRate: 1.0       # tracing sampling rate, between 0 and 1, 0 means no sampling, 1 means sampling all links
  registryDiscoveryType: ""       # registry and discovery types: consul, etcd, nacos, if empty, registration and discovery are not used
  cacheType: "memory"            # cache type, "memory" or "redis", if set to redis, must set redis configuration


# http server settings
http:
  port: 8080            # listen port
  readTimeout: 3     # read timeout, unit(second)
  writeTimeout: 60  # write timeout, unit(second), if enableHTTPProfile is true, it needs to be greater than 60s, the default value for pprof to do profiling is 60s


# grpc client settings, support for setting up multiple grpc clients
grpcClient:
  - name: "order"   # grpc service name, used for service discovery
    host: "127.0.0.1"                    # grpc service address, used for direct connection
    port: 8282                              # grpc service port
    registryDiscoveryType: ""         # registration and discovery types: consul, etcd, nacos, if empty, connecting to server using host and port
    enableLoadBalance: false         # whether to turn on the load balancer
    # clientSecure parameter setting
    # if type="", it means no secure connection, no need to fill in any parameters
    # if type="one-way", it means server-side certification, only the fields "serverName" and "certFile" should be filled in
    # if type="two-way", it means both client and server side certification, fill in all fields
    clientSecure:
      type: ""              # secures type, "", "one-way", "two-way"
      serverName: ""   # server name, e.g. *.foo.com
      caFile: ""            # client side ca file, valid only in "two-way", absolute path
      certFile: ""          # client side cert file, absolute path, if secureType="one-way", fill in server side cert file here
      keyFile: ""          # client side key file, valid only in "two-way", absolute path
    clientToken:
      enable: false      # whether to enable token authentication
      appID: ""           # app id
      appKey: ""         # app key


# logger settings
logger:
  level: "info"             # output log levels debug, info, warn, error, default is debug
  format: "console"     # output format, console or json, default is console
  isSave: false           # false:output to terminal, true:output to file, default is false


# redis settings
redis:
  # dsn format, [user]:<pass>@127.0.0.1:6379/[db], the default user is default, redis version 6.0 and above only supports user.
  dsn: "default:123456@192.168.3.37:6379/0"
  dialTimeout: 10        # connection timeout, unit(second)
  readTimeout: 2        # read timeout, unit(second)
  writeTimeout: 2       # write timeout, unit(second)


# jaeger settings
jaeger:
  agentHost: "192.168.3.37"
  agentPort: 6831


# consul settings
consul:
  addr: "192.168.3.37:8500"


# etcd settings
etcd:
  addrs: ["192.168.3.37:2379"]


# nacos settings, used in service registration discovery
nacosRd:
  ipAddr: "192.168.3.37"
  port: 8848
  namespaceID: "3454d2b5-2455-4d0e-bf6d-e033b086bb4c" # namespace id
