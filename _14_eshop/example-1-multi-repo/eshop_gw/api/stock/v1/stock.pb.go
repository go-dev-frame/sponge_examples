// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.2
// source: api/stock/v1/stock.proto

package v1

import (
	types "eshop_gw/api/types"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockDeductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID    uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"`
	ProductCount uint32 `protobuf:"varint,2,opt,name=productCount,proto3" json:"productCount"`
}

func (x *StockDeductRequest) Reset() {
	*x = StockDeductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockDeductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockDeductRequest) ProtoMessage() {}

func (x *StockDeductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockDeductRequest.ProtoReflect.Descriptor instead.
func (*StockDeductRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{0}
}

func (x *StockDeductRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *StockDeductRequest) GetProductCount() uint32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

type StockDeductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StockDeductReply) Reset() {
	*x = StockDeductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockDeductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockDeductReply) ProtoMessage() {}

func (x *StockDeductReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockDeductReply.ProtoReflect.Descriptor instead.
func (*StockDeductReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{1}
}

type StockDeductRevertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID    uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"`
	ProductCount uint32 `protobuf:"varint,2,opt,name=productCount,proto3" json:"productCount"`
}

func (x *StockDeductRevertRequest) Reset() {
	*x = StockDeductRevertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockDeductRevertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockDeductRevertRequest) ProtoMessage() {}

func (x *StockDeductRevertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockDeductRevertRequest.ProtoReflect.Descriptor instead.
func (*StockDeductRevertRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{2}
}

func (x *StockDeductRevertRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *StockDeductRevertRequest) GetProductCount() uint32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

type StockDeductRevertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StockDeductRevertReply) Reset() {
	*x = StockDeductRevertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockDeductRevertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockDeductRevertReply) ProtoMessage() {}

func (x *StockDeductRevertReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockDeductRevertReply.ProtoReflect.Descriptor instead.
func (*StockDeductRevertReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{3}
}

type SetFlashSaleStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"` // 商品id
	Stock     uint32 `protobuf:"varint,2,opt,name=stock,proto3" json:"stock"`         // 库存
}

func (x *SetFlashSaleStockRequest) Reset() {
	*x = SetFlashSaleStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFlashSaleStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFlashSaleStockRequest) ProtoMessage() {}

func (x *SetFlashSaleStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFlashSaleStockRequest.ProtoReflect.Descriptor instead.
func (*SetFlashSaleStockRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{4}
}

func (x *SetFlashSaleStockRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *SetFlashSaleStockRequest) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type SetFlashSaleStockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetFlashSaleStockReply) Reset() {
	*x = SetFlashSaleStockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFlashSaleStockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFlashSaleStockReply) ProtoMessage() {}

func (x *SetFlashSaleStockReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFlashSaleStockReply.ProtoReflect.Descriptor instead.
func (*SetFlashSaleStockReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{5}
}

type CreateStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID uint64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID"` // 商品id
	Stock     uint32 `protobuf:"varint,2,opt,name=stock,proto3" json:"stock"`         // 库存
}

func (x *CreateStockRequest) Reset() {
	*x = CreateStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockRequest) ProtoMessage() {}

func (x *CreateStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockRequest.ProtoReflect.Descriptor instead.
func (*CreateStockRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStockRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CreateStockRequest) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type CreateStockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateStockReply) Reset() {
	*x = CreateStockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStockReply) ProtoMessage() {}

func (x *CreateStockReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStockReply.ProtoReflect.Descriptor instead.
func (*CreateStockReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{7}
}

func (x *CreateStockReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteStockByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteStockByIDRequest) Reset() {
	*x = DeleteStockByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStockByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStockByIDRequest) ProtoMessage() {}

func (x *DeleteStockByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStockByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteStockByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteStockByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteStockByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStockByIDReply) Reset() {
	*x = DeleteStockByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStockByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStockByIDReply) ProtoMessage() {}

func (x *DeleteStockByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStockByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteStockByIDReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{9}
}

type UpdateStockByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
	ProductID uint64 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"` // 商品id
	Stock     uint32 `protobuf:"varint,3,opt,name=stock,proto3" json:"stock"`         // 库存
}

func (x *UpdateStockByIDRequest) Reset() {
	*x = UpdateStockByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockByIDRequest) ProtoMessage() {}

func (x *UpdateStockByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateStockByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStockByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStockByIDRequest) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *UpdateStockByIDRequest) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

type UpdateStockByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStockByIDReply) Reset() {
	*x = UpdateStockByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStockByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStockByIDReply) ProtoMessage() {}

func (x *UpdateStockByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStockByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateStockByIDReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{11}
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ProductID uint64 `protobuf:"varint,2,opt,name=productID,proto3" json:"productID"` // 商品id
	Stock     uint32 `protobuf:"varint,3,opt,name=stock,proto3" json:"stock"`         // 库存
	CreatedAt string `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{12}
}

func (x *Stock) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Stock) GetProductID() uint64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Stock) GetStock() uint32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Stock) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Stock) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetStockByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetStockByIDRequest) Reset() {
	*x = GetStockByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockByIDRequest) ProtoMessage() {}

func (x *GetStockByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockByIDRequest.ProtoReflect.Descriptor instead.
func (*GetStockByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{13}
}

func (x *GetStockByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetStockByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stock *Stock `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock"`
}

func (x *GetStockByIDReply) Reset() {
	*x = GetStockByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockByIDReply) ProtoMessage() {}

func (x *GetStockByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockByIDReply.ProtoReflect.Descriptor instead.
func (*GetStockByIDReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{14}
}

func (x *GetStockByIDReply) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

type ListStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListStockRequest) Reset() {
	*x = ListStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStockRequest) ProtoMessage() {}

func (x *ListStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStockRequest.ProtoReflect.Descriptor instead.
func (*ListStockRequest) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{15}
}

func (x *ListStockRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListStockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Stocks []*Stock `protobuf:"bytes,2,rep,name=stocks,proto3" json:"stocks"`
}

func (x *ListStockReply) Reset() {
	*x = ListStockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_stock_v1_stock_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStockReply) ProtoMessage() {}

func (x *ListStockReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_stock_v1_stock_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStockReply.ProtoReflect.Descriptor instead.
func (*ListStockReply) Descriptor() ([]byte, []int) {
	return file_api_stock_v1_stock_proto_rawDescGZIP(), []int{16}
}

func (x *ListStockReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStockReply) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_api_stock_v1_stock_proto protoreflect.FileDescriptor

var file_api_stock_v1_stock_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74,
	0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x12, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e, 0x0a, 0x18, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x4e, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53,
	0x61, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53,
	0x61, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x48, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x22, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75,
	0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x6b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08,
	0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x9a, 0x84,
	0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22,
	0x3d, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x53,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x32, 0xfa, 0x0a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0xb1, 0x01,
	0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x60, 0x92, 0x41, 0x3e, 0x0a, 0x08, 0x64, 0x74, 0x6d, 0x20, 0x73, 0x61, 0x67, 0x61, 0x12, 0x0c,
	0xe6, 0x89, 0xa3, 0xe5, 0x87, 0x8f, 0xe5, 0xba, 0x93, 0xe5, 0xad, 0x98, 0x1a, 0x24, 0xe6, 0x89,
	0xa3, 0xe5, 0x87, 0x8f, 0xe5, 0xba, 0x93, 0xe5, 0xad, 0x98, 0xef, 0xbc, 0x8c, 0x64, 0x74, 0x6d,
	0x20, 0x73, 0x61, 0x67, 0x61, 0x20, 0xe4, 0xba, 0x8b, 0xe5, 0x8a, 0xa1, 0xe6, 0xa8, 0xa1, 0xe5,
	0xbc, 0x8f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xc9, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x66, 0x92, 0x41, 0x3e, 0x0a, 0x08, 0x64, 0x74, 0x6d, 0x20,
	0x73, 0x61, 0x67, 0x61, 0x12, 0x0c, 0xe8, 0xa1, 0xa5, 0xe5, 0x81, 0xbf, 0xe5, 0xba, 0x93, 0xe5,
	0xad, 0x98, 0x1a, 0x24, 0xe8, 0xa1, 0xa5, 0xe5, 0x81, 0xbf, 0xe5, 0xba, 0x93, 0xe5, 0xad, 0x98,
	0xef, 0xbc, 0x8c, 0x64, 0x74, 0x6d, 0x20, 0x73, 0x61, 0x67, 0x61, 0x20, 0xe4, 0xba, 0x8b, 0xe5,
	0x8a, 0xa1, 0xe6, 0xa8, 0xa1, 0xe5, 0xbc, 0x8f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x64, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xd4, 0x01,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x71, 0x92, 0x41, 0x49, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x20, 0x64, 0x62, 0x26,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1b, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe7, 0xa7, 0x92,
	0xe6, 0x9d, 0x80, 0xe4, 0xba, 0xa7, 0xe5, 0x93, 0x81, 0xe7, 0x9a, 0x84, 0xe5, 0xba, 0x93, 0xe5,
	0xad, 0x98, 0x1a, 0x1b, 0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe7, 0xa7, 0x92, 0xe6, 0x9d, 0x80,
	0xe4, 0xba, 0xa7, 0xe5, 0x93, 0x81, 0xe7, 0x9a, 0x84, 0xe5, 0xba, 0x93, 0xe5, 0xad, 0x98, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x61, 0x6c,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x4d, 0x92, 0x41, 0x32, 0x12, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x22, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x20, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a,
	0x12, 0x97, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3f, 0x92, 0x41, 0x22, 0x12, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x12, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9a, 0x01, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x42, 0x92, 0x41, 0x22, 0x12, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x1a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x47, 0x92, 0x41, 0x2a, 0x12, 0x10, 0x67, 0x65,
	0x74, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x16,
	0x67, 0x65, 0x74, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xad, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x67, 0x92, 0x41, 0x47, 0x12, 0x1c, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x20, 0x62, 0x79, 0x20,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x27, 0x6c, 0x69, 0x73, 0x74,
	0x20, 0x6f, 0x66, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x42, 0xb8, 0x01, 0x5a, 0x18, 0x65, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x67, 0x77, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x92, 0x41, 0x9a,
	0x01, 0x12, 0x15, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64,
	0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68,
	0x6f, 0x73, 0x74, 0x3a, 0x33, 0x30, 0x33, 0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70, 0x65, 0x20, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_stock_v1_stock_proto_rawDescOnce sync.Once
	file_api_stock_v1_stock_proto_rawDescData = file_api_stock_v1_stock_proto_rawDesc
)

func file_api_stock_v1_stock_proto_rawDescGZIP() []byte {
	file_api_stock_v1_stock_proto_rawDescOnce.Do(func() {
		file_api_stock_v1_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_stock_v1_stock_proto_rawDescData)
	})
	return file_api_stock_v1_stock_proto_rawDescData
}

var file_api_stock_v1_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_stock_v1_stock_proto_goTypes = []interface{}{
	(*StockDeductRequest)(nil),       // 0: api.stock.v1.StockDeductRequest
	(*StockDeductReply)(nil),         // 1: api.stock.v1.StockDeductReply
	(*StockDeductRevertRequest)(nil), // 2: api.stock.v1.StockDeductRevertRequest
	(*StockDeductRevertReply)(nil),   // 3: api.stock.v1.StockDeductRevertReply
	(*SetFlashSaleStockRequest)(nil), // 4: api.stock.v1.SetFlashSaleStockRequest
	(*SetFlashSaleStockReply)(nil),   // 5: api.stock.v1.SetFlashSaleStockReply
	(*CreateStockRequest)(nil),       // 6: api.stock.v1.CreateStockRequest
	(*CreateStockReply)(nil),         // 7: api.stock.v1.CreateStockReply
	(*DeleteStockByIDRequest)(nil),   // 8: api.stock.v1.DeleteStockByIDRequest
	(*DeleteStockByIDReply)(nil),     // 9: api.stock.v1.DeleteStockByIDReply
	(*UpdateStockByIDRequest)(nil),   // 10: api.stock.v1.UpdateStockByIDRequest
	(*UpdateStockByIDReply)(nil),     // 11: api.stock.v1.UpdateStockByIDReply
	(*Stock)(nil),                    // 12: api.stock.v1.Stock
	(*GetStockByIDRequest)(nil),      // 13: api.stock.v1.GetStockByIDRequest
	(*GetStockByIDReply)(nil),        // 14: api.stock.v1.GetStockByIDReply
	(*ListStockRequest)(nil),         // 15: api.stock.v1.ListStockRequest
	(*ListStockReply)(nil),           // 16: api.stock.v1.ListStockReply
	(*types.Params)(nil),             // 17: api.types.Params
}
var file_api_stock_v1_stock_proto_depIdxs = []int32{
	12, // 0: api.stock.v1.GetStockByIDReply.stock:type_name -> api.stock.v1.Stock
	17, // 1: api.stock.v1.ListStockRequest.params:type_name -> api.types.Params
	12, // 2: api.stock.v1.ListStockReply.stocks:type_name -> api.stock.v1.Stock
	0,  // 3: api.stock.v1.stock.StockDeduct:input_type -> api.stock.v1.StockDeductRequest
	2,  // 4: api.stock.v1.stock.StockDeductRevert:input_type -> api.stock.v1.StockDeductRevertRequest
	4,  // 5: api.stock.v1.stock.SetFlashSaleStock:input_type -> api.stock.v1.SetFlashSaleStockRequest
	6,  // 6: api.stock.v1.stock.Create:input_type -> api.stock.v1.CreateStockRequest
	8,  // 7: api.stock.v1.stock.DeleteByID:input_type -> api.stock.v1.DeleteStockByIDRequest
	10, // 8: api.stock.v1.stock.UpdateByID:input_type -> api.stock.v1.UpdateStockByIDRequest
	13, // 9: api.stock.v1.stock.GetByID:input_type -> api.stock.v1.GetStockByIDRequest
	15, // 10: api.stock.v1.stock.List:input_type -> api.stock.v1.ListStockRequest
	1,  // 11: api.stock.v1.stock.StockDeduct:output_type -> api.stock.v1.StockDeductReply
	3,  // 12: api.stock.v1.stock.StockDeductRevert:output_type -> api.stock.v1.StockDeductRevertReply
	5,  // 13: api.stock.v1.stock.SetFlashSaleStock:output_type -> api.stock.v1.SetFlashSaleStockReply
	7,  // 14: api.stock.v1.stock.Create:output_type -> api.stock.v1.CreateStockReply
	9,  // 15: api.stock.v1.stock.DeleteByID:output_type -> api.stock.v1.DeleteStockByIDReply
	11, // 16: api.stock.v1.stock.UpdateByID:output_type -> api.stock.v1.UpdateStockByIDReply
	14, // 17: api.stock.v1.stock.GetByID:output_type -> api.stock.v1.GetStockByIDReply
	16, // 18: api.stock.v1.stock.List:output_type -> api.stock.v1.ListStockReply
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_stock_v1_stock_proto_init() }
func file_api_stock_v1_stock_proto_init() {
	if File_api_stock_v1_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_stock_v1_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockDeductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockDeductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockDeductRevertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockDeductRevertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFlashSaleStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFlashSaleStockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStockByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStockByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStockByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_stock_v1_stock_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_stock_v1_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_stock_v1_stock_proto_goTypes,
		DependencyIndexes: file_api_stock_v1_stock_proto_depIdxs,
		MessageInfos:      file_api_stock_v1_stock_proto_msgTypes,
	}.Build()
	File_api_stock_v1_stock_proto = out.File
	file_api_stock_v1_stock_proto_rawDesc = nil
	file_api_stock_v1_stock_proto_goTypes = nil
	file_api_stock_v1_stock_proto_depIdxs = nil
}
