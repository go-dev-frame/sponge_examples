// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: api/user/v1/teach.proto

package v1

import (
	
	
	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	types "user/api/types"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherId   int64  `protobuf:"varint,1,opt,name=teacherId,proto3" json:"teacherId"`    // 老师id
	TeacherName string `protobuf:"bytes,2,opt,name=teacherName,proto3" json:"teacherName"` // 老师名称
	CourseId    int64  `protobuf:"varint,3,opt,name=courseId,proto3" json:"courseId"`      // 课程id
	CourseName  string `protobuf:"bytes,4,opt,name=courseName,proto3" json:"courseName"`   // 课程名称
	Score       string `protobuf:"bytes,5,opt,name=score,proto3" json:"score"`             // 学生评价教学质量，5个等级：A,B,C,D,E
}

func (x *CreateTeachRequest) Reset() {
	*x = CreateTeachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeachRequest) ProtoMessage() {}

func (x *CreateTeachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeachRequest.ProtoReflect.Descriptor instead.
func (*CreateTeachRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeachRequest) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *CreateTeachRequest) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *CreateTeachRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CreateTeachRequest) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *CreateTeachRequest) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type CreateTeachReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateTeachReply) Reset() {
	*x = CreateTeachReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeachReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeachReply) ProtoMessage() {}

func (x *CreateTeachReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeachReply.ProtoReflect.Descriptor instead.
func (*CreateTeachReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeachReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTeachByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *DeleteTeachByIDRequest) Reset() {
	*x = DeleteTeachByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeachByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeachByIDRequest) ProtoMessage() {}

func (x *DeleteTeachByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeachByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeachByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTeachByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTeachByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTeachByIDReply) Reset() {
	*x = DeleteTeachByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeachByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeachByIDReply) ProtoMessage() {}

func (x *DeleteTeachByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeachByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteTeachByIDReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{3}
}

type DeleteTeachByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *DeleteTeachByIDsRequest) Reset() {
	*x = DeleteTeachByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeachByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeachByIDsRequest) ProtoMessage() {}

func (x *DeleteTeachByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeachByIDsRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeachByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTeachByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteTeachByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTeachByIDsReply) Reset() {
	*x = DeleteTeachByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeachByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeachByIDsReply) ProtoMessage() {}

func (x *DeleteTeachByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeachByIDsReply.ProtoReflect.Descriptor instead.
func (*DeleteTeachByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{5}
}

type UpdateTeachByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
	TeacherId   int64  `protobuf:"varint,2,opt,name=teacherId,proto3" json:"teacherId"`    // 老师id
	TeacherName string `protobuf:"bytes,3,opt,name=teacherName,proto3" json:"teacherName"` // 老师名称
	CourseId    int64  `protobuf:"varint,4,opt,name=courseId,proto3" json:"courseId"`      // 课程id
	CourseName  string `protobuf:"bytes,5,opt,name=courseName,proto3" json:"courseName"`   // 课程名称
	Score       string `protobuf:"bytes,6,opt,name=score,proto3" json:"score"`             // 学生评价教学质量，5个等级：A,B,C,D,E
}

func (x *UpdateTeachByIDRequest) Reset() {
	*x = UpdateTeachByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeachByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeachByIDRequest) ProtoMessage() {}

func (x *UpdateTeachByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeachByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeachByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTeachByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTeachByIDRequest) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *UpdateTeachByIDRequest) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *UpdateTeachByIDRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *UpdateTeachByIDRequest) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *UpdateTeachByIDRequest) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type UpdateTeachByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTeachByIDReply) Reset() {
	*x = UpdateTeachByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeachByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeachByIDReply) ProtoMessage() {}

func (x *UpdateTeachByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeachByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateTeachByIDReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{7}
}

type Teach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	CreatedAt   int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt   int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt"`
	TeacherId   int64  `protobuf:"varint,4,opt,name=teacherId,proto3" json:"teacherId"`    // 老师id
	TeacherName string `protobuf:"bytes,5,opt,name=teacherName,proto3" json:"teacherName"` // 老师名称
	CourseId    int64  `protobuf:"varint,6,opt,name=courseId,proto3" json:"courseId"`      // 课程id
	CourseName  string `protobuf:"bytes,7,opt,name=courseName,proto3" json:"courseName"`   // 课程名称
	Score       string `protobuf:"bytes,8,opt,name=score,proto3" json:"score"`             // 学生评价教学质量，5个等级：A,B,C,D,E
}

func (x *Teach) Reset() {
	*x = Teach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Teach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teach) ProtoMessage() {}

func (x *Teach) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teach.ProtoReflect.Descriptor instead.
func (*Teach) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{8}
}

func (x *Teach) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Teach) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Teach) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Teach) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *Teach) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *Teach) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Teach) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *Teach) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

type GetTeachByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" uri:"id"`
}

func (x *GetTeachByIDRequest) Reset() {
	*x = GetTeachByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeachByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeachByIDRequest) ProtoMessage() {}

func (x *GetTeachByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeachByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTeachByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{9}
}

func (x *GetTeachByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTeachByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teach *Teach `protobuf:"bytes,1,opt,name=teach,proto3" json:"teach"`
}

func (x *GetTeachByIDReply) Reset() {
	*x = GetTeachByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeachByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeachByIDReply) ProtoMessage() {}

func (x *GetTeachByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeachByIDReply.ProtoReflect.Descriptor instead.
func (*GetTeachByIDReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{10}
}

func (x *GetTeachByIDReply) GetTeach() *Teach {
	if x != nil {
		return x.Teach
	}
	return nil
}

type ListTeachByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ListTeachByIDsRequest) Reset() {
	*x = ListTeachByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeachByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeachByIDsRequest) ProtoMessage() {}

func (x *ListTeachByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeachByIDsRequest.ProtoReflect.Descriptor instead.
func (*ListTeachByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{11}
}

func (x *ListTeachByIDsRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListTeachByIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teachs []*Teach `protobuf:"bytes,1,rep,name=teachs,proto3" json:"teachs"`
}

func (x *ListTeachByIDsReply) Reset() {
	*x = ListTeachByIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeachByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeachByIDsReply) ProtoMessage() {}

func (x *ListTeachByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeachByIDsReply.ProtoReflect.Descriptor instead.
func (*ListTeachByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{12}
}

func (x *ListTeachByIDsReply) GetTeachs() []*Teach {
	if x != nil {
		return x.Teachs
	}
	return nil
}

type ListTeachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *types.Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *ListTeachRequest) Reset() {
	*x = ListTeachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeachRequest) ProtoMessage() {}

func (x *ListTeachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeachRequest.ProtoReflect.Descriptor instead.
func (*ListTeachRequest) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{13}
}

func (x *ListTeachRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListTeachReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Teachs []*Teach `protobuf:"bytes,2,rep,name=teachs,proto3" json:"teachs"`
}

func (x *ListTeachReply) Reset() {
	*x = ListTeachReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_user_v1_teach_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeachReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeachReply) ProtoMessage() {}

func (x *ListTeachReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_v1_teach_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeachReply.ProtoReflect.Descriptor instead.
func (*ListTeachReply) Descriptor() ([]byte, []int) {
	return file_api_user_v1_teach_proto_rawDescGZIP(), []int{14}
}

func (x *ListTeachReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTeachReply) GetTeachs() []*Teach {
	if x != nil {
		return x.Teachs
	}
	return nil
}

var File_api_user_v1_teach_proto protoreflect.FileDescriptor

var file_api_user_v1_teach_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67,
	0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69,
	0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xc9, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x9a, 0x84, 0x9e,
	0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe5, 0x01, 0x0a, 0x05, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69,
	0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x05,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x22, 0x29, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x41, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x06, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x73, 0x22, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x63, 0x68, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x06, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x73, 0x32, 0xbb, 0x09, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x54,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x39, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x12, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x1a, 0x22, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x12, 0x9c, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x46, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x29, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x12, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x1a,
	0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x20, 0x62, 0x79,
	0x20, 0x69, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x73, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x3d, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x63, 0x68, 0x12, 0x19, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x20, 0x69, 0x64, 0x1a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20,
	0x69, 0x64, 0x12, 0x9f, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x1a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x29, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x12, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x1a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x20, 0x62,
	0x79, 0x20, 0x69, 0x64, 0x12, 0x9b, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41,
	0x31, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x63, 0x68, 0x12, 0x10, 0x67, 0x65, 0x74, 0x20, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x16, 0x67, 0x65, 0x74, 0x20,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x62, 0x79, 0x20,
	0x69, 0x64, 0x12, 0xb6, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x42, 0x79, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x69, 0x64, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3f, 0x0a, 0x05, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x12, 0x1a, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x73, 0x20, 0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x69, 0x64, 0x1a,
	0x1a, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x73, 0x20,
	0x62, 0x79, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x69, 0x64, 0x12, 0xb2, 0x01, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x6e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x4e, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x63, 0x68, 0x12, 0x1c, 0x6c, 0x69, 0x73, 0x74, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x27, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x65, 0x61, 0x63, 0x68, 0x73, 0x20, 0x62, 0x79, 0x20, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0xb6, 0x01, 0x5a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x92, 0x41, 0x9d, 0x01, 0x12, 0x14, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32,
	0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30,
	0x38, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x4d, 0x0a, 0x4b, 0x0a, 0x0a,
	0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3d, 0x08, 0x02, 0x12, 0x28,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x20, 0x61, 0x20, 0x22, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20,
	0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77, 0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x20,
	0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_user_v1_teach_proto_rawDescOnce sync.Once
	file_api_user_v1_teach_proto_rawDescData = file_api_user_v1_teach_proto_rawDesc
)

func file_api_user_v1_teach_proto_rawDescGZIP() []byte {
	file_api_user_v1_teach_proto_rawDescOnce.Do(func() {
		file_api_user_v1_teach_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_user_v1_teach_proto_rawDescData)
	})
	return file_api_user_v1_teach_proto_rawDescData
}

var file_api_user_v1_teach_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_user_v1_teach_proto_goTypes = []interface{}{
	(*CreateTeachRequest)(nil),      // 0: api.user.v1.CreateTeachRequest
	(*CreateTeachReply)(nil),        // 1: api.user.v1.CreateTeachReply
	(*DeleteTeachByIDRequest)(nil),  // 2: api.user.v1.DeleteTeachByIDRequest
	(*DeleteTeachByIDReply)(nil),    // 3: api.user.v1.DeleteTeachByIDReply
	(*DeleteTeachByIDsRequest)(nil), // 4: api.user.v1.DeleteTeachByIDsRequest
	(*DeleteTeachByIDsReply)(nil),   // 5: api.user.v1.DeleteTeachByIDsReply
	(*UpdateTeachByIDRequest)(nil),  // 6: api.user.v1.UpdateTeachByIDRequest
	(*UpdateTeachByIDReply)(nil),    // 7: api.user.v1.UpdateTeachByIDReply
	(*Teach)(nil),                   // 8: api.user.v1.Teach
	(*GetTeachByIDRequest)(nil),     // 9: api.user.v1.GetTeachByIDRequest
	(*GetTeachByIDReply)(nil),       // 10: api.user.v1.GetTeachByIDReply
	(*ListTeachByIDsRequest)(nil),   // 11: api.user.v1.ListTeachByIDsRequest
	(*ListTeachByIDsReply)(nil),     // 12: api.user.v1.ListTeachByIDsReply
	(*ListTeachRequest)(nil),        // 13: api.user.v1.ListTeachRequest
	(*ListTeachReply)(nil),          // 14: api.user.v1.ListTeachReply
	(*types.Params)(nil),            // 15: types.Params
}
var file_api_user_v1_teach_proto_depIdxs = []int32{
	8,  // 0: api.user.v1.GetTeachByIDReply.teach:type_name -> api.user.v1.Teach
	8,  // 1: api.user.v1.ListTeachByIDsReply.teachs:type_name -> api.user.v1.Teach
	15, // 2: api.user.v1.ListTeachRequest.params:type_name -> types.Params
	8,  // 3: api.user.v1.ListTeachReply.teachs:type_name -> api.user.v1.Teach
	0,  // 4: api.user.v1.teachService.Create:input_type -> api.user.v1.CreateTeachRequest
	2,  // 5: api.user.v1.teachService.DeleteByID:input_type -> api.user.v1.DeleteTeachByIDRequest
	4,  // 6: api.user.v1.teachService.DeleteByIDs:input_type -> api.user.v1.DeleteTeachByIDsRequest
	6,  // 7: api.user.v1.teachService.UpdateByID:input_type -> api.user.v1.UpdateTeachByIDRequest
	9,  // 8: api.user.v1.teachService.GetByID:input_type -> api.user.v1.GetTeachByIDRequest
	11, // 9: api.user.v1.teachService.ListByIDs:input_type -> api.user.v1.ListTeachByIDsRequest
	13, // 10: api.user.v1.teachService.List:input_type -> api.user.v1.ListTeachRequest
	1,  // 11: api.user.v1.teachService.Create:output_type -> api.user.v1.CreateTeachReply
	3,  // 12: api.user.v1.teachService.DeleteByID:output_type -> api.user.v1.DeleteTeachByIDReply
	5,  // 13: api.user.v1.teachService.DeleteByIDs:output_type -> api.user.v1.DeleteTeachByIDsReply
	7,  // 14: api.user.v1.teachService.UpdateByID:output_type -> api.user.v1.UpdateTeachByIDReply
	10, // 15: api.user.v1.teachService.GetByID:output_type -> api.user.v1.GetTeachByIDReply
	12, // 16: api.user.v1.teachService.ListByIDs:output_type -> api.user.v1.ListTeachByIDsReply
	14, // 17: api.user.v1.teachService.List:output_type -> api.user.v1.ListTeachReply
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_user_v1_teach_proto_init() }
func file_api_user_v1_teach_proto_init() {
	if File_api_user_v1_teach_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_user_v1_teach_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeachReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeachByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeachByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeachByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeachByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeachByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeachByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Teach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeachByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeachByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeachByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeachByIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_user_v1_teach_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeachReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_user_v1_teach_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_user_v1_teach_proto_goTypes,
		DependencyIndexes: file_api_user_v1_teach_proto_depIdxs,
		MessageInfos:      file_api_user_v1_teach_proto_msgTypes,
	}.Build()
	File_api_user_v1_teach_proto = out.File
	file_api_user_v1_teach_proto_rawDesc = nil
	file_api_user_v1_teach_proto_goTypes = nil
	file_api_user_v1_teach_proto_depIdxs = nil
}
