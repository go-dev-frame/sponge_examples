syntax = "proto3";

package api.creation.v1;

//import "tagger/tagger.proto";
import "validate/validate.proto";

option go_package = "community_gw/api/creation/v1;v1";

service LikeService {
	// 点赞
	rpc Create (CreateLikeRequest) returns (CreateLikeReply) {}
	// 取消点赞
	rpc Delete (DeleteLikeRequest) returns (DeleteLikeReply) {}
	// 获取帖子点赞列表
	rpc ListPost (ListPostLikeRequest) returns (ListPostLikeReply) {}
	// 获取评论点赞列表
	rpc ListComment (ListCommentLikeRequest) returns (ListCommentLikeReply) {}
}

message LikeInfo {
	uint64 id = 1;
	uint64 userId = 2;
	int32 objType = 3;
	uint64 objId = 4;
	int32 status = 5;
	int64 createdAt = 6;
	int64 updatedAt = 7;
}

message CreateLikeRequest {
	uint64 userId = 1 [(validate.rules).uint64.gte  = 1];
	int32 objType = 2 [(validate.rules).int32  = {gte:1, lte: 2}];
	uint64 objId = 3 [(validate.rules).uint64.gte  = 1];
}

message CreateLikeReply {}

message DeleteLikeRequest {
	uint64 userId = 1 [(validate.rules).uint64.gte  = 1];
	int32 objType = 2 [(validate.rules).int32  = {gte:1, lte: 2}];
	uint64 objId = 3 [(validate.rules).uint64.gte  = 1];
}

message DeleteLikeReply {}

message ListPostLikeRequest {
	uint64 postId = 2 [(validate.rules).uint64.gte  = 1];
	int32 page = 3 [(validate.rules).int32.gte  = 0];
	int32 limit = 4 [(validate.rules).int32  = {gt:0, lte: 100}];
}

message ListPostLikeReply {
	repeated LikeInfo likes = 1;
	int64 total = 2;
}

message ListCommentLikeRequest {
	uint64 commentId = 2 [(validate.rules).uint64.gte  = 1];
	int32 page = 3 [(validate.rules).int32.gte  = 0];
	int32 limit = 4 [(validate.rules).int32  = {gt:0, lte: 100}];
}

message ListCommentLikeReply {
	repeated LikeInfo likes = 1;
	int64 total = 2;
}
